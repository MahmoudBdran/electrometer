define(['dart_sdk', 'packages/image/src/util/clip_line.dart', 'packages/image/src/draw/draw_pixel.dart', 'packages/image/src/util/point.dart'], (function load__packages__image__src__draw__draw_line_dart(dart_sdk, packages__image__src__util__clip_line$46dart, packages__image__src__draw__draw_pixel$46dart, packages__image__src__util__point$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const clip_line = packages__image__src__util__clip_line$46dart.src__util__clip_line;
  const draw_pixel = packages__image__src__draw__draw_pixel$46dart.src__draw__draw_pixel;
  const point = packages__image__src__util__point$46dart.src__util__point;
  var draw_line = Object.create(dart.library);
  var draw_circle = Object.create(dart.library);
  var $_get = dartx._get;
  var $floor = dartx.floor;
  var $abs = dartx.abs;
  var $truncate = dartx.truncate;
  var $toInt = dartx.toInt;
  var $compareTo = dartx.compareTo;
  var $sort = dartx.sort;
  var $first = dartx.first;
  var $sublist = dartx.sublist;
  var $add = dartx.add;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    intToint: () => (T.intToint = dart.constFn(dart.fnType(core.int, [core.int])))(),
    PointAndPointToint: () => (T.PointAndPointToint = dart.constFn(dart.fnType(core.int, [point.Point, point.Point])))(),
    JSArrayOfPoint: () => (T.JSArrayOfPoint = dart.constFn(_interceptors.JSArray$(point.Point)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/image-3.0.8/lib/src/draw/draw_line.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/image-3.0.8/lib/src/draw/draw_circle.dart"
  ];
  draw_line.drawLine = function drawLine(image, x1, y1, x2, y2, color, opts) {
    if (image == null) dart.nullFailed(I[0], 12, 22, "image");
    if (x1 == null) dart.nullFailed(I[0], 12, 33, "x1");
    if (y1 == null) dart.nullFailed(I[0], 12, 41, "y1");
    if (x2 == null) dart.nullFailed(I[0], 12, 49, "x2");
    if (y2 == null) dart.nullFailed(I[0], 12, 57, "y2");
    if (color == null) dart.nullFailed(I[0], 12, 65, "color");
    let antialias = opts && 'antialias' in opts ? opts.antialias : false;
    if (antialias == null) dart.nullFailed(I[0], 13, 11, "antialias");
    let thickness = opts && 'thickness' in opts ? opts.thickness : 1;
    if (thickness == null) dart.nullFailed(I[0], 13, 34, "thickness");
    let line = T.JSArrayOfint().of([x1, y1, x2, y2]);
    if (!dart.test(clip_line.clipLine(line, T.JSArrayOfint().of([0, 0, dart.notNull(image.width) - 1, dart.notNull(image.height) - 1])))) {
      return image;
    }
    x1 = line[$_get](0);
    y1 = line[$_get](1);
    x2 = line[$_get](2);
    y2 = line[$_get](3);
    let dx = dart.notNull(x2) - dart.notNull(x1);
    let dy = dart.notNull(y2) - dart.notNull(y1);
    let radius = (dart.notNull(thickness) / 2.0)[$floor]();
    if (dx === 0 && dy === 0) {
      thickness === 1 ? draw_pixel.drawPixel(image, x1, y1, color) : draw_circle.fillCircle(image, x1, y1, radius, color);
      return image;
    }
    if (dx === 0) {
      if (dy < 0) {
        for (let y = y2; dart.notNull(y) <= dart.notNull(y1); y = dart.notNull(y) + 1) {
          if (dart.notNull(thickness) <= 1) {
            draw_pixel.drawPixel(image, x1, y, color);
          } else {
            for (let i = 0; i < dart.notNull(thickness); i = i + 1) {
              draw_pixel.drawPixel(image, dart.notNull(x1) - radius + i, y, color);
            }
          }
        }
      } else {
        for (let y = y1; dart.notNull(y) <= dart.notNull(y2); y = dart.notNull(y) + 1) {
          if (dart.notNull(thickness) <= 1) {
            draw_pixel.drawPixel(image, x1, y, color);
          } else {
            for (let i = 0; i < dart.notNull(thickness); i = i + 1) {
              draw_pixel.drawPixel(image, dart.notNull(x1) - radius + i, y, color);
            }
          }
        }
      }
      return image;
    } else if (dy === 0) {
      if (dx < 0) {
        for (let x = x2; dart.notNull(x) <= dart.notNull(x1); x = dart.notNull(x) + 1) {
          if (dart.notNull(thickness) <= 1) {
            draw_pixel.drawPixel(image, x, y1, color);
          } else {
            for (let i = 0; i < dart.notNull(thickness); i = i + 1) {
              draw_pixel.drawPixel(image, x, dart.notNull(y1) - radius + i, color);
            }
          }
        }
      } else {
        for (let x = x1; dart.notNull(x) <= dart.notNull(x2); x = dart.notNull(x) + 1) {
          if (dart.notNull(thickness) <= 1) {
            draw_pixel.drawPixel(image, x, y1, color);
          } else {
            for (let i = 0; i < dart.notNull(thickness); i = i + 1) {
              draw_pixel.drawPixel(image, x, dart.notNull(y1) - radius + i, color);
            }
          }
        }
      }
      return image;
    }
    function _xor(n) {
      if (n == null) dart.nullFailed(I[0], 87, 16, "n");
      return (~dart.notNull(n) >>> 0) + 65536 & 65535;
    }
    dart.fn(_xor, T.intToint());
    if (!dart.test(antialias)) {
      dx = dx[$abs]();
      dy = dy[$abs]();
      if (dy <= dx) {
        let ac = math.cos(math.atan2(dy, dx));
        let wid = null;
        if (ac !== 0) {
          wid = (dart.notNull(thickness) / ac)[$truncate]();
        } else {
          wid = 1;
        }
        if (wid === 0) {
          wid = 1;
        }
        let d = 2 * dy - dx;
        let incr1 = 2 * dy;
        let incr2 = 2 * (dy - dx);
        let x = null;
        let y = null;
        let ydirflag = null;
        let xend = null;
        if (dart.notNull(x1) > dart.notNull(x2)) {
          x = x2;
          y = y2;
          ydirflag = -1;
          xend = x1;
        } else {
          x = x1;
          y = y1;
          ydirflag = 1;
          xend = x2;
        }
        let wstart = (dart.notNull(y) - dart.notNull(wid) / 2)[$toInt]();
        for (let w = wstart; w < wstart + dart.notNull(wid); w = w + 1) {
          draw_pixel.drawPixel(image, x, w, color);
        }
        if ((dart.notNull(y2) - dart.notNull(y1)) * dart.notNull(ydirflag) > 0) {
          while (dart.notNull(x) < dart.notNull(xend)) {
            x = dart.notNull(x) + 1;
            if (d < 0) {
              d = d + incr1;
            } else {
              y = dart.notNull(y) + 1;
              d = d + incr2;
            }
            wstart = (dart.notNull(y) - dart.notNull(wid) / 2)[$toInt]();
            for (let w = wstart; w < wstart + dart.notNull(wid); w = w + 1) {
              draw_pixel.drawPixel(image, x, w, color);
            }
          }
        } else {
          while (dart.notNull(x) < dart.notNull(xend)) {
            x = dart.notNull(x) + 1;
            if (d < 0) {
              d = d + incr1;
            } else {
              y = dart.notNull(y) - 1;
              d = d + incr2;
            }
            wstart = (dart.notNull(y) - dart.notNull(wid) / 2)[$toInt]();
            for (let w = wstart; w < wstart + dart.notNull(wid); w = w + 1) {
              draw_pixel.drawPixel(image, x, w, color);
            }
          }
        }
      } else {
        let as = math.sin(math.atan2(dy, dx));
        let wid = null;
        if (as !== 0) {
          wid = (dart.notNull(thickness) / as)[$truncate]();
        } else {
          wid = 1;
        }
        if (wid === 0) {
          wid = 1;
        }
        let d = 2 * dx - dy;
        let incr1 = 2 * dx;
        let incr2 = 2 * (dx - dy);
        let x = null;
        let y = null;
        let yend = null;
        let xdirflag = null;
        if (dart.notNull(y1) > dart.notNull(y2)) {
          y = y2;
          x = x2;
          yend = y1;
          xdirflag = -1;
        } else {
          y = y1;
          x = x1;
          yend = y2;
          xdirflag = 1;
        }
        let wstart = (dart.notNull(x) - dart.notNull(wid) / 2)[$toInt]();
        for (let w = wstart; w < wstart + dart.notNull(wid); w = w + 1) {
          draw_pixel.drawPixel(image, w, y, color);
        }
        if ((dart.notNull(x2) - dart.notNull(x1)) * dart.notNull(xdirflag) > 0) {
          while (dart.notNull(y) < dart.notNull(yend)) {
            y = dart.notNull(y) + 1;
            if (d < 0) {
              d = d + incr1;
            } else {
              x = dart.notNull(x) + 1;
              d = d + incr2;
            }
            wstart = (dart.notNull(x) - dart.notNull(wid) / 2)[$toInt]();
            for (let w = wstart; w < wstart + dart.notNull(wid); w = w + 1) {
              draw_pixel.drawPixel(image, w, y, color);
            }
          }
        } else {
          while (dart.notNull(y) < dart.notNull(yend)) {
            y = dart.notNull(y) + 1;
            if (d < 0) {
              d = d + incr1;
            } else {
              x = dart.notNull(x) - 1;
              d = d + incr2;
            }
            wstart = (dart.notNull(x) - dart.notNull(wid) / 2)[$toInt]();
            for (let w = wstart; w < wstart + dart.notNull(wid); w = w + 1) {
              draw_pixel.drawPixel(image, w, y, color);
            }
          }
        }
      }
      return image;
    }
    let ag = dy[$abs]() < dx[$abs]() ? math.cos(math.atan2(dy, dx)) : math.sin(math.atan2(dy, dx));
    let wid = null;
    if (ag !== 0.0) {
      wid = (dart.notNull(thickness) / ag)[$abs]()[$toInt]();
    } else {
      wid = 1;
    }
    if (wid === 0) {
      wid = 1;
    }
    if (dx[$abs]() > dy[$abs]()) {
      if (dx < 0) {
        let tmp = x1;
        x1 = x2;
        x2 = tmp;
        tmp = y1;
        y1 = y2;
        y2 = tmp;
        dx = dart.notNull(x2) - dart.notNull(x1);
        dy = dart.notNull(y2) - dart.notNull(y1);
      }
      let y = y1;
      let inc = (dy * 65536 / dx)[$truncate]();
      let frac = 0;
      for (let x = x1; dart.notNull(x) <= dart.notNull(x2); x = dart.notNull(x) + 1) {
        let wstart = dart.notNull(y) - (dart.notNull(wid) / 2)[$truncate]();
        for (let w = wstart; w < wstart + dart.notNull(wid); w = w + 1) {
          draw_pixel.drawPixel(image, x, w, color, frac >> 8 & 255);
          draw_pixel.drawPixel(image, x, w + 1, color, dart.notNull(_xor(frac)) >> 8 & 255);
        }
        frac = frac + inc;
        if (frac >= 65536) {
          frac = frac - 65536;
          y = dart.notNull(y) + 1;
        } else if (frac < 0) {
          frac = frac + 65536;
          y = dart.notNull(y) - 1;
        }
      }
    } else {
      if (dy < 0) {
        let tmp = x1;
        x1 = x2;
        x2 = tmp;
        tmp = y1;
        y1 = y2;
        y2 = tmp;
        dx = dart.notNull(x2) - dart.notNull(x1);
        dy = dart.notNull(y2) - dart.notNull(y1);
      }
      let x = x1;
      let inc = (dx * 65536 / dy)[$truncate]();
      let frac = 0;
      for (let y = y1; dart.notNull(y) <= dart.notNull(y2); y = dart.notNull(y) + 1) {
        let wstart = dart.notNull(x) - (dart.notNull(wid) / 2)[$truncate]();
        for (let w = wstart; w < wstart + dart.notNull(wid); w = w + 1) {
          draw_pixel.drawPixel(image, w, y, color, frac >> 8 & 255);
          draw_pixel.drawPixel(image, w + 1, y, color, dart.notNull(_xor(frac)) >> 8 & 255);
        }
        frac = frac + inc;
        if (frac >= 65536) {
          frac = frac - 65536;
          x = dart.notNull(x) + 1;
        } else if (frac < 0) {
          frac = frac + 65536;
          x = dart.notNull(x) - 1;
        }
      }
    }
    return image;
  };
  draw_circle.drawCircle = function drawCircle(image, x0, y0, radius, color) {
    if (image == null) dart.nullFailed(I[1], 8, 24, "image");
    if (x0 == null) dart.nullFailed(I[1], 8, 35, "x0");
    if (y0 == null) dart.nullFailed(I[1], 8, 43, "y0");
    if (radius == null) dart.nullFailed(I[1], 8, 51, "radius");
    if (color == null) dart.nullFailed(I[1], 8, 63, "color");
    let points = draw_circle._calculateCircumference(image, x0, y0, radius);
    return draw_circle._draw(image, points, color);
  };
  draw_circle.fillCircle = function fillCircle(image, x0, y0, radius, color) {
    if (image == null) dart.nullFailed(I[1], 23, 24, "image");
    if (x0 == null) dart.nullFailed(I[1], 23, 35, "x0");
    if (y0 == null) dart.nullFailed(I[1], 23, 43, "y0");
    if (radius == null) dart.nullFailed(I[1], 23, 51, "radius");
    if (color == null) dart.nullFailed(I[1], 23, 63, "color");
    let points = draw_circle._calculateCircumference(image, x0, y0, radius);
    points[$sort](dart.fn((a, b) => {
      if (a == null) dart.nullFailed(I[1], 27, 16, "a");
      if (b == null) dart.nullFailed(I[1], 27, 19, "b");
      return a.x == b.x ? a.y[$compareTo](b.y) : a.x[$compareTo](b.x);
    }, T.PointAndPointToint()));
    let start = points[$first];
    let end = points[$first];
    for (let pt of points[$sublist](1)) {
      if (pt.x == start.x) {
        end = pt;
      } else {
        draw_line.drawLine(image, start.xi, start.yi, end.xi, end.yi, color);
        start = pt;
        end = pt;
      }
    }
    draw_line.drawLine(image, start.xi, start.yi, end.xi, end.yi, color);
    return image;
  };
  draw_circle._calculateCircumference = function _calculateCircumference(image, x0, y0, radius) {
    if (image == null) dart.nullFailed(I[1], 50, 43, "image");
    if (x0 == null) dart.nullFailed(I[1], 50, 54, "x0");
    if (y0 == null) dart.nullFailed(I[1], 50, 62, "y0");
    if (radius == null) dart.nullFailed(I[1], 50, 70, "radius");
    if (dart.notNull(radius) < 0 || dart.notNull(x0) - dart.notNull(radius) >= dart.notNull(image.width) || dart.notNull(y0) + dart.notNull(radius) < 0 || dart.notNull(y0) - dart.notNull(radius) >= dart.notNull(image.height)) {
      return T.JSArrayOfPoint().of([]);
    }
    if (radius === 0) {
      return T.JSArrayOfPoint().of([new point.Point.new(x0, y0)]);
    }
    let points = T.JSArrayOfPoint().of([]);
    points[$add](new point.Point.new(dart.notNull(x0) - dart.notNull(radius), y0));
    points[$add](new point.Point.new(dart.notNull(x0) + dart.notNull(radius), y0));
    points[$add](new point.Point.new(x0, dart.notNull(y0) - dart.notNull(radius)));
    points[$add](new point.Point.new(x0, dart.notNull(y0) + dart.notNull(radius)));
    if (radius === 1) {
      return points;
    }
    for (let f = 1 - dart.notNull(radius), ddFx = 0, ddFy = -(dart.notNull(radius) << 1 >>> 0), x = 0, y = radius; x < dart.notNull(y);) {
      if (f >= 0) {
        f = f + (ddFy = ddFy + 2);
        y = dart.notNull(y) - 1;
      }
      x = x + 1;
      ddFx = ddFx + 2;
      f = f + (ddFx + 1);
      if (x !== dart.notNull(y) + 1) {
        let x1 = dart.notNull(x0) - dart.notNull(y);
        let x2 = dart.notNull(x0) + dart.notNull(y);
        let y1 = dart.notNull(y0) - x;
        let y2 = dart.notNull(y0) + x;
        let x3 = dart.notNull(x0) - x;
        let x4 = dart.notNull(x0) + x;
        let y3 = dart.notNull(y0) - dart.notNull(y);
        let y4 = dart.notNull(y0) + dart.notNull(y);
        points[$add](new point.Point.new(x1, y1));
        points[$add](new point.Point.new(x1, y2));
        points[$add](new point.Point.new(x2, y1));
        points[$add](new point.Point.new(x2, y2));
        if (x !== y) {
          points[$add](new point.Point.new(x3, y3));
          points[$add](new point.Point.new(x4, y4));
          points[$add](new point.Point.new(x4, y3));
          points[$add](new point.Point.new(x3, y4));
        }
      }
    }
    return points;
  };
  draw_circle._draw = function _draw(image, points, color) {
    if (image == null) dart.nullFailed(I[1], 111, 19, "image");
    if (points == null) dart.nullFailed(I[1], 111, 38, "points");
    if (color == null) dart.nullFailed(I[1], 111, 50, "color");
    for (let pt of points) {
      draw_pixel.drawPixel(image, pt.xi, pt.yi, color);
    }
    return image;
  };
  dart.trackLibraries("packages/image/src/draw/draw_line.dart", {
    "package:image/src/draw/draw_line.dart": draw_line,
    "package:image/src/draw/draw_circle.dart": draw_circle
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["draw_line.dart","draw_circle.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../E:/packages/image/src/draw/draw_line.dart.lib.js"}');
  // Exports:
  return {
    src__draw__draw_line: draw_line,
    src__draw__draw_circle: draw_circle
  };
}));

//# sourceMappingURL=draw_line.dart.lib.js.map
