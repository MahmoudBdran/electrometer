define(['dart_sdk', 'packages/http/src/multipart_request.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/syncfusion_flutter_pdf/pdf.dart', 'packages/syncfusion_flutter_pdfviewer/src/bookmark/bookmark_item.dart', 'packages/syncfusion_flutter_core/src/theme/theme_widget.dart', 'packages/syncfusion_flutter_core/src/localizations/global_localizations.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/pdfviewer_helper.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/syncfusion_flutter_pdfviewer/src/bookmark/bookmark_toolbar.dart', 'packages/flutter/src/widgets/scroll_view.dart', 'packages/flutter/src/widgets/page_view.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/enums.dart', 'packages/flutter/src/widgets/interactive_viewer.dart', 'packages/flutter/src/widgets/form.dart', 'packages/syncfusion_flutter_core/interactive_scroll_viewer_internal.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/gestures/scale.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/material/button_bar.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/widgets/single_child_scroll_view.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/material/text_form_field.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pdfviewer_callback_details.dart', 'packages/flutter/src/gestures/team.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/gestures/long_press.dart', 'packages/flutter/src/gestures/monodrag.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pdftextline.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/services/mouse_cursor.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/web_helper.dart', 'packages/flutter/src/painting/binding.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/widgets/raw_keyboard_listener.dart', 'packages/flutter/src/services/keyboard_key.dart', 'packages/flutter/src/services/clipboard.dart', 'packages/flutter/src/services/raw_keyboard_windows.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/pdfviewer_plugin.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/async/src/chunked_stream_reader.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/widgets/async.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pagination.dart', 'packages/flutter/src/foundation/observer_list.dart'], (function load__packages__syncfusion_flutter_pdfviewer__src__common__pdf_provider_dart(dart_sdk, packages__http__src__multipart_request$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__services__system_channels$46dart, packages__syncfusion_flutter_pdf__pdf$46dart, packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_item$46dart, packages__syncfusion_flutter_core__src__theme__theme_widget$46dart, packages__syncfusion_flutter_core__src__localizations__global_localizations$46dart, packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_helper$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__alignment$46dart, packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_toolbar$46dart, packages__flutter__src__widgets__scroll_view$46dart, packages__flutter__src__widgets__page_view$46dart, packages__syncfusion_flutter_pdfviewer__src__control__enums$46dart, packages__flutter__src__widgets__interactive_viewer$46dart, packages__flutter__src__widgets__form$46dart, packages__syncfusion_flutter_core__interactive_scroll_viewer_internal$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__gestures__scale$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__material__button_bar$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__widgets__single_child_scroll_view$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__material__text_form_field$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__services__text_input$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pdfviewer_callback_details$46dart, packages__flutter__src__gestures__team$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__gestures__long_press$46dart, packages__flutter__src__gestures__monodrag$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pdftextline$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__services__mouse_cursor$46dart, packages__syncfusion_flutter_pdfviewer__src__common__web_helper$46dart, packages__flutter__src__painting__binding$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__widgets__raw_keyboard_listener$46dart, packages__flutter__src__services__keyboard_key$46dart, packages__flutter__src__services__clipboard$46dart, packages__flutter__src__services__raw_keyboard_windows$46dart, packages__flutter__src__painting__box_border$46dart, packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_plugin$46dart, packages__flutter__src__foundation__collections$46dart, packages__async__src__chunked_stream_reader$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__widgets__async$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pagination$46dart, packages__flutter__src__foundation__observer_list$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const async = dart_sdk.async;
  const typed_data = dart_sdk.typed_data;
  const io = dart_sdk.io;
  const _interceptors = dart_sdk._interceptors;
  const math = dart_sdk.math;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const http = packages__http__src__multipart_request$46dart.http;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const routes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__routes;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const visibility = packages__flutter__src__widgets__widget_span$46dart.src__widgets__visibility;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const editable_text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__editable_text;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const image$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__image;
  const page_storage = packages__flutter__src__widgets__widget_span$46dart.src__widgets__page_storage;
  const asset_bundle = packages__flutter__src__services__system_channels$46dart.src__services__asset_bundle;
  const pdf = packages__syncfusion_flutter_pdf__pdf$46dart.pdf;
  const bookmark_item = packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_item$46dart.src__bookmark__bookmark_item;
  const pdfviewer_theme = packages__syncfusion_flutter_core__src__theme__theme_widget$46dart.src__theme__pdfviewer_theme;
  const global_localizations = packages__syncfusion_flutter_core__src__localizations__global_localizations$46dart.src__localizations__global_localizations;
  const pdfviewer_helper = packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_helper$46dart.src__common__pdfviewer_helper;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const alignment$ = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const bookmark_toolbar = packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_toolbar$46dart.src__bookmark__bookmark_toolbar;
  const scroll_view = packages__flutter__src__widgets__scroll_view$46dart.src__widgets__scroll_view;
  const page_view = packages__flutter__src__widgets__page_view$46dart.src__widgets__page_view;
  const enums = packages__syncfusion_flutter_pdfviewer__src__control__enums$46dart.src__control__enums;
  const interactive_viewer = packages__flutter__src__widgets__interactive_viewer$46dart.src__widgets__interactive_viewer;
  const form = packages__flutter__src__widgets__form$46dart.src__widgets__form;
  const interactive_scroll_viewer_internal = packages__syncfusion_flutter_core__interactive_scroll_viewer_internal$46dart.interactive_scroll_viewer_internal;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const scale = packages__flutter__src__gestures__scale$46dart.src__gestures__scale;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const dialog = packages__flutter__src__material__button_bar$46dart.src__material__dialog;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const single_child_scroll_view = packages__flutter__src__widgets__single_child_scroll_view$46dart.src__widgets__single_child_scroll_view;
  const text_button = packages__flutter__src__material__icon_button$46dart.src__material__text_button;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const text_selection_theme = packages__flutter__src__material__icon_button$46dart.src__material__text_selection_theme;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const text_form_field = packages__flutter__src__material__text_form_field$46dart.src__material__text_form_field;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const pdfviewer_callback_details = packages__syncfusion_flutter_pdfviewer__src__control__pdfviewer_callback_details$46dart.src__control__pdfviewer_callback_details;
  const team$ = packages__flutter__src__gestures__team$46dart.src__gestures__team;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const long_press = packages__flutter__src__gestures__long_press$46dart.src__gestures__long_press;
  const monodrag = packages__flutter__src__gestures__monodrag$46dart.src__gestures__monodrag;
  const pdftextline = packages__syncfusion_flutter_pdfviewer__src__control__pdftextline$46dart.src__control__pdftextline;
  const theme$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const mouse_cursor = packages__flutter__src__services__mouse_cursor$46dart.src__services__mouse_cursor;
  const web_helper = packages__syncfusion_flutter_pdfviewer__src__common__web_helper$46dart.src__common__web_helper;
  const binding$ = packages__flutter__src__painting__binding$46dart.src__painting__binding;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const raw_keyboard_listener = packages__flutter__src__widgets__raw_keyboard_listener$46dart.src__widgets__raw_keyboard_listener;
  const keyboard_key = packages__flutter__src__services__keyboard_key$46dart.src__services__keyboard_key;
  const clipboard = packages__flutter__src__services__clipboard$46dart.src__services__clipboard;
  const raw_keyboard = packages__flutter__src__services__raw_keyboard_windows$46dart.src__services__raw_keyboard;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const pdfviewer_plugin = packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_plugin$46dart.src__common__pdfviewer_plugin;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const cancelable_operation = packages__async__src__chunked_stream_reader$46dart.src__cancelable_operation;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const async$ = packages__flutter__src__widgets__async$46dart.src__widgets__async;
  const pagination = packages__syncfusion_flutter_pdfviewer__src__control__pagination$46dart.src__control__pagination;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  var pdf_provider = Object.create(dart.library);
  var bookmark_view = Object.create(dart.library);
  var single_page_view = Object.create(dart.library);
  var pdfviewer_canvas = Object.create(dart.library);
  var scroll_status = Object.create(dart.library);
  var scroll_head = Object.create(dart.library);
  var scroll_head_overlay = Object.create(dart.library);
  var pdf_scrollable = Object.create(dart.library);
  var pdf_page_view = Object.create(dart.library);
  var pdfviewer = Object.create(dart.library);
  var pdfviewer$ = Object.create(dart.library);
  var $isNotEmpty = dartx.isNotEmpty;
  var $toString = dartx.toString;
  var $buffer = dartx.buffer;
  var $asUint8List = dartx.asUint8List;
  var $clear = dartx.clear;
  var $add = dartx.add;
  var $_get = dartx._get;
  var $clamp = dartx.clamp;
  var $abs = dartx.abs;
  var $length = dartx.length;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $round = dartx.round;
  var $isNegative = dartx.isNegative;
  var $first = dartx.first;
  var $last = dartx.last;
  var $_set = dartx._set;
  var $floor = dartx.floor;
  var $runtimeType = dartx.runtimeType;
  var $contains = dartx.contains;
  var $containsKey = dartx.containsKey;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    FutureOfUint8List: () => (T.FutureOfUint8List = dart.constFn(async.Future$(typed_data.Uint8List)))(),
    JSArrayOfBookmarkItem: () => (T.JSArrayOfBookmarkItem = dart.constFn(_interceptors.JSArray$(bookmark_item.BookmarkItem)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    FutureOfbool: () => (T.FutureOfbool = dart.constFn(async.Future$(core.bool)))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    BuildContextAndintToBookmarkItem: () => (T.BuildContextAndintToBookmarkItem = dart.constFn(dart.fnType(bookmark_item.BookmarkItem, [framework.BuildContext, core.int])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    ScaleStartDetailsTovoid: () => (T.ScaleStartDetailsTovoid = dart.constFn(dart.fnType(dart.void, [scale.ScaleStartDetails])))(),
    ScaleUpdateDetailsTovoid: () => (T.ScaleUpdateDetailsTovoid = dart.constFn(dart.fnType(dart.void, [scale.ScaleUpdateDetails])))(),
    ScaleEndDetailsTovoid: () => (T.ScaleEndDetailsTovoid = dart.constFn(dart.fnType(dart.void, [scale.ScaleEndDetails])))(),
    PointerDownEventTovoid: () => (T.PointerDownEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerDownEvent])))(),
    intTovoid: () => (T.intTovoid = dart.constFn(dart.fnType(dart.void, [core.int])))(),
    BuildContextAndBoxConstraintsToListener: () => (T.BuildContextAndBoxConstraintsToListener = dart.constFn(dart.fnType(basic.Listener, [framework.BuildContext, box.BoxConstraints])))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    VoidToFutureOfNull: () => (T.VoidToFutureOfNull = dart.constFn(dart.fnType(T.FutureOfNull(), [])))(),
    DurationTovoid: () => (T.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    BoxShadowL: () => (T.BoxShadowL = dart.constFn(dart.legacy(box_shadow.BoxShadow)))(),
    StateOfStatefulWidget: () => (T.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T.StateOfStatefulWidget())))(),
    DragStartDetailsTovoid: () => (T.DragStartDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragStartDetails])))(),
    PointerSignalEventTovoid: () => (T.PointerSignalEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerSignalEvent])))(),
    PointerMoveEventTovoid: () => (T.PointerMoveEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerMoveEvent])))(),
    PointerUpEventTovoid: () => (T.PointerUpEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerUpEvent])))(),
    RawKeyEventTovoid: () => (T.RawKeyEventTovoid = dart.constFn(dart.fnType(dart.void, [raw_keyboard.RawKeyEvent])))(),
    PointerHoverEventTovoid: () => (T.PointerHoverEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerHoverEvent])))(),
    IdentityMapOfint$PdfPageInfo: () => (T.IdentityMapOfint$PdfPageInfo = dart.constFn(_js_helper.IdentityMap$(core.int, pdf_page_view.PdfPageInfo)))(),
    GlobalKeyOfSinglePageViewState: () => (T.GlobalKeyOfSinglePageViewState = dart.constFn(framework.GlobalKey$(single_page_view.SinglePageViewState)))(),
    GlobalKeyOfBookmarkViewControllerState: () => (T.GlobalKeyOfBookmarkViewControllerState = dart.constFn(framework.GlobalKey$(bookmark_view.BookmarkViewControllerState)))(),
    GlobalKeyOfPdfScrollableState: () => (T.GlobalKeyOfPdfScrollableState = dart.constFn(framework.GlobalKey$(pdf_scrollable.PdfScrollableState)))(),
    GlobalKeyOfPdfPageViewState: () => (T.GlobalKeyOfPdfPageViewState = dart.constFn(framework.GlobalKey$(pdf_page_view.PdfPageViewState)))(),
    IdentityMapOfint$GlobalKeyOfPdfPageViewState: () => (T.IdentityMapOfint$GlobalKeyOfPdfPageViewState = dart.constFn(_js_helper.IdentityMap$(core.int, T.GlobalKeyOfPdfPageViewState())))(),
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    IdentityMapOfint$String: () => (T.IdentityMapOfint$String = dart.constFn(_js_helper.IdentityMap$(core.int, core.String)))(),
    CancelableOperationOfUint8List: () => (T.CancelableOperationOfUint8List = dart.constFn(cancelable_operation.CancelableOperation$(typed_data.Uint8List)))(),
    PdfDocumentN: () => (T.PdfDocumentN = dart.constFn(dart.nullable(pdf.PdfDocument)))(),
    CancelableOperationOfPdfDocumentN: () => (T.CancelableOperationOfPdfDocumentN = dart.constFn(cancelable_operation.CancelableOperation$(T.PdfDocumentN())))(),
    ListN: () => (T.ListN = dart.constFn(dart.nullable(core.List)))(),
    CancelableOperationOfListN: () => (T.CancelableOperationOfListN = dart.constFn(cancelable_operation.CancelableOperation$(T.ListN())))(),
    AlwaysStoppedAnimationOfColor: () => (T.AlwaysStoppedAnimationOfColor = dart.constFn(animations.AlwaysStoppedAnimation$(ui.Color)))(),
    MapOfint$List: () => (T.MapOfint$List = dart.constFn(core.Map$(core.int, core.List)))(),
    MapNOfint$List: () => (T.MapNOfint$List = dart.constFn(dart.nullable(T.MapOfint$List())))(),
    FutureBuilderOfMapNOfint$List: () => (T.FutureBuilderOfMapNOfint$List = dart.constFn(async$.FutureBuilder$(T.MapNOfint$List())))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    Uint8ListN: () => (T.Uint8ListN = dart.constFn(dart.nullable(typed_data.Uint8List)))(),
    intToWidget: () => (T.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    BuildContextAndAsyncSnapshotToWidget: () => (T.BuildContextAndAsyncSnapshotToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot])))(),
    JSArrayOfPdfTextLine: () => (T.JSArrayOfPdfTextLine = dart.constFn(_interceptors.JSArray$(pdftextline.PdfTextLine)))(),
    MapNOfint$ListToMapNOfint$List: () => (T.MapNOfint$ListToMapNOfint$List = dart.constFn(dart.fnType(T.MapNOfint$List(), [T.MapNOfint$List()])))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    DurationToFutureOfvoid: () => (T.DurationToFutureOfvoid = dart.constFn(dart.fnType(T.FutureOfvoid(), [core.Duration])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    __Tovoid: () => (T.__Tovoid = dart.constFn(dart.fnType(dart.void, [], {property: T.StringN()}, {})))(),
    ObserverListOf__Tovoid: () => (T.ObserverListOf__Tovoid = dart.constFn(observer_list.ObserverList$(T.__Tovoid())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBackIconVisible",
        [_Location_column]: 9,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textPosition",
        [_Location_column]: 9,
        [_Location_line]: 167,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onBackPressed",
        [_Location_column]: 9,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 9,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNavigate",
        [_Location_column]: 9,
        [_Location_line]: 170,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBorderEnabled",
        [_Location_column]: 9,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExpandPressed",
        [_Location_column]: 9,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9], T._LocationL());
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 164,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 9,
        [_Location_line]: 183,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isExpandIconVisible",
        [_Location_column]: 9,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNavigate",
        [_Location_column]: 9,
        [_Location_line]: 187,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExpandPressed",
        [_Location_column]: 9,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onBackPressed",
        [_Location_column]: 9,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17], T._LocationL());
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[11] || CT.C11,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 181,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.constList([C[20] || CT.C20], T._LocationL());
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[19] || CT.C19,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 220,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 13,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.constList([C[23] || CT.C23, C[24] || CT.C24], T._LocationL());
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[22] || CT.C22,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 218,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 11,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.constList([C[27] || CT.C27, C[28] || CT.C28], T._LocationL());
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[26] || CT.C26,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 216,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCloseButtonPressed",
        [_Location_column]: 31,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.constList([C[31] || CT.C31], T._LocationL());
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[30] || CT.C30,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 231,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemCount",
        [_Location_column]: 25,
        [_Location_line]: 235,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 25,
        [_Location_line]: 236,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.constList([C[34] || CT.C34, C[35] || CT.C35], T._LocationL());
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[33] || CT.C33,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 234,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 43,
        [_Location_line]: 242,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 27,
        [_Location_line]: 243,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.constList([C[38] || CT.C38, C[39] || CT.C39], T._LocationL());
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[37] || CT.C37,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 241,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.constList([C[42] || CT.C42], T._LocationL());
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[41] || CT.C41,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 240,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.constList([C[45] || CT.C45], T._LocationL());
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[44] || CT.C44,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 232,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 27,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.constList([C[48] || CT.C48], T._LocationL());
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[47] || CT.C47,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 230,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.constList([C[51] || CT.C51, C[52] || CT.C52, C[53] || CT.C53], T._LocationL());
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[50] || CT.C50,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 227,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 227,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.constList([C[56] || CT.C56, C[57] || CT.C57], T._LocationL());
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[55] || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 225,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 20,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.constList([C[60] || CT.C60], T._LocationL());
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[59] || CT.C59,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 215,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 7,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C62() {
      return C[62] = dart.constList([C[63] || CT.C63, C[64] || CT.C64], T._LocationL());
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[62] || CT.C62,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 213,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 335,
        [_Location_file]: null
      });
    },
    get C66() {
      return C[66] = dart.constList([C[67] || CT.C67], T._LocationL());
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[66] || CT.C66,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 335,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 13,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 333,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 335,
        [_Location_file]: null
      });
    },
    get C69() {
      return C[69] = dart.constList([C[70] || CT.C70, C[71] || CT.C71, C[72] || CT.C72], T._LocationL());
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[69] || CT.C69,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 329,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 100000
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 329,
        [_Location_file]: null
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 9,
        [_Location_line]: 336,
        [_Location_file]: null
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "boundaryMargin",
        [_Location_column]: 9,
        [_Location_line]: 337,
        [_Location_file]: null
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constrained",
        [_Location_column]: 9,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "panEnabled",
        [_Location_column]: 9,
        [_Location_line]: 356,
        [_Location_file]: null
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTapZoomInvoked",
        [_Location_column]: 9,
        [_Location_line]: 357,
        [_Location_file]: null
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 9,
        [_Location_line]: 359,
        [_Location_file]: null
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDoubleTapZooming",
        [_Location_column]: 9,
        [_Location_line]: 364,
        [_Location_file]: null
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformationController",
        [_Location_column]: 9,
        [_Location_line]: 365,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionStart",
        [_Location_column]: 9,
        [_Location_line]: 366,
        [_Location_file]: null
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionUpdate",
        [_Location_column]: 9,
        [_Location_line]: 379,
        [_Location_file]: null
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionEnd",
        [_Location_column]: 9,
        [_Location_line]: 442,
        [_Location_file]: null
      });
    },
    get C76() {
      return C[76] = dart.constList([C[77] || CT.C77, C[78] || CT.C78, C[79] || CT.C79, C[80] || CT.C80, C[81] || CT.C81, C[82] || CT.C82, C[83] || CT.C83, C[84] || CT.C84, C[85] || CT.C85, C[86] || CT.C86, C[87] || CT.C87, C[88] || CT.C88], T._LocationL());
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[76] || CT.C76,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 328,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: scroll_physics.BouncingScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: scroll_physics.NeverScrollableScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 15,
        [_Location_line]: 563,
        [_Location_file]: null
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPageChanged",
        [_Location_column]: 15,
        [_Location_line]: 564,
        [_Location_file]: null
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 15,
        [_Location_line]: 568,
        [_Location_file]: null
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 578,
        [_Location_file]: null
      });
    },
    get C92() {
      return C[92] = dart.constList([C[93] || CT.C93, C[94] || CT.C94, C[95] || CT.C95, C[96] || CT.C96], T._LocationL());
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[92] || CT.C92,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 562,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 13,
        [_Location_line]: 557,
        [_Location_file]: null
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 562,
        [_Location_file]: null
      });
    },
    get C98() {
      return C[98] = dart.constList([C[99] || CT.C99, C[100] || CT.C100], T._LocationL());
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[98] || CT.C98,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 556,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 13,
        [_Location_line]: 524,
        [_Location_file]: null
      });
    },
    get C102() {
      return C[102] = dart.constList([C[103] || CT.C103], T._LocationL());
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[102] || CT.C102,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 523,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowHorizontalScrollBar",
        [_Location_column]: 17,
        [_Location_line]: 601,
        [_Location_file]: null
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowVerticalScrollBar",
        [_Location_column]: 17,
        [_Location_line]: 602,
        [_Location_file]: null
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollHeadOffset",
        [_Location_column]: 17,
        [_Location_line]: 603,
        [_Location_file]: null
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 24,
        [_Location_line]: 604,
        [_Location_file]: null
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 17,
        [_Location_line]: 605,
        [_Location_file]: null
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 36,
        [_Location_line]: 606,
        [_Location_file]: null
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBookmarkViewOpen",
        [_Location_column]: 24,
        [_Location_line]: 607,
        [_Location_file]: null
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageLayoutMode",
        [_Location_column]: 35,
        [_Location_line]: 608,
        [_Location_file]: null
      });
    },
    get C105() {
      return C[105] = dart.constList([C[106] || CT.C106, C[107] || CT.C107, C[108] || CT.C108, C[109] || CT.C109, C[110] || CT.C110, C[111] || CT.C111, C[112] || CT.C112, C[113] || CT.C113], T._LocationL());
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[105] || CT.C105,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 600,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 13,
        [_Location_line]: 598,
        [_Location_file]: null
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 600,
        [_Location_file]: null
      });
    },
    get C115() {
      return C[115] = dart.constList([C[116] || CT.C116, C[117] || CT.C117], T._LocationL());
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[115] || CT.C115,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 597,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragStart",
        [_Location_column]: 11,
        [_Location_line]: 583,
        [_Location_file]: null
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 11,
        [_Location_line]: 584,
        [_Location_file]: null
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 11,
        [_Location_line]: 585,
        [_Location_file]: null
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 11,
        [_Location_line]: 586,
        [_Location_file]: null
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 597,
        [_Location_file]: null
      });
    },
    get C119() {
      return C[119] = dart.constList([C[120] || CT.C120, C[121] || CT.C121, C[122] || CT.C122, C[123] || CT.C123, C[124] || CT.C124], T._LocationL());
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[119] || CT.C119,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 582,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 40,
        [_Location_line]: 613,
        [_Location_file]: null
      });
    },
    get C126() {
      return C[126] = dart.constList([C[127] || CT.C127], T._LocationL());
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[126] || CT.C126,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 613,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 13,
        [_Location_line]: 612,
        [_Location_file]: null
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 613,
        [_Location_file]: null
      });
    },
    get C129() {
      return C[129] = dart.constList([C[130] || CT.C130, C[131] || CT.C131], T._LocationL());
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[129] || CT.C129,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 611,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 522,
        [_Location_file]: null
      });
    },
    get C133() {
      return C[133] = dart.constList([C[134] || CT.C134], T._LocationL());
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[133] || CT.C133,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 521,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 24
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 8
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 4,
        [EdgeInsets_right]: 4,
        [EdgeInsets_top]: 4,
        [EdgeInsets_left]: 4
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 31,
        [_Location_line]: 857,
        [_Location_file]: null
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 858,
        [_Location_file]: null
      });
    },
    get C141() {
      return C[141] = dart.constList([C[142] || CT.C142, C[143] || CT.C143], T._LocationL());
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[141] || CT.C141,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 856,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_name]: "BorderStyle.none",
        index: 0
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_style]: C[146] || CT.C146,
        [BorderSide_width]: 0,
        [BorderSide_color]: C[147] || CT.C147
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[149] || CT.C149,
        [BorderRadius_bottomLeft]: C[149] || CT.C149,
        [BorderRadius_topRight]: C[149] || CT.C149,
        [BorderRadius_topLeft]: C[149] || CT.C149
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [OutlinedBorder_side]: C[145] || CT.C145,
        [RoundedRectangleBorder_borderRadius]: C[148] || CT.C148
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 44,
        [_Location_line]: 862,
        [_Location_file]: null
      });
    },
    get C151() {
      return C[151] = dart.constList([C[152] || CT.C152], T._LocationL());
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[151] || CT.C151,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 862,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 870,
        [_Location_file]: null
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 871,
        [_Location_file]: null
      });
    },
    get C154() {
      return C[154] = dart.constList([C[155] || CT.C155, C[156] || CT.C156], T._LocationL());
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[154] || CT.C154,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 869,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 17,
        [_Location_line]: 865,
        [_Location_file]: null
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 869,
        [_Location_file]: null
      });
    },
    get C158() {
      return C[158] = dart.constList([C[159] || CT.C159, C[160] || CT.C160], T._LocationL());
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[158] || CT.C158,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 864,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 886,
        [_Location_file]: null
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 887,
        [_Location_file]: null
      });
    },
    get C162() {
      return C[162] = dart.constList([C[163] || CT.C163, C[164] || CT.C164], T._LocationL());
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[162] || CT.C162,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 885,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 17,
        [_Location_line]: 882,
        [_Location_file]: null
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 885,
        [_Location_file]: null
      });
    },
    get C166() {
      return C[166] = dart.constList([C[167] || CT.C167, C[168] || CT.C168], T._LocationL());
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[166] || CT.C166,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 881,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollable",
        [_Location_column]: 13,
        [_Location_line]: 846,
        [_Location_file]: null
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "insetPadding",
        [_Location_column]: 13,
        [_Location_line]: 847,
        [_Location_file]: null
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "contentPadding",
        [_Location_column]: 13,
        [_Location_line]: 848,
        [_Location_file]: null
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "buttonPadding",
        [_Location_column]: 13,
        [_Location_line]: 851,
        [_Location_file]: null
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 854,
        [_Location_file]: null
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 13,
        [_Location_line]: 856,
        [_Location_file]: null
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 13,
        [_Location_line]: 860,
        [_Location_file]: null
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "content",
        [_Location_column]: 13,
        [_Location_line]: 862,
        [_Location_file]: null
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 13,
        [_Location_line]: 863,
        [_Location_file]: null
      });
    },
    get C170() {
      return C[170] = dart.constList([C[171] || CT.C171, C[172] || CT.C172, C[173] || CT.C173, C[174] || CT.C174, C[175] || CT.C175, C[176] || CT.C176, C[177] || CT.C177, C[178] || CT.C178, C[179] || CT.C179], T._LocationL());
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[170] || CT.C170,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 845,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 6,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 6,
        [EdgeInsets_left]: 0
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 907,
        [_Location_file]: null
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 11,
        [_Location_line]: 908,
        [_Location_file]: null
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 909,
        [_Location_file]: null
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardType",
        [_Location_column]: 11,
        [_Location_line]: 924,
        [_Location_file]: null
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableInteractiveSelection",
        [_Location_column]: 11,
        [_Location_line]: 925,
        [_Location_file]: null
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 926,
        [_Location_file]: null
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 927,
        [_Location_file]: null
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEditingComplete",
        [_Location_column]: 11,
        [_Location_line]: 928,
        [_Location_file]: null
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFieldSubmitted",
        [_Location_column]: 11,
        [_Location_line]: 929,
        [_Location_file]: null
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "validator",
        [_Location_column]: 11,
        [_Location_line]: 933,
        [_Location_file]: null
      });
    },
    get C182() {
      return C[182] = dart.constList([C[183] || CT.C183, C[184] || CT.C184, C[185] || CT.C185, C[186] || CT.C186, C[187] || CT.C187, C[188] || CT.C188, C[189] || CT.C189, C[190] || CT.C190, C[191] || CT.C191, C[192] || CT.C192], T._LocationL());
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[182] || CT.C182,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 906,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 905,
        [_Location_file]: null
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 906,
        [_Location_file]: null
      });
    },
    get C194() {
      return C[194] = dart.constList([C[195] || CT.C195, C[196] || CT.C196], T._LocationL());
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[194] || CT.C194,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 904,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 903,
        [_Location_file]: null
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 904,
        [_Location_file]: null
      });
    },
    get C198() {
      return C[198] = dart.constList([C[199] || CT.C199, C[200] || CT.C200], T._LocationL());
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[198] || CT.C198,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 902,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart"
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 400000
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: pdf.PdfPageRotateAngle.prototype,
        [_name$]: "PdfPageRotateAngle.rotateAngle0",
        index: 0
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: pdf.PdfPageRotateAngle.prototype,
        [_name$]: "PdfPageRotateAngle.rotateAngle90",
        index: 1
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: pdf.PdfPageRotateAngle.prototype,
        [_name$]: "PdfPageRotateAngle.rotateAngle180",
        index: 2
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: pdf.PdfPageRotateAngle.prototype,
        [_name$]: "PdfPageRotateAngle.rotateAngle270",
        index: 3
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 10,
        [Radius_x]: 10
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 1,
        [Radius_x]: 1
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3219451636.0
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: ui.Rect.prototype,
        [Rect_bottom]: 0,
        [Rect_right]: 0,
        [Rect_top]: 0,
        [Rect_left]: 0
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$0]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$0]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$0]: "TargetPlatform.android",
        index: 0
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$0]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$0]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$0]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 6,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 6,
        [EdgeInsets_left]: 16
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 16,
        [Radius_x]: 16
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[219] || CT.C219,
        [BorderRadius_bottomLeft]: C[219] || CT.C219,
        [BorderRadius_topRight]: C[219] || CT.C219,
        [BorderRadius_topLeft]: C[219] || CT.C219
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 141,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 17,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 17,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C221() {
      return C[221] = dart.constList([C[222] || CT.C222, C[223] || CT.C223, C[224] || CT.C224], T._LocationL());
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[221] || CT.C221,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 66,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 55,
        [_Location_file]: null
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 15,
        [_Location_line]: 57,
        [_Location_file]: null
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 15,
        [_Location_line]: 60,
        [_Location_file]: null
      });
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C226() {
      return C[226] = dart.constList([C[227] || CT.C227, C[228] || CT.C228, C[229] || CT.C229, C[230] || CT.C230], T._LocationL());
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[226] || CT.C226,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 54,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "direction",
        [_Location_column]: 11,
        [_Location_line]: 51,
        [_Location_file]: null
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 11,
        [_Location_line]: 52,
        [_Location_file]: null
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 53,
        [_Location_file]: null
      });
    },
    get C232() {
      return C[232] = dart.constList([C[233] || CT.C233, C[234] || CT.C234, C[235] || CT.C235], T._LocationL());
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[232] || CT.C232,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 50,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 49,
        [_Location_file]: null
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 50,
        [_Location_file]: null
      });
    },
    get C237() {
      return C[237] = dart.constList([C[238] || CT.C238, C[239] || CT.C239], T._LocationL());
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[237] || CT.C237,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 48,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 47,
        [_Location_file]: null
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 48,
        [_Location_file]: null
      });
    },
    get C241() {
      return C[241] = dart.constList([C[242] || CT.C242, C[243] || CT.C243], T._LocationL());
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[241] || CT.C241,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 46,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 7,
        [Radius_x]: 7
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[245] || CT.C245,
        [BorderRadius_bottomLeft]: C[245] || CT.C245,
        [BorderRadius_topRight]: C[245] || CT.C245,
        [BorderRadius_topLeft]: C[245] || CT.C245
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 13,
        [_Location_line]: 84,
        [_Location_file]: null
      });
    },
    get C247() {
      return C[247] = dart.constList([C[248] || CT.C248], T._LocationL());
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[247] || CT.C247,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 83,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 81,
        [_Location_file]: null
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 11,
        [_Location_line]: 82,
        [_Location_file]: null
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 83,
        [_Location_file]: null
      });
    },
    get C250() {
      return C[250] = dart.constList([C[251] || CT.C251, C[252] || CT.C252, C[253] || CT.C253], T._LocationL());
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[250] || CT.C250,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 80,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 78,
        [_Location_file]: null
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 79,
        [_Location_file]: null
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 80,
        [_Location_file]: null
      });
    },
    get C255() {
      return C[255] = dart.constList([C[256] || CT.C256, C[257] || CT.C257, C[258] || CT.C258], T._LocationL());
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[255] || CT.C255,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 77,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 7,
        [_Location_line]: 76,
        [_Location_file]: null
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 77,
        [_Location_file]: null
      });
    },
    get C260() {
      return C[260] = dart.constList([C[261] || CT.C261, C[262] || CT.C262], T._LocationL());
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[260] || CT.C260,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 75,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 54,
        [OffsetBase__dx]: 10
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 10,
        [OffsetBase__dx]: 54
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C266() {
      return C[266] = dart.constList([C[267] || CT.C267], T._LocationL());
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[266] || CT.C266,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 109,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 587202560
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 2,
        [Shadow_offset]: C[210] || CT.C210,
        [Shadow_color]: C[270] || CT.C270,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 2,
        [OffsetBase__dx]: 0
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 503316480
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 2,
        [Shadow_offset]: C[272] || CT.C272,
        [Shadow_color]: C[273] || CT.C273,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 1,
        [OffsetBase__dx]: 0
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 855638016
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 3,
        [Shadow_offset]: C[275] || CT.C275,
        [Shadow_color]: C[276] || CT.C276,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C268() {
      return C[268] = dart.constList([C[269] || CT.C269, C[271] || CT.C271, C[274] || CT.C274], T.BoxShadowL());
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 32,
        [Radius_x]: 32
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[278] || CT.C278,
        [BorderRadius_bottomLeft]: C[278] || CT.C278,
        [BorderRadius_topRight]: C[279] || CT.C279,
        [BorderRadius_topLeft]: C[279] || CT.C279
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[278] || CT.C278,
        [BorderRadius_bottomLeft]: C[279] || CT.C279,
        [BorderRadius_topRight]: C[278] || CT.C278,
        [BorderRadius_topLeft]: C[279] || CT.C279
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 48,
        [BoxConstraints_minHeight]: 48,
        [BoxConstraints_maxWidth]: 48,
        [BoxConstraints_minWidth]: 48
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 32,
        [BoxConstraints_minHeight]: 32,
        [BoxConstraints_maxWidth]: 32,
        [BoxConstraints_minWidth]: 32
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 61,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 19,
        [_Location_line]: 179,
        [_Location_file]: null
      });
    },
    get C284() {
      return C[284] = dart.constList([C[285] || CT.C285, C[286] || CT.C286, C[287] || CT.C287], T._LocationL());
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[284] || CT.C284,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 175,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 17,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C289() {
      return C[289] = dart.constList([C[290] || CT.C290, C[291] || CT.C291], T._LocationL());
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[289] || CT.C289,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 173,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 15,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 15,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C293() {
      return C[293] = dart.constList([C[294] || CT.C294, C[295] || CT.C295, C[296] || CT.C296], T._LocationL());
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[293] || CT.C293,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 165,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 13,
        [_Location_line]: 162,
        [_Location_file]: null
      });
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C298() {
      return C[298] = dart.constList([C[299] || CT.C299, C[300] || CT.C300], T._LocationL());
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[298] || CT.C298,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 161,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 11,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "button",
        [_Location_column]: 11,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 161,
        [_Location_file]: null
      });
    },
    get C302() {
      return C[302] = dart.constList([C[303] || CT.C303, C[304] || CT.C304, C[305] || CT.C305], T._LocationL());
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[302] || CT.C302,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 158,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 155,
        [_Location_file]: null
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 156,
        [_Location_file]: null
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 9,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C307() {
      return C[307] = dart.constList([C[308] || CT.C308, C[309] || CT.C309, C[310] || CT.C310, C[311] || CT.C311], T._LocationL());
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[307] || CT.C307,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 154,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 154,
        [_Location_file]: null
      });
    },
    get C313() {
      return C[313] = dart.constList([C[314] || CT.C314, C[315] || CT.C315], T._LocationL());
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[313] || CT.C313,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 152,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 14,
        [_Location_line]: 289,
        [_Location_file]: null
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minScale",
        [_Location_column]: 7,
        [_Location_line]: 290,
        [_Location_file]: null
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScale",
        [_Location_column]: 7,
        [_Location_line]: 291,
        [_Location_file]: null
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTapZoomInvoked",
        [_Location_column]: 7,
        [_Location_line]: 292,
        [_Location_file]: null
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformationController",
        [_Location_column]: 7,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 294,
        [_Location_file]: null
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDoubleTapZooming",
        [_Location_column]: 7,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 7,
        [_Location_line]: 297,
        [_Location_file]: null
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "panEnabled",
        [_Location_column]: 7,
        [_Location_line]: 302,
        [_Location_file]: null
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionStart",
        [_Location_column]: 7,
        [_Location_line]: 303,
        [_Location_file]: null
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionUpdate",
        [_Location_column]: 7,
        [_Location_line]: 304,
        [_Location_file]: null
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionEnd",
        [_Location_column]: 7,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constrained",
        [_Location_column]: 7,
        [_Location_line]: 306,
        [_Location_file]: null
      });
    },
    get C317() {
      return C[317] = dart.constList([C[318] || CT.C318, C[319] || CT.C319, C[320] || CT.C320, C[321] || CT.C321, C[322] || CT.C322, C[323] || CT.C323, C[324] || CT.C324, C[325] || CT.C325, C[326] || CT.C326, C[327] || CT.C327, C[328] || CT.C328, C[329] || CT.C329, C[330] || CT.C330], T._LocationL());
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[317] || CT.C317,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 288,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowHorizontalScrollBar",
        [_Location_column]: 19,
        [_Location_line]: 360,
        [_Location_file]: null
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowVerticalScrollBar",
        [_Location_column]: 19,
        [_Location_line]: 361,
        [_Location_file]: null
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollHeadOffset",
        [_Location_column]: 19,
        [_Location_line]: 362,
        [_Location_file]: null
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 26,
        [_Location_line]: 363,
        [_Location_file]: null
      });
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 26,
        [_Location_line]: 364,
        [_Location_file]: null
      });
    },
    get C338() {
      return C[338] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 26,
        [_Location_line]: 365,
        [_Location_file]: null
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBookmarkViewOpen",
        [_Location_column]: 26,
        [_Location_line]: 366,
        [_Location_file]: null
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageLayoutMode",
        [_Location_column]: 37,
        [_Location_line]: 367,
        [_Location_file]: null
      });
    },
    get C332() {
      return C[332] = dart.constList([C[333] || CT.C333, C[334] || CT.C334, C[335] || CT.C335, C[336] || CT.C336, C[337] || CT.C337, C[338] || CT.C338, C[339] || CT.C339, C[340] || CT.C340], T._LocationL());
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[332] || CT.C332,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 359,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 15,
        [_Location_line]: 358,
        [_Location_file]: null
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 359,
        [_Location_file]: null
      });
    },
    get C342() {
      return C[342] = dart.constList([C[343] || CT.C343, C[344] || CT.C344], T._LocationL());
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[342] || CT.C342,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 357,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragStart",
        [_Location_column]: 11,
        [_Location_line]: 327,
        [_Location_file]: null
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragUpdate",
        [_Location_column]: 11,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragEnd",
        [_Location_column]: 11,
        [_Location_line]: 331,
        [_Location_file]: null
      });
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragStart",
        [_Location_column]: 11,
        [_Location_line]: 332,
        [_Location_file]: null
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 11,
        [_Location_line]: 338,
        [_Location_file]: null
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 11,
        [_Location_line]: 342,
        [_Location_file]: null
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 11,
        [_Location_line]: 346,
        [_Location_file]: null
      });
    },
    get C354() {
      return C[354] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 357,
        [_Location_file]: null
      });
    },
    get C346() {
      return C[346] = dart.constList([C[347] || CT.C347, C[348] || CT.C348, C[349] || CT.C349, C[350] || CT.C350, C[351] || CT.C351, C[352] || CT.C352, C[353] || CT.C353, C[354] || CT.C354], T._LocationL());
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[346] || CT.C346,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 326,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 40,
        [_Location_line]: 371,
        [_Location_file]: null
      });
    },
    get C356() {
      return C[356] = dart.constList([C[357] || CT.C357], T._LocationL());
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[356] || CT.C356,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 371,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 13,
        [_Location_line]: 370,
        [_Location_file]: null
      });
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 371,
        [_Location_file]: null
      });
    },
    get C359() {
      return C[359] = dart.constList([C[360] || CT.C360, C[361] || CT.C361], T._LocationL());
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[359] || CT.C359,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 369,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 324,
        [_Location_file]: null
      });
    },
    get C363() {
      return C[363] = dart.constList([C[364] || CT.C364], T._LocationL());
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[363] || CT.C363,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 323,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 31,
        [_Location_line]: 401,
        [_Location_file]: null
      });
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 402,
        [_Location_file]: null
      });
    },
    get C366() {
      return C[366] = dart.constList([C[367] || CT.C367, C[368] || CT.C368], T._LocationL());
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[366] || CT.C366,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 400,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 44,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C370() {
      return C[370] = dart.constList([C[371] || CT.C371], T._LocationL());
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[370] || CT.C370,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 406,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 414,
        [_Location_file]: null
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C373() {
      return C[373] = dart.constList([C[374] || CT.C374, C[375] || CT.C375], T._LocationL());
    },
    get C372() {
      return C[372] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[373] || CT.C373,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 413,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 17,
        [_Location_line]: 409,
        [_Location_file]: null
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C377() {
      return C[377] = dart.constList([C[378] || CT.C378, C[379] || CT.C379], T._LocationL());
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[377] || CT.C377,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 408,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 430,
        [_Location_file]: null
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 431,
        [_Location_file]: null
      });
    },
    get C381() {
      return C[381] = dart.constList([C[382] || CT.C382, C[383] || CT.C383], T._LocationL());
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[381] || CT.C381,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 429,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 17,
        [_Location_line]: 426,
        [_Location_file]: null
      });
    },
    get C387() {
      return C[387] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C385() {
      return C[385] = dart.constList([C[386] || CT.C386, C[387] || CT.C387], T._LocationL());
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[385] || CT.C385,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 425,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollable",
        [_Location_column]: 13,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "insetPadding",
        [_Location_column]: 13,
        [_Location_line]: 391,
        [_Location_file]: null
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "contentPadding",
        [_Location_column]: 13,
        [_Location_line]: 392,
        [_Location_file]: null
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "buttonPadding",
        [_Location_column]: 13,
        [_Location_line]: 395,
        [_Location_file]: null
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 13,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 13,
        [_Location_line]: 404,
        [_Location_file]: null
      });
    },
    get C397() {
      return C[397] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "content",
        [_Location_column]: 13,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 13,
        [_Location_line]: 407,
        [_Location_file]: null
      });
    },
    get C389() {
      return C[389] = dart.constList([C[390] || CT.C390, C[391] || CT.C391, C[392] || CT.C392, C[393] || CT.C393, C[394] || CT.C394, C[395] || CT.C395, C[396] || CT.C396, C[397] || CT.C397, C[398] || CT.C398], T._LocationL());
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[389] || CT.C389,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 389,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C401() {
      return C[401] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 451,
        [_Location_file]: null
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 11,
        [_Location_line]: 452,
        [_Location_file]: null
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 453,
        [_Location_file]: null
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardType",
        [_Location_column]: 11,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableInteractiveSelection",
        [_Location_column]: 11,
        [_Location_line]: 469,
        [_Location_file]: null
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 470,
        [_Location_file]: null
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 471,
        [_Location_file]: null
      });
    },
    get C408() {
      return C[408] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEditingComplete",
        [_Location_column]: 11,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFieldSubmitted",
        [_Location_column]: 11,
        [_Location_line]: 473,
        [_Location_file]: null
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "validator",
        [_Location_column]: 11,
        [_Location_line]: 477,
        [_Location_file]: null
      });
    },
    get C400() {
      return C[400] = dart.constList([C[401] || CT.C401, C[402] || CT.C402, C[403] || CT.C403, C[404] || CT.C404, C[405] || CT.C405, C[406] || CT.C406, C[407] || CT.C407, C[408] || CT.C408, C[409] || CT.C409, C[410] || CT.C410], T._LocationL());
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[400] || CT.C400,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 450,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 449,
        [_Location_file]: null
      });
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 450,
        [_Location_file]: null
      });
    },
    get C412() {
      return C[412] = dart.constList([C[413] || CT.C413, C[414] || CT.C414], T._LocationL());
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[412] || CT.C412,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 448,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 447,
        [_Location_file]: null
      });
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 448,
        [_Location_file]: null
      });
    },
    get C416() {
      return C[416] = dart.constList([C[417] || CT.C417, C[418] || CT.C418], T._LocationL());
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[416] || CT.C416,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 446,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowPaginationDialog",
        [_Location_column]: 14,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollStatus",
        [_Location_column]: 14,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollHead",
        [_Location_column]: 14,
        [_Location_line]: 167,
        [_Location_file]: null
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 14,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 14,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C426() {
      return C[426] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDimension",
        [_Location_column]: 14,
        [_Location_line]: 170,
        [_Location_file]: null
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "totalImageSize",
        [_Location_column]: 14,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportDimension",
        [_Location_column]: 14,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "currentOffset",
        [_Location_column]: 7,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C430() {
      return C[430] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScale",
        [_Location_column]: 14,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minScale",
        [_Location_column]: 14,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTapZoomInvoked",
        [_Location_column]: 7,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDoubleTapZooming",
        [_Location_column]: 14,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 14,
        [_Location_line]: 178,
        [_Location_file]: null
      });
    },
    get C435() {
      return C[435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 14,
        [_Location_line]: 179,
        [_Location_file]: null
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxPdfPageWidth",
        [_Location_column]: 14,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 14,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C438() {
      return C[438] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 14,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBookmarkViewOpen",
        [_Location_column]: 14,
        [_Location_line]: 183,
        [_Location_file]: null
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 14,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C441() {
      return C[441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isPanEnabled",
        [_Location_column]: 7,
        [_Location_line]: 185,
        [_Location_file]: null
      });
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionStart",
        [_Location_column]: 7,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionUpdate",
        [_Location_column]: 7,
        [_Location_line]: 187,
        [_Location_file]: null
      });
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onInteractionEnd",
        [_Location_column]: 7,
        [_Location_line]: 188,
        [_Location_file]: null
      });
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformationController",
        [_Location_column]: 7,
        [_Location_line]: 189,
        [_Location_file]: null
      });
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPdfOffsetChanged",
        [_Location_column]: 7,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C420() {
      return C[420] = dart.constList([C[421] || CT.C421, C[422] || CT.C422, C[423] || CT.C423, C[424] || CT.C424, C[425] || CT.C425, C[426] || CT.C426, C[427] || CT.C427, C[428] || CT.C428, C[429] || CT.C429, C[430] || CT.C430, C[431] || CT.C431, C[432] || CT.C432, C[433] || CT.C433, C[434] || CT.C434, C[435] || CT.C435, C[436] || CT.C436, C[437] || CT.C437, C[438] || CT.C438, C[439] || CT.C439, C[440] || CT.C440, C[441] || CT.C441, C[442] || CT.C442, C[443] || CT.C443, C[444] || CT.C444, C[445] || CT.C445, C[446] || CT.C446], T._LocationL());
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[420] || CT.C420,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 164,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_scrollable.dart"
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bytes",
        [_Location_column]: 27,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C452() {
      return C[452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 9,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticLabel",
        [_Location_column]: 9,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C448() {
      return C[448] = dart.constList([C[449] || CT.C449, C[450] || CT.C450, C[451] || CT.C451, C[452] || CT.C452, C[453] || CT.C453, C[454] || CT.C454], T._LocationL());
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[448] || CT.C448,
        [_Location_name]: null,
        [_Location_column]: 34,
        [_Location_line]: 212,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 19,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 19,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C456() {
      return C[456] = dart.constList([C[457] || CT.C457, C[458] || CT.C458], T._LocationL());
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[456] || CT.C456,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 228,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 22,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C460() {
      return C[460] = dart.constList([C[461] || CT.C461], T._LocationL());
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[460] || CT.C460,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 226,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C464() {
      return C[464] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 19,
        [_Location_line]: 236,
        [_Location_file]: null
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 19,
        [_Location_line]: 237,
        [_Location_file]: null
      });
    },
    get C463() {
      return C[463] = dart.constList([C[464] || CT.C464, C[465] || CT.C465], T._LocationL());
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[463] || CT.C463,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 235,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C468() {
      return C[468] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 19,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C467() {
      return C[467] = dart.constList([C[468] || CT.C468], T._LocationL());
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[467] || CT.C467,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 233,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C471() {
      return C[471] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C472() {
      return C[472] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C473() {
      return C[473] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C474() {
      return C[474] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C475() {
      return C[475] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C470() {
      return C[470] = dart.constList([C[471] || CT.C471, C[472] || CT.C472, C[473] || CT.C473, C[474] || CT.C474, C[475] || CT.C475], T._LocationL());
    },
    get C469() {
      return C[469] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[470] || CT.C470,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 220,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C478() {
      return C[478] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 15,
        [_Location_line]: 257,
        [_Location_file]: null
      });
    },
    get C479() {
      return C[479] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 34,
        [_Location_line]: 258,
        [_Location_file]: null
      });
    },
    get C480() {
      return C[480] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 34,
        [_Location_line]: 259,
        [_Location_file]: null
      });
    },
    get C481() {
      return C[481] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 22,
        [_Location_line]: 260,
        [_Location_file]: null
      });
    },
    get C482() {
      return C[482] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageIndex",
        [_Location_column]: 22,
        [_Location_line]: 261,
        [_Location_file]: null
      });
    },
    get C483() {
      return C[483] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 22,
        [_Location_line]: 262,
        [_Location_file]: null
      });
    },
    get C484() {
      return C[484] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 22,
        [_Location_line]: 263,
        [_Location_file]: null
      });
    },
    get C485() {
      return C[485] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 22,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C486() {
      return C[486] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDocumentLinkNavigation",
        [_Location_column]: 22,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C487() {
      return C[487] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableTextSelection",
        [_Location_column]: 22,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C488() {
      return C[488] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionChanged",
        [_Location_column]: 22,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C489() {
      return C[489] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragStarted",
        [_Location_column]: 22,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C490() {
      return C[490] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragEnded",
        [_Location_column]: 22,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C491() {
      return C[491] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textCollection",
        [_Location_column]: 22,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C492() {
      return C[492] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "searchTextHighlightColor",
        [_Location_column]: 22,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C493() {
      return C[493] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfTextSearchResult",
        [_Location_column]: 22,
        [_Location_line]: 272,
        [_Location_file]: null
      });
    },
    get C494() {
      return C[494] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 22,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C495() {
      return C[495] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfScrollableStateKey",
        [_Location_column]: 22,
        [_Location_line]: 274,
        [_Location_file]: null
      });
    },
    get C496() {
      return C[496] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "singlePageViewStateKey",
        [_Location_column]: 22,
        [_Location_line]: 275,
        [_Location_file]: null
      });
    },
    get C497() {
      return C[497] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportGlobalRect",
        [_Location_column]: 22,
        [_Location_line]: 276,
        [_Location_file]: null
      });
    },
    get C498() {
      return C[498] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 22,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C499() {
      return C[499] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isSinglePageView",
        [_Location_column]: 22,
        [_Location_line]: 278,
        [_Location_file]: null
      });
    },
    get C477() {
      return C[477] = dart.constList([C[478] || CT.C478, C[479] || CT.C479, C[480] || CT.C480, C[481] || CT.C481, C[482] || CT.C482, C[483] || CT.C483, C[484] || CT.C484, C[485] || CT.C485, C[486] || CT.C486, C[487] || CT.C487, C[488] || CT.C488, C[489] || CT.C489, C[490] || CT.C490, C[491] || CT.C491, C[492] || CT.C492, C[493] || CT.C493, C[494] || CT.C494, C[495] || CT.C495, C[496] || CT.C496, C[497] || CT.C497, C[498] || CT.C498, C[499] || CT.C499], T._LocationL());
    },
    get C476() {
      return C[476] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[477] || CT.C477,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 256,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C502() {
      return C[502] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 253,
        [_Location_file]: null
      });
    },
    get C503() {
      return C[503] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 254,
        [_Location_file]: null
      });
    },
    get C504() {
      return C[504] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 255,
        [_Location_file]: null
      });
    },
    get C505() {
      return C[505] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C501() {
      return C[501] = dart.constList([C[502] || CT.C502, C[503] || CT.C503, C[504] || CT.C504, C[505] || CT.C505], T._LocationL());
    },
    get C500() {
      return C[500] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[501] || CT.C501,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 252,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C508() {
      return C[508] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 21,
        [_Location_line]: 416,
        [_Location_file]: null
      });
    },
    get C509() {
      return C[509] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 21,
        [_Location_line]: 417,
        [_Location_file]: null
      });
    },
    get C510() {
      return C[510] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 451,
        [_Location_file]: null
      });
    },
    get C507() {
      return C[507] = dart.constList([C[508] || CT.C508, C[509] || CT.C509, C[510] || CT.C510], T._LocationL());
    },
    get C506() {
      return C[506] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[507] || CT.C507,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 415,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C513() {
      return C[513] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 19,
        [_Location_line]: 332,
        [_Location_file]: null
      });
    },
    get C514() {
      return C[514] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onKey",
        [_Location_column]: 19,
        [_Location_line]: 333,
        [_Location_file]: null
      });
    },
    get C515() {
      return C[515] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C512() {
      return C[512] = dart.constList([C[513] || CT.C513, C[514] || CT.C514, C[515] || CT.C515], T._LocationL());
    },
    get C511() {
      return C[511] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[512] || CT.C512,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 331,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C518() {
      return C[518] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 17,
        [_Location_line]: 285,
        [_Location_file]: null
      });
    },
    get C519() {
      return C[519] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 17,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C520() {
      return C[520] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerMove",
        [_Location_column]: 17,
        [_Location_line]: 318,
        [_Location_file]: null
      });
    },
    get C521() {
      return C[521] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerUp",
        [_Location_column]: 17,
        [_Location_line]: 325,
        [_Location_file]: null
      });
    },
    get C522() {
      return C[522] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 331,
        [_Location_file]: null
      });
    },
    get C517() {
      return C[517] = dart.constList([C[518] || CT.C518, C[519] || CT.C519, C[520] || CT.C520, C[521] || CT.C521, C[522] || CT.C522], T._LocationL());
    },
    get C516() {
      return C[516] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[517] || CT.C517,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 284,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C525() {
      return C[525] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "quarterTurns",
        [_Location_column]: 15,
        [_Location_line]: 283,
        [_Location_file]: null
      });
    },
    get C526() {
      return C[526] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 284,
        [_Location_file]: null
      });
    },
    get C524() {
      return C[524] = dart.constList([C[525] || CT.C525, C[526] || CT.C526], T._LocationL());
    },
    get C523() {
      return C[523] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[524] || CT.C524,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 282,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C529() {
      return C[529] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 19,
        [_Location_line]: 459,
        [_Location_file]: null
      });
    },
    get C530() {
      return C[530] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 462,
        [_Location_file]: null
      });
    },
    get C528() {
      return C[528] = dart.constList([C[529] || CT.C529, C[530] || CT.C530], T._LocationL());
    },
    get C527() {
      return C[527] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[528] || CT.C528,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 458,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C533() {
      return C[533] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "quarterTurns",
        [_Location_column]: 15,
        [_Location_line]: 457,
        [_Location_file]: null
      });
    },
    get C534() {
      return C[534] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 458,
        [_Location_file]: null
      });
    },
    get C532() {
      return C[532] = dart.constList([C[533] || CT.C533, C[534] || CT.C534], T._LocationL());
    },
    get C531() {
      return C[531] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[532] || CT.C532,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 456,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C537() {
      return C[537] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 20,
        [_Location_line]: 463,
        [_Location_file]: null
      });
    },
    get C536() {
      return C[536] = dart.constList([C[537] || CT.C537], T._LocationL());
    },
    get C535() {
      return C[535] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[536] || CT.C536,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 463,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C540() {
      return C[540] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C541() {
      return C[541] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 473,
        [_Location_file]: null
      });
    },
    get C542() {
      return C[542] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 474,
        [_Location_file]: null
      });
    },
    get C543() {
      return C[543] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundDecoration",
        [_Location_column]: 9,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C539() {
      return C[539] = dart.constList([C[540] || CT.C540, C[541] || CT.C541, C[542] || CT.C542, C[543] || CT.C543], T._LocationL());
    },
    get C538() {
      return C[538] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[539] || CT.C539,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 471,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C544() {
      return C[544] = dart.const({
        __proto__: enums.PdfInteractionMode.prototype,
        [_name$1]: "PdfInteractionMode.selection",
        index: 0
      });
    },
    get C545() {
      return C[545] = dart.const({
        __proto__: enums.PdfScrollDirection.prototype,
        [_name$1]: "PdfScrollDirection.vertical",
        index: 0
      });
    },
    get C546() {
      return C[546] = dart.const({
        __proto__: enums.PdfPageLayoutMode.prototype,
        [_name$1]: "PdfPageLayoutMode.continuous",
        index: 0
      });
    },
    get C547() {
      return C[547] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293225984.0
      });
    },
    get C550() {
      return C[550] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 1164,
        [_Location_file]: null
      });
    },
    get C549() {
      return C[549] = dart.constList([C[550] || CT.C550], T._LocationL());
    },
    get C548() {
      return C[548] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[549] || CT.C549,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 1163,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C553() {
      return C[553] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 11,
        [_Location_line]: 1170,
        [_Location_file]: null
      });
    },
    get C554() {
      return C[554] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 11,
        [_Location_line]: 1173,
        [_Location_file]: null
      });
    },
    get C552() {
      return C[552] = dart.constList([C[553] || CT.C553, C[554] || CT.C554], T._LocationL());
    },
    get C551() {
      return C[551] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[552] || CT.C552,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 1169,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C557() {
      return C[557] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1167,
        [_Location_file]: null
      });
    },
    get C556() {
      return C[556] = dart.constList([C[557] || CT.C557], T._LocationL());
    },
    get C555() {
      return C[555] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[556] || CT.C556,
        [_Location_name]: null,
        [_Location_column]: 43,
        [_Location_line]: 1166,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C560() {
      return C[560] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 52,
        [_Location_line]: 1316,
        [_Location_file]: null
      });
    },
    get C561() {
      return C[561] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "imageStream",
        [_Location_column]: 39,
        [_Location_line]: 1317,
        [_Location_file]: null
      });
    },
    get C562() {
      return C[562] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportGlobalRect",
        [_Location_column]: 29,
        [_Location_line]: 1318,
        [_Location_file]: null
      });
    },
    get C563() {
      return C[563] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "parentViewport",
        [_Location_column]: 29,
        [_Location_line]: 1319,
        [_Location_file]: null
      });
    },
    get C564() {
      return C[564] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 36,
        [_Location_line]: 1320,
        [_Location_file]: null
      });
    },
    get C565() {
      return C[565] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 33,
        [_Location_line]: 1326,
        [_Location_file]: null
      });
    },
    get C566() {
      return C[566] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 33,
        [_Location_line]: 1333,
        [_Location_file]: null
      });
    },
    get C567() {
      return C[567] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageSpacing",
        [_Location_column]: 36,
        [_Location_line]: 1335,
        [_Location_file]: null
      });
    },
    get C568() {
      return C[568] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 29,
        [_Location_line]: 1336,
        [_Location_file]: null
      });
    },
    get C569() {
      return C[569] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 29,
        [_Location_line]: 1337,
        [_Location_file]: null
      });
    },
    get C570() {
      return C[570] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageIndex",
        [_Location_column]: 29,
        [_Location_line]: 1338,
        [_Location_file]: null
      });
    },
    get C571() {
      return C[571] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 29,
        [_Location_line]: 1339,
        [_Location_file]: null
      });
    },
    get C572() {
      return C[572] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDocumentLinkAnnotation",
        [_Location_column]: 36,
        [_Location_line]: 1340,
        [_Location_file]: null
      });
    },
    get C573() {
      return C[573] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableTextSelection",
        [_Location_column]: 36,
        [_Location_line]: 1341,
        [_Location_file]: null
      });
    },
    get C574() {
      return C[574] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionChanged",
        [_Location_column]: 36,
        [_Location_line]: 1342,
        [_Location_file]: null
      });
    },
    get C575() {
      return C[575] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragStarted",
        [_Location_column]: 29,
        [_Location_line]: 1343,
        [_Location_file]: null
      });
    },
    get C576() {
      return C[576] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragEnded",
        [_Location_column]: 29,
        [_Location_line]: 1344,
        [_Location_file]: null
      });
    },
    get C577() {
      return C[577] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "searchTextHighlightColor",
        [_Location_column]: 36,
        [_Location_line]: 1345,
        [_Location_file]: null
      });
    },
    get C578() {
      return C[578] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textCollection",
        [_Location_column]: 29,
        [_Location_line]: 1346,
        [_Location_file]: null
      });
    },
    get C579() {
      return C[579] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 29,
        [_Location_line]: 1347,
        [_Location_file]: null
      });
    },
    get C580() {
      return C[580] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfTextSearchResult",
        [_Location_column]: 50,
        [_Location_line]: 1348,
        [_Location_file]: null
      });
    },
    get C581() {
      return C[581] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfScrollableStateKey",
        [_Location_column]: 29,
        [_Location_line]: 1349,
        [_Location_file]: null
      });
    },
    get C582() {
      return C[582] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "singlePageViewStateKey",
        [_Location_column]: 29,
        [_Location_line]: 1350,
        [_Location_file]: null
      });
    },
    get C583() {
      return C[583] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 29,
        [_Location_line]: 1351,
        [_Location_file]: null
      });
    },
    get C584() {
      return C[584] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPdfPagePointerDown",
        [_Location_column]: 29,
        [_Location_line]: 1352,
        [_Location_file]: null
      });
    },
    get C585() {
      return C[585] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPdfPagePointerMove",
        [_Location_column]: 29,
        [_Location_line]: 1353,
        [_Location_file]: null
      });
    },
    get C586() {
      return C[586] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPdfPagePointerUp",
        [_Location_column]: 29,
        [_Location_line]: 1354,
        [_Location_file]: null
      });
    },
    get C587() {
      return C[587] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticLabel",
        [_Location_column]: 48,
        [_Location_line]: 1355,
        [_Location_file]: null
      });
    },
    get C588() {
      return C[588] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isSinglePageView",
        [_Location_column]: 51,
        [_Location_line]: 1356,
        [_Location_file]: null
      });
    },
    get C559() {
      return C[559] = dart.constList([C[560] || CT.C560, C[561] || CT.C561, C[562] || CT.C562, C[563] || CT.C563, C[564] || CT.C564, C[565] || CT.C565, C[566] || CT.C566, C[567] || CT.C567, C[568] || CT.C568, C[569] || CT.C569, C[570] || CT.C570, C[571] || CT.C571, C[572] || CT.C572, C[573] || CT.C573, C[574] || CT.C574, C[575] || CT.C575, C[576] || CT.C576, C[577] || CT.C577, C[578] || CT.C578, C[579] || CT.C579, C[580] || CT.C580, C[581] || CT.C581, C[582] || CT.C582, C[583] || CT.C583, C[584] || CT.C584, C[585] || CT.C585, C[586] || CT.C586, C[587] || CT.C587, C[588] || CT.C588], T._LocationL());
    },
    get C558() {
      return C[558] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[559] || CT.C559,
        [_Location_name]: null,
        [_Location_column]: 50,
        [_Location_line]: 1315,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C591() {
      return C[591] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 1442,
        [_Location_file]: null
      });
    },
    get C592() {
      return C[592] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 31,
        [_Location_line]: 1443,
        [_Location_file]: null
      });
    },
    get C593() {
      return C[593] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageController",
        [_Location_column]: 31,
        [_Location_line]: 1444,
        [_Location_file]: null
      });
    },
    get C594() {
      return C[594] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPageChanged",
        [_Location_column]: 31,
        [_Location_line]: 1445,
        [_Location_file]: null
      });
    },
    get C595() {
      return C[595] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionUpdate",
        [_Location_column]: 31,
        [_Location_line]: 1446,
        [_Location_file]: null
      });
    },
    get C596() {
      return C[596] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportDimension",
        [_Location_column]: 31,
        [_Location_line]: 1447,
        [_Location_file]: null
      });
    },
    get C597() {
      return C[597] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowPaginationDialog",
        [_Location_column]: 38,
        [_Location_line]: 1448,
        [_Location_file]: null
      });
    },
    get C598() {
      return C[598] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollHead",
        [_Location_column]: 38,
        [_Location_line]: 1449,
        [_Location_file]: null
      });
    },
    get C599() {
      return C[599] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollStatus",
        [_Location_column]: 38,
        [_Location_line]: 1450,
        [_Location_file]: null
      });
    },
    get C600() {
      return C[600] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 31,
        [_Location_line]: 1451,
        [_Location_file]: null
      });
    },
    get C601() {
      return C[601] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 31,
        [_Location_line]: 1452,
        [_Location_file]: null
      });
    },
    get C602() {
      return C[602] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDoubleTapZooming",
        [_Location_column]: 38,
        [_Location_line]: 1453,
        [_Location_file]: null
      });
    },
    get C603() {
      return C[603] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 38,
        [_Location_line]: 1454,
        [_Location_file]: null
      });
    },
    get C604() {
      return C[604] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 31,
        [_Location_line]: 1455,
        [_Location_file]: null
      });
    },
    get C605() {
      return C[605] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onZoomLevelChanged",
        [_Location_column]: 31,
        [_Location_line]: 1456,
        [_Location_file]: null
      });
    },
    get C606() {
      return C[606] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTap",
        [_Location_column]: 31,
        [_Location_line]: 1457,
        [_Location_file]: null
      });
    },
    get C607() {
      return C[607] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPdfOffsetChanged",
        [_Location_column]: 31,
        [_Location_line]: 1458,
        [_Location_file]: null
      });
    },
    get C608() {
      return C[608] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBookmarkViewOpen",
        [_Location_column]: 31,
        [_Location_line]: 1459,
        [_Location_file]: null
      });
    },
    get C609() {
      return C[609] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 31,
        [_Location_line]: 1460,
        [_Location_file]: null
      });
    },
    get C590() {
      return C[590] = dart.constList([C[591] || CT.C591, C[592] || CT.C592, C[593] || CT.C593, C[594] || CT.C594, C[595] || CT.C595, C[596] || CT.C596, C[597] || CT.C597, C[598] || CT.C598, C[599] || CT.C599, C[600] || CT.C600, C[601] || CT.C601, C[602] || CT.C602, C[603] || CT.C603, C[604] || CT.C604, C[605] || CT.C605, C[606] || CT.C606, C[607] || CT.C607, C[608] || CT.C608, C[609] || CT.C609], T._LocationL());
    },
    get C589() {
      return C[589] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[590] || CT.C590,
        [_Location_name]: null,
        [_Location_column]: 34,
        [_Location_line]: 1441,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C612() {
      return C[612] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 27,
        [_Location_line]: 1430,
        [_Location_file]: null
      });
    },
    get C613() {
      return C[613] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 27,
        [_Location_line]: 1431,
        [_Location_file]: null
      });
    },
    get C614() {
      return C[614] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 1441,
        [_Location_file]: null
      });
    },
    get C611() {
      return C[611] = dart.constList([C[612] || CT.C612, C[613] || CT.C613, C[614] || CT.C614], T._LocationL());
    },
    get C610() {
      return C[610] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[611] || CT.C611,
        [_Location_name]: null,
        [_Location_column]: 40,
        [_Location_line]: 1429,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C617() {
      return C[617] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 1491,
        [_Location_file]: null
      });
    },
    get C618() {
      return C[618] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 31,
        [_Location_line]: 1492,
        [_Location_file]: null
      });
    },
    get C619() {
      return C[619] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 31,
        [_Location_line]: 1493,
        [_Location_file]: null
      });
    },
    get C616() {
      return C[616] = dart.constList([C[617] || CT.C617, C[618] || CT.C618, C[619] || CT.C619], T._LocationL());
    },
    get C615() {
      return C[615] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[616] || CT.C616,
        [_Location_name]: null,
        [_Location_column]: 35,
        [_Location_line]: 1490,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C622() {
      return C[622] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 1496,
        [_Location_file]: null
      });
    },
    get C623() {
      return C[623] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 31,
        [_Location_line]: 1497,
        [_Location_file]: null
      });
    },
    get C624() {
      return C[624] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 31,
        [_Location_line]: 1498,
        [_Location_file]: null
      });
    },
    get C621() {
      return C[621] = dart.constList([C[622] || CT.C622, C[623] || CT.C623, C[624] || CT.C624], T._LocationL());
    },
    get C620() {
      return C[620] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[621] || CT.C621,
        [_Location_name]: null,
        [_Location_column]: 35,
        [_Location_line]: 1495,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C627() {
      return C[627] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 31,
        [_Location_line]: 1513,
        [_Location_file]: null
      });
    },
    get C628() {
      return C[628] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 31,
        [_Location_line]: 1514,
        [_Location_file]: null
      });
    },
    get C629() {
      return C[629] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 31,
        [_Location_line]: 1515,
        [_Location_file]: null
      });
    },
    get C626() {
      return C[626] = dart.constList([C[627] || CT.C627, C[628] || CT.C628, C[629] || CT.C629], T._LocationL());
    },
    get C625() {
      return C[625] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[626] || CT.C626,
        [_Location_name]: null,
        [_Location_column]: 34,
        [_Location_line]: 1512,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C632() {
      return C[632] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 27,
        [_Location_line]: 1501,
        [_Location_file]: null
      });
    },
    get C633() {
      return C[633] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 27,
        [_Location_line]: 1502,
        [_Location_file]: null
      });
    },
    get C634() {
      return C[634] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 1512,
        [_Location_file]: null
      });
    },
    get C631() {
      return C[631] = dart.constList([C[632] || CT.C632, C[633] || CT.C633, C[634] || CT.C634], T._LocationL());
    },
    get C630() {
      return C[630] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[631] || CT.C631,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 1500,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C637() {
      return C[637] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowPaginationDialog",
        [_Location_column]: 34,
        [_Location_line]: 1518,
        [_Location_file]: null
      });
    },
    get C638() {
      return C[638] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollStatus",
        [_Location_column]: 34,
        [_Location_line]: 1519,
        [_Location_file]: null
      });
    },
    get C639() {
      return C[639] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollHead",
        [_Location_column]: 34,
        [_Location_line]: 1520,
        [_Location_file]: null
      });
    },
    get C640() {
      return C[640] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 27,
        [_Location_line]: 1521,
        [_Location_file]: null
      });
    },
    get C641() {
      return C[641] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 27,
        [_Location_line]: 1522,
        [_Location_file]: null
      });
    },
    get C642() {
      return C[642] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDimension",
        [_Location_column]: 27,
        [_Location_line]: 1523,
        [_Location_file]: null
      });
    },
    get C643() {
      return C[643] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "totalImageSize",
        [_Location_column]: 27,
        [_Location_line]: 1524,
        [_Location_file]: null
      });
    },
    get C644() {
      return C[644] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportDimension",
        [_Location_column]: 27,
        [_Location_line]: 1525,
        [_Location_file]: null
      });
    },
    get C645() {
      return C[645] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPdfOffsetChanged",
        [_Location_column]: 27,
        [_Location_line]: 1526,
        [_Location_file]: null
      });
    },
    get C646() {
      return C[646] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isPanEnabled",
        [_Location_column]: 27,
        [_Location_line]: 1527,
        [_Location_file]: null
      });
    },
    get C647() {
      return C[647] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScale",
        [_Location_column]: 27,
        [_Location_line]: 1528,
        [_Location_file]: null
      });
    },
    get C648() {
      return C[648] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minScale",
        [_Location_column]: 27,
        [_Location_line]: 1529,
        [_Location_file]: null
      });
    },
    get C649() {
      return C[649] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDoubleTapZooming",
        [_Location_column]: 34,
        [_Location_line]: 1530,
        [_Location_file]: null
      });
    },
    get C650() {
      return C[650] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 34,
        [_Location_line]: 1531,
        [_Location_file]: null
      });
    },
    get C651() {
      return C[651] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxPdfPageWidth",
        [_Location_column]: 27,
        [_Location_line]: 1532,
        [_Location_file]: null
      });
    },
    get C652() {
      return C[652] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaleEnabled",
        [_Location_column]: 27,
        [_Location_line]: 1533,
        [_Location_file]: null
      });
    },
    get C653() {
      return C[653] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxScrollExtent",
        [_Location_column]: 27,
        [_Location_line]: 1534,
        [_Location_file]: null
      });
    },
    get C654() {
      return C[654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 27,
        [_Location_line]: 1535,
        [_Location_file]: null
      });
    },
    get C655() {
      return C[655] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 27,
        [_Location_line]: 1536,
        [_Location_file]: null
      });
    },
    get C656() {
      return C[656] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBookmarkViewOpen",
        [_Location_column]: 27,
        [_Location_line]: 1537,
        [_Location_file]: null
      });
    },
    get C657() {
      return C[657] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 1538,
        [_Location_file]: null
      });
    },
    get C658() {
      return C[658] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 27,
        [_Location_line]: 1539,
        [_Location_file]: null
      });
    },
    get C659() {
      return C[659] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTap",
        [_Location_column]: 27,
        [_Location_line]: 1540,
        [_Location_file]: null
      });
    },
    get C636() {
      return C[636] = dart.constList([C[637] || CT.C637, C[638] || CT.C638, C[639] || CT.C639, C[640] || CT.C640, C[641] || CT.C641, C[642] || CT.C642, C[643] || CT.C643, C[644] || CT.C644, C[645] || CT.C645, C[646] || CT.C646, C[647] || CT.C647, C[648] || CT.C648, C[649] || CT.C649, C[650] || CT.C650, C[651] || CT.C651, C[652] || CT.C652, C[653] || CT.C653, C[654] || CT.C654, C[655] || CT.C655, C[656] || CT.C656, C[657] || CT.C657, C[658] || CT.C658, C[659] || CT.C659], T._LocationL());
    },
    get C635() {
      return C[635] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[636] || CT.C636,
        [_Location_name]: null,
        [_Location_column]: 40,
        [_Location_line]: 1517,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C662() {
      return C[662] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 40,
        [_Location_line]: 1552,
        [_Location_file]: null
      });
    },
    get C663() {
      return C[663] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 54,
        [_Location_line]: 1552,
        [_Location_file]: null
      });
    },
    get C664() {
      return C[664] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 31,
        [_Location_line]: 1553,
        [_Location_file]: null
      });
    },
    get C665() {
      return C[665] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "_bookmarkView",
        [_Location_column]: 53,
        [_Location_line]: 1553,
        [_Location_file]: null
      });
    },
    get C661() {
      return C[661] = dart.constList([C[662] || CT.C662, C[663] || CT.C663, C[664] || CT.C664, C[665] || CT.C665], T._LocationL());
    },
    get C660() {
      return C[660] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[661] || CT.C661,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 1552,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C668() {
      return C[668] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 25,
        [_Location_line]: 1550,
        [_Location_file]: null
      });
    },
    get C667() {
      return C[667] = dart.constList([C[668] || CT.C668], T._LocationL());
    },
    get C666() {
      return C[666] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[667] || CT.C667,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 1549,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C671() {
      return C[671] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "future",
        [_Location_column]: 19,
        [_Location_line]: 1202,
        [_Location_file]: null
      });
    },
    get C672() {
      return C[672] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 19,
        [_Location_line]: 1203,
        [_Location_file]: null
      });
    },
    get C670() {
      return C[670] = dart.constList([C[671] || CT.C671, C[672] || CT.C672], T._LocationL());
    },
    get C669() {
      return C[669] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[670] || CT.C670,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 1201,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C675() {
      return C[675] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 1199,
        [_Location_file]: null
      });
    },
    get C676() {
      return C[676] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1201,
        [_Location_file]: null
      });
    },
    get C674() {
      return C[674] = dart.constList([C[675] || CT.C675, C[676] || CT.C676], T._LocationL());
    },
    get C673() {
      return C[673] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[674] || CT.C674,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1198,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C679() {
      return C[679] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 13,
        [_Location_line]: 1194,
        [_Location_file]: null
      });
    },
    get C680() {
      return C[680] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 13,
        [_Location_line]: 1195,
        [_Location_file]: null
      });
    },
    get C681() {
      return C[681] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerMove",
        [_Location_column]: 13,
        [_Location_line]: 1196,
        [_Location_file]: null
      });
    },
    get C682() {
      return C[682] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerUp",
        [_Location_column]: 13,
        [_Location_line]: 1197,
        [_Location_file]: null
      });
    },
    get C683() {
      return C[683] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1198,
        [_Location_file]: null
      });
    },
    get C678() {
      return C[678] = dart.constList([C[679] || CT.C679, C[680] || CT.C680, C[681] || CT.C681, C[682] || CT.C682, C[683] || CT.C683], T._LocationL());
    },
    get C677() {
      return C[677] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[678] || CT.C678,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 1193,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart"
      });
    },
    get C684() {
      return C[684] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.jumpToPage",
        index: 0
      });
    },
    get C685() {
      return C[685] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.firstPage",
        index: 1
      });
    },
    get C686() {
      return C[686] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.lastPage",
        index: 3
      });
    },
    get C687() {
      return C[687] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.previousPage",
        index: 4
      });
    },
    get C688() {
      return C[688] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.nextPage",
        index: 2
      });
    }
  }, false);
  var C = Array(689).fill(void 0);
  var I = [
    "package:syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/common/pdf_provider.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/bookmark/bookmark_view.dart",
    "package:syncfusion_flutter_pdfviewer/src/bookmark/bookmark_view.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/single_page_view.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/single_page_view.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdfviewer_canvas.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdfviewer_canvas.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_status.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_status.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/scroll_head_overlay.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head_overlay.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_scrollable.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_scrollable.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/control/pdf_page_view.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_page_view.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.3.48-beta/lib/src/pdfviewer.dart",
    "package:syncfusion_flutter_pdfviewer/src/pdfviewer.dart"
  ];
  pdf_provider.PdfProvider = class PdfProvider extends core.Object {};
  (pdf_provider.PdfProvider.new = function() {
    ;
  }).prototype = pdf_provider.PdfProvider.prototype;
  dart.addTypeTests(pdf_provider.PdfProvider);
  dart.addTypeCaches(pdf_provider.PdfProvider);
  dart.setLibraryUri(pdf_provider.PdfProvider, I[0]);
  var __NetworkPdf__url = dart.privateName(pdf_provider, "_#NetworkPdf#_url");
  var __NetworkPdf__url_isSet = dart.privateName(pdf_provider, "_#NetworkPdf#_url#isSet");
  var _headers = dart.privateName(pdf_provider, "_headers");
  var _documentBytes = dart.privateName(pdf_provider, "_documentBytes");
  var _url = dart.privateName(pdf_provider, "_url");
  pdf_provider.NetworkPdf = class NetworkPdf extends pdf_provider.PdfProvider {
    get [_url]() {
      let t0;
      return dart.test(this[__NetworkPdf__url_isSet]) ? (t0 = this[__NetworkPdf__url], t0) : dart.throw(new _internal.LateError.fieldNI("_url"));
    }
    set [_url](t0) {
      if (t0 == null) dart.nullFailed(I[1], 39, 15, "null");
      this[__NetworkPdf__url_isSet] = true;
      this[__NetworkPdf__url] = t0;
    }
    getPdfBytes(context) {
      if (context == null) dart.nullFailed(I[1], 48, 46, "context");
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            this[_documentBytes] = (yield http.readBytes(core.Uri.parse(this[_url]), {headers: this[_headers]}));
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(dart.toString(e));
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.NetworkPdf.new = function(url, headers) {
    if (url == null) dart.nullFailed(I[1], 32, 21, "url");
    this[__NetworkPdf__url] = null;
    this[__NetworkPdf__url_isSet] = false;
    this[_headers] = null;
    this[_documentBytes] = null;
    if (!url[$isNotEmpty]) dart.assertFailed(null, I[1], 33, 16, "url.isNotEmpty");
    pdf_provider.NetworkPdf.__proto__.new.call(this);
    this[_url] = url;
    this[_headers] = headers;
  }).prototype = pdf_provider.NetworkPdf.prototype;
  dart.addTypeTests(pdf_provider.NetworkPdf);
  dart.addTypeCaches(pdf_provider.NetworkPdf);
  dart.setMethodSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.NetworkPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.NetworkPdf.__proto__),
    [_url]: core.String
  }));
  dart.setSetterSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.NetworkPdf.__proto__),
    [_url]: core.String
  }));
  dart.setLibraryUri(pdf_provider.NetworkPdf, I[0]);
  dart.setFieldSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getFields(pdf_provider.NetworkPdf.__proto__),
    [__NetworkPdf__url]: dart.fieldType(dart.nullable(core.String)),
    [__NetworkPdf__url_isSet]: dart.fieldType(core.bool),
    [_headers]: dart.fieldType(dart.nullable(core.Map$(core.String, core.String))),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var __MemoryPdf__pdfBytes = dart.privateName(pdf_provider, "_#MemoryPdf#_pdfBytes");
  var __MemoryPdf__pdfBytes_isSet = dart.privateName(pdf_provider, "_#MemoryPdf#_pdfBytes#isSet");
  var _pdfBytes = dart.privateName(pdf_provider, "_pdfBytes");
  pdf_provider.MemoryPdf = class MemoryPdf extends pdf_provider.PdfProvider {
    get [_pdfBytes]() {
      let t2;
      return dart.test(this[__MemoryPdf__pdfBytes_isSet]) ? (t2 = this[__MemoryPdf__pdfBytes], t2) : dart.throw(new _internal.LateError.fieldNI("_pdfBytes"));
    }
    set [_pdfBytes](t2) {
      if (t2 == null) dart.nullFailed(I[1], 77, 18, "null");
      this[__MemoryPdf__pdfBytes_isSet] = true;
      this[__MemoryPdf__pdfBytes] = t2;
    }
    getPdfBytes(context) {
      if (context == null) dart.nullFailed(I[1], 80, 46, "context");
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        return T.FutureOfUint8List().value(this[_pdfBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.MemoryPdf.new = function(bytes) {
    if (bytes == null) dart.nullFailed(I[1], 73, 23, "bytes");
    this[__MemoryPdf__pdfBytes] = null;
    this[__MemoryPdf__pdfBytes_isSet] = false;
    pdf_provider.MemoryPdf.__proto__.new.call(this);
    this[_pdfBytes] = bytes;
  }).prototype = pdf_provider.MemoryPdf.prototype;
  dart.addTypeTests(pdf_provider.MemoryPdf);
  dart.addTypeCaches(pdf_provider.MemoryPdf);
  dart.setMethodSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.MemoryPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.MemoryPdf.__proto__),
    [_pdfBytes]: typed_data.Uint8List
  }));
  dart.setSetterSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.MemoryPdf.__proto__),
    [_pdfBytes]: typed_data.Uint8List
  }));
  dart.setLibraryUri(pdf_provider.MemoryPdf, I[0]);
  dart.setFieldSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getFields(pdf_provider.MemoryPdf.__proto__),
    [__MemoryPdf__pdfBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List)),
    [__MemoryPdf__pdfBytes_isSet]: dart.fieldType(core.bool)
  }));
  var __AssetPdf__pdfPath = dart.privateName(pdf_provider, "_#AssetPdf#_pdfPath");
  var __AssetPdf__pdfPath_isSet = dart.privateName(pdf_provider, "_#AssetPdf#_pdfPath#isSet");
  var _bundle = dart.privateName(pdf_provider, "_bundle");
  var _pdfPath = dart.privateName(pdf_provider, "_pdfPath");
  pdf_provider.AssetPdf = class AssetPdf extends pdf_provider.PdfProvider {
    get [_pdfPath]() {
      let t3;
      return dart.test(this[__AssetPdf__pdfPath_isSet]) ? (t3 = this[__AssetPdf__pdfPath], t3) : dart.throw(new _internal.LateError.fieldNI("_pdfPath"));
    }
    set [_pdfPath](t3) {
      if (t3 == null) dart.nullFailed(I[1], 103, 15, "null");
      this[__AssetPdf__pdfPath_isSet] = true;
      this[__AssetPdf__pdfPath] = t3;
    }
    getPdfBytes(context) {
      if (context == null) dart.nullFailed(I[1], 108, 46, "context");
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            let bytes = (yield this[_bundle] != null ? dart.nullCheck(this[_bundle]).load(this[_pdfPath]) : basic.DefaultAssetBundle.of(context).load(this[_pdfPath]));
            this[_documentBytes] = bytes[$buffer][$asUint8List]();
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(dart.toString(e));
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.AssetPdf.new = function(assetName, bundle) {
    if (assetName == null) dart.nullFailed(I[1], 97, 19, "assetName");
    this[__AssetPdf__pdfPath] = null;
    this[__AssetPdf__pdfPath_isSet] = false;
    this[_bundle] = null;
    this[_documentBytes] = null;
    if (!assetName[$isNotEmpty]) dart.assertFailed(null, I[1], 98, 16, "assetName.isNotEmpty");
    pdf_provider.AssetPdf.__proto__.new.call(this);
    this[_pdfPath] = assetName;
    this[_bundle] = bundle;
  }).prototype = pdf_provider.AssetPdf.prototype;
  dart.addTypeTests(pdf_provider.AssetPdf);
  dart.addTypeCaches(pdf_provider.AssetPdf);
  dart.setMethodSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.AssetPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.AssetPdf.__proto__),
    [_pdfPath]: core.String
  }));
  dart.setSetterSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.AssetPdf.__proto__),
    [_pdfPath]: core.String
  }));
  dart.setLibraryUri(pdf_provider.AssetPdf, I[0]);
  dart.setFieldSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getFields(pdf_provider.AssetPdf.__proto__),
    [__AssetPdf__pdfPath]: dart.fieldType(dart.nullable(core.String)),
    [__AssetPdf__pdfPath_isSet]: dart.fieldType(core.bool),
    [_bundle]: dart.fieldType(dart.nullable(asset_bundle.AssetBundle)),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var __FilePdf__file = dart.privateName(pdf_provider, "_#FilePdf#_file");
  var __FilePdf__file_isSet = dart.privateName(pdf_provider, "_#FilePdf#_file#isSet");
  var _file = dart.privateName(pdf_provider, "_file");
  pdf_provider.FilePdf = class FilePdf extends pdf_provider.PdfProvider {
    get [_file]() {
      let t5;
      return dart.test(this[__FilePdf__file_isSet]) ? (t5 = this[__FilePdf__file], t5) : dart.throw(new _internal.LateError.fieldNI("_file"));
    }
    set [_file](t5) {
      if (t5 == null) dart.nullFailed(I[1], 136, 13, "null");
      this[__FilePdf__file_isSet] = true;
      this[__FilePdf__file] = t5;
    }
    getPdfBytes(context) {
      if (context == null) dart.nullFailed(I[1], 142, 46, "context");
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            this[_documentBytes] = (yield this[_file].readAsBytes());
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(dart.toString(e));
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.FilePdf.new = function(file) {
    if (file == null) dart.nullFailed(I[1], 132, 16, "file");
    this[__FilePdf__file] = null;
    this[__FilePdf__file_isSet] = false;
    this[_documentBytes] = null;
    pdf_provider.FilePdf.__proto__.new.call(this);
    this[_file] = file;
  }).prototype = pdf_provider.FilePdf.prototype;
  dart.addTypeTests(pdf_provider.FilePdf);
  dart.addTypeCaches(pdf_provider.FilePdf);
  dart.setMethodSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getMethods(pdf_provider.FilePdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getGetters(pdf_provider.FilePdf.__proto__),
    [_file]: io.File
  }));
  dart.setSetterSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getSetters(pdf_provider.FilePdf.__proto__),
    [_file]: io.File
  }));
  dart.setLibraryUri(pdf_provider.FilePdf, I[0]);
  dart.setFieldSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getFields(pdf_provider.FilePdf.__proto__),
    [__FilePdf__file]: dart.fieldType(dart.nullable(io.File)),
    [__FilePdf__file_isSet]: dart.fieldType(core.bool),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var controller$ = dart.privateName(bookmark_view, "BookmarkView.controller");
  var pdfDocument$ = dart.privateName(bookmark_view, "BookmarkView.pdfDocument");
  var _bookmarkView$ = dart.privateName(bookmark_view, "BookmarkView._bookmarkView");
  var _bookmarkView = dart.privateName(bookmark_view, "_bookmarkView");
  bookmark_view.BookmarkView = class BookmarkView extends framework.StatefulWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get pdfDocument() {
      return this[pdfDocument$];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    get [_bookmarkView]() {
      return this[_bookmarkView$];
    }
    set [_bookmarkView](value) {
      super[_bookmarkView] = value;
    }
    createState() {
      return new bookmark_view.BookmarkViewControllerState.new();
    }
  };
  (bookmark_view.BookmarkView.new = function(key, pdfDocument, controller, _bookmarkView, opts) {
    if (key == null) dart.nullFailed(I[2], 30, 11, "key");
    if (controller == null) dart.nullFailed(I[2], 30, 39, "controller");
    if (_bookmarkView == null) dart.nullFailed(I[2], 30, 56, "_bookmarkView");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pdfDocument$] = pdfDocument;
    this[controller$] = controller;
    this[_bookmarkView$] = _bookmarkView;
    bookmark_view.BookmarkView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bookmark_view.BookmarkView.prototype;
  dart.addTypeTests(bookmark_view.BookmarkView);
  dart.addTypeCaches(bookmark_view.BookmarkView);
  dart.setMethodSignature(bookmark_view.BookmarkView, () => ({
    __proto__: dart.getMethods(bookmark_view.BookmarkView.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(bookmark_view.BookmarkView, I[3]);
  dart.setFieldSignature(bookmark_view.BookmarkView, () => ({
    __proto__: dart.getFields(bookmark_view.BookmarkView.__proto__),
    controller: dart.finalFieldType(pdfviewer.PdfViewerController),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument)),
    [_bookmarkView]: dart.finalFieldType(dart.fnType(dart.void, [core.bool]))
  }));
  var showBookmark = dart.privateName(bookmark_view, "BookmarkViewControllerState.showBookmark");
  var _bookmarkList = dart.privateName(bookmark_view, "_bookmarkList");
  var _bookmarkBase = dart.privateName(bookmark_view, "_bookmarkBase");
  var _parentBookmark = dart.privateName(bookmark_view, "_parentBookmark");
  var _childBookmark = dart.privateName(bookmark_view, "_childBookmark");
  var _isExpanded = dart.privateName(bookmark_view, "_isExpanded");
  var _totalWidth = dart.privateName(bookmark_view, "_totalWidth");
  var _isTablet = dart.privateName(bookmark_view, "_isTablet");
  var _listCount = dart.privateName(bookmark_view, "_listCount");
  var _historyEntry = dart.privateName(bookmark_view, "_historyEntry");
  var _pdfViewerThemeData = dart.privateName(bookmark_view, "_pdfViewerThemeData");
  var _localizations = dart.privateName(bookmark_view, "_localizations");
  var _handleHistoryEntryRemoved = dart.privateName(bookmark_view, "_handleHistoryEntryRemoved");
  var _ensureHistoryEntry = dart.privateName(bookmark_view, "_ensureHistoryEntry");
  var _handleClose = dart.privateName(bookmark_view, "_handleClose");
  var _populateBookmarkList = dart.privateName(bookmark_view, "_populateBookmarkList");
  var _findDevice = dart.privateName(bookmark_view, "_findDevice");
  var _handleBackPress = dart.privateName(bookmark_view, "_handleBackPress");
  var _handleExpandPress = dart.privateName(bookmark_view, "_handleExpandPress");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  bookmark_view.BookmarkViewControllerState = class BookmarkViewControllerState extends framework.State$(bookmark_view.BookmarkView) {
    get showBookmark() {
      return this[showBookmark];
    }
    set showBookmark(value) {
      this[showBookmark] = value;
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      dart.nullCheck(this[_bookmarkList])[$clear]();
      this[_bookmarkList] = null;
      this[_pdfViewerThemeData] = null;
      this[_localizations] = null;
      super.dispose();
    }
    [_ensureHistoryEntry]() {
      if (this[_historyEntry] == null) {
        let route = routes.ModalRoute.of(T.ObjectN(), this.context);
        if (route != null) {
          this[_historyEntry] = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, _handleHistoryEntryRemoved)});
          route.addLocalHistoryEntry(dart.nullCheck(this[_historyEntry]));
        }
      }
    }
    [_handleHistoryEntryRemoved]() {
      this[_historyEntry] = null;
      this[_handleClose]();
    }
    open() {
      return async.async(dart.void, (function* open() {
        yield T.FutureOfbool().sync(dart.fn(() => this.widget.controller.clearSelection(), T.VoidTobool()));
        this[_ensureHistoryEntry]();
        if (!dart.test(this.showBookmark) && this.widget.pdfDocument != null) {
          this[_bookmarkBase] = dart.nullCheck(this.widget.pdfDocument).bookmarks;
          this[_bookmarkList] = this[_populateBookmarkList]();
        }
        this.setState(dart.fn(() => {
          let t8, t7;
          this.showBookmark = true;
          t7 = this.widget;
          t8 = true;
          t7[_bookmarkView](t8);
        }, T.VoidTovoid()));
      }).bind(this));
    }
    [_handleClose]() {
      return async.async(dart.void, (function* _handleClose() {
        if (dart.test(this.showBookmark)) {
          this.setState(dart.fn(() => {
            let t8, t7;
            this[_isExpanded] = false;
            this.showBookmark = false;
            t7 = this.widget;
            t8 = false;
            t7[_bookmarkView](t8);
          }, T.VoidTovoid()));
          if (this[_historyEntry] != null && dart.test(navigator.Navigator.canPop(this.context))) {
            yield navigator.Navigator.of(this.context).maybePop(T.ObjectN());
          }
        }
      }).bind(this));
    }
    [_findDevice](context) {
      if (context == null) dart.nullFailed(I[2], 127, 33, "context");
      this[_totalWidth] = media_query.MediaQuery.of(context).size.width;
      let size = media_query.MediaQuery.of(context).size;
      let diagonal = math.sqrt(dart.notNull(size.width) * dart.notNull(size.width) + dart.notNull(size.height) * dart.notNull(size.height));
      if (dart.test(pdfviewer_helper.kIsDesktop) && !(diagonal < 1100)) {
        this[_isTablet] = true;
      } else {
        this[_isTablet] = diagonal > 1100;
      }
    }
    [_handleBackPress]() {
      this.setState(dart.fn(() => {
        if (dart.equals(this[_childBookmark], this[_parentBookmark])) {
          this[_isExpanded] = false;
          this[_populateBookmarkList]();
        } else {
          this[_childBookmark] = this[_parentBookmark];
          this[_populateBookmarkList]();
        }
      }, T.VoidTovoid()));
    }
    [_handleExpandPress](index) {
      if (index == null) dart.nullFailed(I[2], 151, 31, "index");
      this.setState(dart.fn(() => {
        this[_parentBookmark] = dart.test(this[_isExpanded]) ? this[_childBookmark] : dart.nullCheck(this[_bookmarkBase])._get(index);
        this[_childBookmark] = dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark])._get(index) : dart.nullCheck(this[_bookmarkBase])._get(index);
        this[_isExpanded] = true;
        this[_populateBookmarkList]();
      }, T.VoidTovoid()));
    }
    [_populateBookmarkList]() {
      let t7, t7$, t7$0, t7$1;
      t7 = this[_bookmarkList];
      t7 == null ? null : t7[$clear]();
      if (dart.test(this[_isExpanded])) {
        t7$ = this[_bookmarkList];
        t7$ == null ? null : t7$[$add](new bookmark_item.BookmarkItem.new({title: dart.nullCheck(this[_childBookmark]).title, isBackIconVisible: true, textPosition: 55, onBackPressed: dart.bind(this, _handleBackPress), isMobileWebView: !dart.test(this[_isTablet]), onNavigate: dart.fn(() => {
            this.widget.controller.jumpToBookmark(dart.nullCheck(this[_childBookmark]));
            this[_handleClose]();
          }, T.VoidTovoid()), isBorderEnabled: true, onExpandPressed: dart.fn(() => {
          }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}));
      }
      let bookmarkListCount = dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark]).count : dart.nullCheck(this[_bookmarkBase]).count;
      for (let i = 0; i < dart.notNull(bookmarkListCount); i = i + 1) {
        let bookmarkItem = new bookmark_item.BookmarkItem.new({title: dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark])._get(i).title : dart.nullCheck(this[_bookmarkBase])._get(i).title, isMobileWebView: !dart.test(this[_isTablet]), isExpandIconVisible: dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark])._get(i).count !== 0 : dart.nullCheck(this[_bookmarkBase])._get(i).count !== 0, onNavigate: dart.fn(() => {
            let bookmark = dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark])._get(i) : dart.nullCheck(this[_bookmarkBase])._get(i);
            this.widget.controller.jumpToBookmark(bookmark);
            this[_handleClose]();
          }, T.VoidTovoid()), onExpandPressed: dart.fn(() => {
            this[_handleExpandPress](i);
          }, T.VoidTovoid()), onBackPressed: dart.fn(() => {
          }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
        t7$0 = this[_bookmarkList];
        t7$0 == null ? null : t7$0[$add](bookmarkItem);
      }
      this[_listCount] = dart.test(this[_isExpanded]) ? dart.notNull(bookmarkListCount) + 1 : (t7$1 = this[_bookmarkBase], t7$1 == null ? null : t7$1.count);
      return dart.nullCheck(this[_bookmarkList]);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 205, 29, "context");
      this[_findDevice](context);
      let hasBookmark = null;
      if (this.widget.pdfDocument != null && dart.notNull(dart.nullCheck(this.widget.pdfDocument).bookmarks.count) > 0) {
        hasBookmark = true;
      } else {
        hasBookmark = false;
      }
      return new visibility.Visibility.new({visible: this.showBookmark, child: new basic.Stack.new({children: T.JSArrayOfWidget().of([new visibility.Visibility.new({visible: this[_isTablet], child: new gesture_detector.GestureDetector.new({onTap: dart.bind(this, _handleClose), child: new container.Container.new({color: colors.Colors.black.withOpacity(0.3), $creationLocationd_0dea112b090073317d4: C[18] || CT.C18}), $creationLocationd_0dea112b090073317d4: C[21] || CT.C21}), $creationLocationd_0dea112b090073317d4: C[25] || CT.C25}), new basic.Align.new({alignment: dart.test(this[_isTablet]) ? alignment$.Alignment.topRight : alignment$.Alignment.center, child: new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData]).bookmarkViewStyle.backgroundColor, width: dart.test(this[_isTablet]) ? 400 : this[_totalWidth], child: new basic.Column.new({children: T.JSArrayOfWidget().of([new bookmark_toolbar.BookmarkToolbar.new(dart.bind(this, _handleClose), {$creationLocationd_0dea112b090073317d4: C[29] || CT.C29}), new basic.Expanded.new({child: dart.test(hasBookmark) ? new scroll_view.ListView.builder({itemCount: this[_listCount], itemBuilder: dart.fn((context, index) => {
                          if (context == null) dart.nullFailed(I[2], 236, 52, "context");
                          if (index == null) dart.nullFailed(I[2], 236, 65, "index");
                          return dart.nullCheck(this[_bookmarkList])[$_get](index);
                        }, T.BuildContextAndintToBookmarkItem()), $creationLocationd_0dea112b090073317d4: C[32] || CT.C32}) : new basic.Center.new({child: new text.Text.new(dart.nullCheck(this[_localizations]).pdfNoBookmarksLabel, {style: dart.nullCheck(this[_pdfViewerThemeData]).bookmarkViewStyle.titleTextStyle, $creationLocationd_0dea112b090073317d4: C[36] || CT.C36}), $creationLocationd_0dea112b090073317d4: C[40] || CT.C40}), $creationLocationd_0dea112b090073317d4: C[43] || CT.C43})]), $creationLocationd_0dea112b090073317d4: C[46] || CT.C46}), $creationLocationd_0dea112b090073317d4: C[49] || CT.C49}), $creationLocationd_0dea112b090073317d4: C[54] || CT.C54})]), $creationLocationd_0dea112b090073317d4: C[58] || CT.C58}), $creationLocationd_0dea112b090073317d4: C[61] || CT.C61});
    }
  };
  (bookmark_view.BookmarkViewControllerState.new = function() {
    this[_bookmarkList] = T.JSArrayOfBookmarkItem().of([]);
    this[_bookmarkBase] = null;
    this[_parentBookmark] = null;
    this[_childBookmark] = null;
    this[_isExpanded] = false;
    this[_totalWidth] = null;
    this[_isTablet] = false;
    this[_listCount] = null;
    this[_historyEntry] = null;
    this[_pdfViewerThemeData] = null;
    this[_localizations] = null;
    this[showBookmark] = false;
    bookmark_view.BookmarkViewControllerState.__proto__.new.call(this);
    ;
  }).prototype = bookmark_view.BookmarkViewControllerState.prototype;
  dart.addTypeTests(bookmark_view.BookmarkViewControllerState);
  dart.addTypeCaches(bookmark_view.BookmarkViewControllerState);
  dart.setMethodSignature(bookmark_view.BookmarkViewControllerState, () => ({
    __proto__: dart.getMethods(bookmark_view.BookmarkViewControllerState.__proto__),
    [_ensureHistoryEntry]: dart.fnType(dart.void, []),
    [_handleHistoryEntryRemoved]: dart.fnType(dart.void, []),
    open: dart.fnType(dart.void, []),
    [_handleClose]: dart.fnType(async.Future$(dart.void), []),
    [_findDevice]: dart.fnType(dart.void, [framework.BuildContext]),
    [_handleBackPress]: dart.fnType(dart.void, []),
    [_handleExpandPress]: dart.fnType(dart.void, [core.int]),
    [_populateBookmarkList]: dart.fnType(core.List$(bookmark_item.BookmarkItem), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bookmark_view.BookmarkViewControllerState, I[3]);
  dart.setFieldSignature(bookmark_view.BookmarkViewControllerState, () => ({
    __proto__: dart.getFields(bookmark_view.BookmarkViewControllerState.__proto__),
    [_bookmarkList]: dart.fieldType(dart.nullable(core.List$(bookmark_item.BookmarkItem))),
    [_bookmarkBase]: dart.fieldType(dart.nullable(pdf.PdfBookmarkBase)),
    [_parentBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_childBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_isExpanded]: dart.fieldType(core.bool),
    [_totalWidth]: dart.fieldType(dart.nullable(core.double)),
    [_isTablet]: dart.fieldType(core.bool),
    [_listCount]: dart.fieldType(dart.nullable(core.int)),
    [_historyEntry]: dart.fieldType(dart.nullable(routes.LocalHistoryEntry)),
    [_pdfViewerThemeData]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations)),
    showBookmark: dart.fieldType(core.bool)
  }));
  dart.defineLazy(bookmark_view, {
    /*bookmark_view._kPdfTabletBookmarkWidth*/get _kPdfTabletBookmarkWidth() {
      return 400;
    },
    /*bookmark_view._kPdfStandardDiagonalOffset*/get _kPdfStandardDiagonalOffset() {
      return 1100;
    },
    /*bookmark_view._kPdfSubBookmarkTitlePosition*/get _kPdfSubBookmarkTitlePosition() {
      return 55;
    }
  }, false);
  var pdfViewerController$ = dart.privateName(single_page_view, "SinglePageView.pdfViewerController");
  var pageController$ = dart.privateName(single_page_view, "SinglePageView.pageController");
  var children$ = dart.privateName(single_page_view, "SinglePageView.children");
  var onPageChanged$ = dart.privateName(single_page_view, "SinglePageView.onPageChanged");
  var interactionUpdate$ = dart.privateName(single_page_view, "SinglePageView.interactionUpdate");
  var onZoomLevelChanged$ = dart.privateName(single_page_view, "SinglePageView.onZoomLevelChanged");
  var onDoubleTap$ = dart.privateName(single_page_view, "SinglePageView.onDoubleTap");
  var viewportDimension$ = dart.privateName(single_page_view, "SinglePageView.viewportDimension");
  var canShowPaginationDialog$ = dart.privateName(single_page_view, "SinglePageView.canShowPaginationDialog");
  var canShowScrollHead$ = dart.privateName(single_page_view, "SinglePageView.canShowScrollHead");
  var canShowScrollStatus$ = dart.privateName(single_page_view, "SinglePageView.canShowScrollStatus");
  var isMobileWebView$ = dart.privateName(single_page_view, "SinglePageView.isMobileWebView");
  var enableDoubleTapZooming$ = dart.privateName(single_page_view, "SinglePageView.enableDoubleTapZooming");
  var interactionMode$ = dart.privateName(single_page_view, "SinglePageView.interactionMode");
  var pdfPages$ = dart.privateName(single_page_view, "SinglePageView.pdfPages");
  var scaleEnabled$ = dart.privateName(single_page_view, "SinglePageView.scaleEnabled");
  var onPdfOffsetChanged$ = dart.privateName(single_page_view, "SinglePageView.onPdfOffsetChanged");
  var isBookmarkViewOpen$ = dart.privateName(single_page_view, "SinglePageView.isBookmarkViewOpen");
  single_page_view.SinglePageView = class SinglePageView extends framework.StatefulWidget {
    get pdfViewerController() {
      return this[pdfViewerController$];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get pageController() {
      return this[pageController$];
    }
    set pageController(value) {
      super.pageController = value;
    }
    get children() {
      return this[children$];
    }
    set children(value) {
      super.children = value;
    }
    get onPageChanged() {
      return this[onPageChanged$];
    }
    set onPageChanged(value) {
      super.onPageChanged = value;
    }
    get interactionUpdate() {
      return this[interactionUpdate$];
    }
    set interactionUpdate(value) {
      super.interactionUpdate = value;
    }
    get onZoomLevelChanged() {
      return this[onZoomLevelChanged$];
    }
    set onZoomLevelChanged(value) {
      super.onZoomLevelChanged = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get viewportDimension() {
      return this[viewportDimension$];
    }
    set viewportDimension(value) {
      super.viewportDimension = value;
    }
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get canShowScrollStatus() {
      return this[canShowScrollStatus$];
    }
    set canShowScrollStatus(value) {
      super.canShowScrollStatus = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get interactionMode() {
      return this[interactionMode$];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get pdfPages() {
      return this[pdfPages$];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get scaleEnabled() {
      return this[scaleEnabled$];
    }
    set scaleEnabled(value) {
      super.scaleEnabled = value;
    }
    get onPdfOffsetChanged() {
      return this[onPdfOffsetChanged$];
    }
    set onPdfOffsetChanged(value) {
      super.onPdfOffsetChanged = value;
    }
    get isBookmarkViewOpen() {
      return this[isBookmarkViewOpen$];
    }
    set isBookmarkViewOpen(value) {
      super.isBookmarkViewOpen = value;
    }
    createState() {
      return new single_page_view.SinglePageViewState.new();
    }
  };
  (single_page_view.SinglePageView.new = function(key, pdfViewerController, pageController, onPageChanged, interactionUpdate, viewportDimension, canShowPaginationDialog, canShowScrollHead, canShowScrollStatus, pdfPages, isMobileWebView, enableDoubleTapZooming, interactionMode, scaleEnabled, onZoomLevelChanged, onDoubleTap, onPdfOffsetChanged, isBookmarkViewOpen, children, opts) {
    if (key == null) dart.nullFailed(I[4], 27, 11, "key");
    if (pdfViewerController == null) dart.nullFailed(I[4], 28, 12, "pdfViewerController");
    if (pageController == null) dart.nullFailed(I[4], 29, 12, "pageController");
    if (onPageChanged == null) dart.nullFailed(I[4], 30, 12, "onPageChanged");
    if (interactionUpdate == null) dart.nullFailed(I[4], 31, 12, "interactionUpdate");
    if (viewportDimension == null) dart.nullFailed(I[4], 32, 12, "viewportDimension");
    if (canShowPaginationDialog == null) dart.nullFailed(I[4], 33, 12, "canShowPaginationDialog");
    if (canShowScrollHead == null) dart.nullFailed(I[4], 34, 12, "canShowScrollHead");
    if (canShowScrollStatus == null) dart.nullFailed(I[4], 35, 12, "canShowScrollStatus");
    if (pdfPages == null) dart.nullFailed(I[4], 36, 12, "pdfPages");
    if (isMobileWebView == null) dart.nullFailed(I[4], 37, 12, "isMobileWebView");
    if (enableDoubleTapZooming == null) dart.nullFailed(I[4], 38, 12, "enableDoubleTapZooming");
    if (interactionMode == null) dart.nullFailed(I[4], 39, 12, "interactionMode");
    if (scaleEnabled == null) dart.nullFailed(I[4], 40, 12, "scaleEnabled");
    if (onZoomLevelChanged == null) dart.nullFailed(I[4], 41, 12, "onZoomLevelChanged");
    if (isBookmarkViewOpen == null) dart.nullFailed(I[4], 44, 12, "isBookmarkViewOpen");
    if (children == null) dart.nullFailed(I[4], 45, 12, "children");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pdfViewerController$] = pdfViewerController;
    this[pageController$] = pageController;
    this[onPageChanged$] = onPageChanged;
    this[interactionUpdate$] = interactionUpdate;
    this[viewportDimension$] = viewportDimension;
    this[canShowPaginationDialog$] = canShowPaginationDialog;
    this[canShowScrollHead$] = canShowScrollHead;
    this[canShowScrollStatus$] = canShowScrollStatus;
    this[pdfPages$] = pdfPages;
    this[isMobileWebView$] = isMobileWebView;
    this[enableDoubleTapZooming$] = enableDoubleTapZooming;
    this[interactionMode$] = interactionMode;
    this[scaleEnabled$] = scaleEnabled;
    this[onZoomLevelChanged$] = onZoomLevelChanged;
    this[onDoubleTap$] = onDoubleTap;
    this[onPdfOffsetChanged$] = onPdfOffsetChanged;
    this[isBookmarkViewOpen$] = isBookmarkViewOpen;
    this[children$] = children;
    single_page_view.SinglePageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = single_page_view.SinglePageView.prototype;
  dart.addTypeTests(single_page_view.SinglePageView);
  dart.addTypeCaches(single_page_view.SinglePageView);
  dart.setMethodSignature(single_page_view.SinglePageView, () => ({
    __proto__: dart.getMethods(single_page_view.SinglePageView.__proto__),
    createState: dart.fnType(single_page_view.SinglePageViewState, [])
  }));
  dart.setLibraryUri(single_page_view.SinglePageView, I[5]);
  dart.setFieldSignature(single_page_view.SinglePageView, () => ({
    __proto__: dart.getFields(single_page_view.SinglePageView.__proto__),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    pageController: dart.finalFieldType(page_view.PageController),
    children: dart.finalFieldType(core.List$(framework.Widget)),
    onPageChanged: dart.finalFieldType(dart.fnType(dart.void, [core.int])),
    interactionUpdate: dart.finalFieldType(dart.fnType(dart.dynamic, [core.double])),
    onZoomLevelChanged: dart.finalFieldType(dart.fnType(dart.dynamic, [core.double])),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    viewportDimension: dart.finalFieldType(ui.Size),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    canShowScrollHead: dart.finalFieldType(core.bool),
    canShowScrollStatus: dart.finalFieldType(core.bool),
    isMobileWebView: dart.finalFieldType(core.bool),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    scaleEnabled: dart.finalFieldType(core.bool),
    onPdfOffsetChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [ui.Offset]))),
    isBookmarkViewOpen: dart.finalFieldType(core.bool)
  }));
  var isJumpOnZoomedDocument = dart.privateName(single_page_view, "SinglePageViewState.isJumpOnZoomedDocument");
  var greyAreaSize = dart.privateName(single_page_view, "SinglePageViewState.greyAreaSize");
  var previousZoomLevel = dart.privateName(single_page_view, "SinglePageViewState.previousZoomLevel");
  var currentZoomLevel = dart.privateName(single_page_view, "SinglePageViewState.currentZoomLevel");
  var currentOffset = dart.privateName(single_page_view, "SinglePageViewState.currentOffset");
  var _pdfViewerThemeData$ = dart.privateName(single_page_view, "_pdfViewerThemeData");
  var _localizations$ = dart.privateName(single_page_view, "_localizations");
  var _isScrollHeadDragged = dart.privateName(single_page_view, "_isScrollHeadDragged");
  var _scrollHeadPosition = dart.privateName(single_page_view, "_scrollHeadPosition");
  var _canScroll = dart.privateName(single_page_view, "_canScroll");
  var _isOverFlowed = dart.privateName(single_page_view, "_isOverFlowed");
  var _setZoomLevel = dart.privateName(single_page_view, "_setZoomLevel");
  var _paddingWidthScale = dart.privateName(single_page_view, "_paddingWidthScale");
  var _paddingHeightScale = dart.privateName(single_page_view, "_paddingHeightScale");
  var _currentOffsetOfInteractionUpdate = dart.privateName(single_page_view, "_currentOffsetOfInteractionUpdate");
  var _transformationController = dart.privateName(single_page_view, "_transformationController");
  var _canPanOnZoom = dart.privateName(single_page_view, "_canPanOnZoom");
  var _textFieldController = dart.privateName(single_page_view, "_textFieldController");
  var _formKey = dart.privateName(single_page_view, "_formKey");
  var _focusNode = dart.privateName(single_page_view, "_focusNode");
  var _oldLayoutSize = dart.privateName(single_page_view, "_oldLayoutSize");
  var _topMargin = dart.privateName(single_page_view, "_topMargin");
  var _leftMargin = dart.privateName(single_page_view, "_leftMargin");
  var _panStartOffset = dart.privateName(single_page_view, "_panStartOffset");
  var _panUpdateOffset = dart.privateName(single_page_view, "_panUpdateOffset");
  var _canJumpPrevious = dart.privateName(single_page_view, "_canJumpPrevious");
  var _canJumpNext = dart.privateName(single_page_view, "_canJumpNext");
  var _isMousePointer = dart.privateName(single_page_view, "_isMousePointer");
  var _oldPreviousZoomLevel = dart.privateName(single_page_view, "_oldPreviousZoomLevel");
  var _getChildSize = dart.privateName(single_page_view, "_getChildSize");
  var _handlePdfOffsetChanged = dart.privateName(single_page_view, "_handlePdfOffsetChanged");
  var _onDoubleTapZoomInvoked = dart.privateName(single_page_view, "_onDoubleTapZoomInvoked");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var ScrollPhysics_parent = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  var _handleDragStart = dart.privateName(single_page_view, "_handleDragStart");
  var _handleDragEnd = dart.privateName(single_page_view, "_handleDragEnd");
  var _handleDragUpdate = dart.privateName(single_page_view, "_handleDragUpdate");
  var _showPaginationDialog = dart.privateName(single_page_view, "_showPaginationDialog");
  var _setPixel = dart.privateName(single_page_view, "_setPixel");
  var _clearSelection = dart.privateName(single_page_view, "_clearSelection");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var _name = dart.privateName(borders, "_name");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var Color_value = dart.privateName(ui, "Color.value");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var OutlinedBorder_side = dart.privateName(borders, "OutlinedBorder.side");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var RoundedRectangleBorder_borderRadius = dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius");
  var _paginationTextField = dart.privateName(single_page_view, "_paginationTextField");
  var _handlePageNumberValidation = dart.privateName(single_page_view, "_handlePageNumberValidation");
  single_page_view.SinglePageViewState = class SinglePageViewState extends framework.State$(single_page_view.SinglePageView) {
    get isJumpOnZoomedDocument() {
      return this[isJumpOnZoomedDocument];
    }
    set isJumpOnZoomedDocument(value) {
      this[isJumpOnZoomedDocument] = value;
    }
    get greyAreaSize() {
      return this[greyAreaSize];
    }
    set greyAreaSize(value) {
      this[greyAreaSize] = value;
    }
    get previousZoomLevel() {
      return this[previousZoomLevel];
    }
    set previousZoomLevel(value) {
      this[previousZoomLevel] = value;
    }
    get currentZoomLevel() {
      return this[currentZoomLevel];
    }
    set currentZoomLevel(value) {
      this[currentZoomLevel] = value;
    }
    get currentOffset() {
      return this[currentOffset];
    }
    set currentOffset(value) {
      this[currentOffset] = value;
    }
    initState() {
      super.initState();
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations$] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$] = null;
      this[_localizations$] = null;
      this[_focusNode].dispose();
      super.dispose();
    }
    [_getChildSize](viewportDimension) {
      if (viewportDimension == null) dart.nullFailed(I[4], 171, 27, "viewportDimension");
      let widthFactor = 1.0;
      let heightFactor = 1.0;
      widthFactor = this[_paddingWidthScale] === 0 ? this.widget.pdfViewerController.zoomLevel : this[_paddingWidthScale];
      heightFactor = this[_paddingHeightScale] === 0 ? this.widget.pdfViewerController.zoomLevel : this[_paddingHeightScale];
      let zoomLevel = this[_transformationController].value.getMaxScaleOnAxis();
      let imageWidth = dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width) * dart.notNull(zoomLevel);
      let childWidth = dart.notNull(viewportDimension.width) > imageWidth ? dart.notNull(viewportDimension.width) / widthFactor[$clamp](1, 3) : imageWidth / widthFactor[$clamp](1, 3);
      let imageHeight = dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height) * dart.notNull(zoomLevel);
      let childHeight = dart.notNull(viewportDimension.height) > imageHeight ? dart.notNull(viewportDimension.height) / heightFactor[$clamp](1, 3) : imageHeight / heightFactor[$clamp](1, 3);
      if (dart.notNull(childHeight) > dart.notNull(viewportDimension.height)) {
        childHeight = this.widget.viewportDimension.height;
      }
      return new ui.Size.new(childWidth, childHeight);
    }
    jumpTo(opts) {
      let xOffset = opts && 'xOffset' in opts ? opts.xOffset : null;
      let yOffset = opts && 'yOffset' in opts ? opts.yOffset : null;
      xOffset == null ? xOffset = 0.0 : null;
      yOffset == null ? yOffset = 0.0 : null;
      this[_handlePdfOffsetChanged](new ui.Offset.new(xOffset, yOffset));
    }
    [_handlePdfOffsetChanged](offset) {
      if (offset == null) dart.nullFailed(I[4], 208, 39, "offset");
      let currentOffset = this[_transformationController].toScene(ui.Offset.zero);
      let pdfDimension = dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize;
      if (pdfDimension.height !== 0) {
        if (dart.notNull(this.widget.viewportDimension.width) > dart.notNull(pdfDimension.width) * dart.notNull(this.widget.pdfViewerController.zoomLevel) && (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(this.widget.isMobileWebView))) {
          offset = new ui.Offset.new(currentOffset.dx, offset.dy);
        }
        if (dart.notNull(this.widget.viewportDimension.height) > dart.notNull(pdfDimension.height) * dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
          offset = new ui.Offset.new(offset.dx, 0.0);
        }
        let widthFactor = dart.notNull(pdfDimension.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this.widget.pdfViewerController.zoomLevel);
        if (dart.test(this.isJumpOnZoomedDocument)) {
          let actualMargin = dart.notNull(this.greyAreaSize) / 2;
          let skipY = false;
          let pageHeight = dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height;
          if (dart.notNull(this.widget.pdfViewerController.zoomLevel) > 1 && dart.notNull(pageHeight) * dart.notNull(this.widget.pdfViewerController.zoomLevel) < dart.notNull(this.widget.viewportDimension.height)) {
            skipY = true;
          }
          offset = new ui.Offset.new(offset.dx[$clamp](this[_setZoomLevel] === true ? -widthFactor : 0.0, widthFactor[$abs]()), skipY ? 0.0 : offset.dy[$clamp](actualMargin, (dart.notNull(pdfDimension.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this.widget.pdfViewerController.zoomLevel) + actualMargin)[$abs]()));
        } else {
          offset = new ui.Offset.new(offset.dx[$clamp](this[_setZoomLevel] === true ? -widthFactor : 0.0, widthFactor[$abs]()), offset.dy[$clamp](0.0, (dart.notNull(pdfDimension.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this.widget.pdfViewerController.zoomLevel))[$abs]()));
        }
        this[_setZoomLevel] = false;
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
          if (dart.notNull(this.widget.viewportDimension.width) > dart.notNull(pdfDimension.width) * dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
            offset = new ui.Offset.new(0.0, offset.dy);
          } else {
            offset = new ui.Offset.new(offset.dx, offset.dy);
          }
        }
        if (dart.test(this.isJumpOnZoomedDocument)) {
          if (media_query.MediaQuery.of(this.context).orientation == media_query.Orientation.landscape || dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
            if (dart.notNull(this.widget.viewportDimension.width) > dart.notNull(pdfDimension.width) * dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
              offset = new ui.Offset.new(0.0, offset.dy);
            }
          } else {
            let greyAreaWidthSize = dart.notNull(this.widget.viewportDimension.width) - dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width);
            offset = new ui.Offset.new(greyAreaWidthSize / 2 + dart.notNull(offset.dx), offset.dy);
          }
        }
        let previousOffset = this[_transformationController].toScene(ui.Offset.zero);
        this.setState(dart.fn(() => {
          this[_transformationController].value.translate(dart.notNull(previousOffset.dx) - dart.notNull(offset.dx), dart.notNull(previousOffset.dy) - dart.notNull(offset.dy));
        }, T.VoidTovoid()));
      }
      dart.nullCheck(this.widget.onPdfOffsetChanged)(this[_transformationController].toScene(ui.Offset.zero));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[4], 293, 29, "context");
      let childSize = this[_getChildSize](this.widget.viewportDimension);
      this.currentOffset = this[_transformationController].toScene(ui.Offset.zero);
      let _enableDoubleTapZoom = !dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.enableDoubleTapZooming) || dart.test(pdfviewer_helper.kIsDesktop) && this.widget.interactionMode == enums.PdfInteractionMode.pan || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) && dart.test(this.widget.enableDoubleTapZooming) ? true : false;
      let pages = T.JSArrayOfWidget().of([]);
      for (let pageIndex = 0; pageIndex < dart.notNull(this.widget.children[$length]); pageIndex = pageIndex + 1) {
        let page = this.widget.children[$_get](pageIndex);
        let isLandscape = media_query.MediaQuery.of(context).orientation == media_query.Orientation.landscape;
        let imageSize = dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](pageIndex + 1)).pageSize.height) * dart.notNull(this.widget.pdfViewerController.zoomLevel);
        this[_topMargin] = (dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](pageIndex + 1)).pageSize.height) - dart.notNull(this.widget.viewportDimension.height)) / 2;
        this.greyAreaSize = dart.notNull(this.widget.viewportDimension.height) - dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](pageIndex + 1)).pageSize.height);
        let isHeightFitted = false;
        if (this[_topMargin] === 0) {
          isHeightFitted = true;
          this[_leftMargin] = (dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](pageIndex + 1)).pageSize.width) - dart.notNull(this.widget.viewportDimension.width)) / 2;
          imageSize = dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](pageIndex + 1)).pageSize.width) * core.double.parse(this.widget.pdfViewerController.zoomLevel[$toStringAsFixed](1))[$round]();
        }
        pages[$add](new interactive_scroll_viewer_internal.InteractiveScrollViewer.new(new container.Container.new({height: isLandscape && !dart.test(pdfviewer_helper.kIsDesktop) ? childSize.height : this.widget.viewportDimension.height, width: isLandscape ? childSize.width : this.widget.viewportDimension.width, child: new basic.Center.new({child: page, $creationLocationd_0dea112b090073317d4: C[65] || CT.C65}), $creationLocationd_0dea112b090073317d4: C[68] || CT.C68}), {clipBehavior: ui.Clip.none, boundaryMargin: new edge_insets.EdgeInsets.only({top: isHeightFitted || isLandscape ? 0.0 : imageSize[$round]() <= this.widget.viewportDimension.height[$round]() ? (dart.notNull(childSize.height) - dart.notNull(this.widget.viewportDimension.height)) / 2 : this[_topMargin], bottom: isHeightFitted || isLandscape ? 0.0 : imageSize[$round]() <= this.widget.viewportDimension.height[$round]() ? (dart.notNull(childSize.height) - dart.notNull(this.widget.viewportDimension.height)) / 2 : this[_topMargin], right: isHeightFitted ? imageSize <= dart.notNull(this.widget.viewportDimension.width) ? 0.0 : this[_leftMargin] : 0.0, left: isHeightFitted ? imageSize <= dart.notNull(this.widget.viewportDimension.width) ? 0.0 : this[_leftMargin] : 0.0}), constrained: false, panEnabled: true, onDoubleTapZoomInvoked: dart.bind(this, _onDoubleTapZoomInvoked), scaleEnabled: dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) || !dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.scaleEnabled) ? true : false, enableDoubleTapZooming: _enableDoubleTapZoom, transformationController: this[_transformationController], onInteractionStart: dart.fn(details => {
            if (details == null) dart.nullFailed(I[4], 366, 48, "details");
            this[_panStartOffset] = details.localFocalPoint.dx;
            if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.scaleEnabled)) {
              if (this.previousZoomLevel != this[_oldPreviousZoomLevel]) {
                this[_oldPreviousZoomLevel] = this.previousZoomLevel;
              }
              this.previousZoomLevel = this.widget.pdfViewerController.zoomLevel;
            }
            this[_paddingWidthScale] = 0.0;
            this[_paddingHeightScale] = 0.0;
          }, T.ScaleStartDetailsTovoid()), onInteractionUpdate: dart.fn(details => {
            let t8, t7;
            if (details == null) dart.nullFailed(I[4], 379, 50, "details");
            if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
              this[_panUpdateOffset] = details.localFocalPoint.dx;
              if (this[_panStartOffset] != this[_panUpdateOffset]) {
                if (dart.notNull(this[_panStartOffset]) < dart.notNull(details.localFocalPoint.dx)) {
                  this[_canJumpPrevious] = true;
                } else {
                  this[_canJumpNext] = true;
                }
              }
            }
            this[_currentOffsetOfInteractionUpdate] = this[_transformationController].toScene(ui.Offset.zero);
            if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.scaleEnabled)) {
              t7 = this.widget;
              t8 = this[_transformationController].value.getMaxScaleOnAxis();
              t7.interactionUpdate(t8);
            }
            let currentScale = this[_transformationController].value.getMaxScaleOnAxis();
            if (dart.notNull(details.scale) <= 1) {
              if ((dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView) || dart.notNull(this.widget.viewportDimension.width) > dart.notNull(this.widget.viewportDimension.height)) && this.widget.viewportDimension.width[$round]() >= (dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width) * dart.notNull(currentScale))[$round]()) {
                this.setState(dart.fn(() => {
                  this[_paddingWidthScale] = dart.notNull(details.scale) * dart.notNull(currentScale);
                }, T.VoidTovoid()));
              }
              if (this.widget.viewportDimension.height[$round]() >= (dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height) * dart.notNull(this[_transformationController].value.getMaxScaleOnAxis()))[$round]()) {
                this.setState(dart.fn(() => {
                  this[_paddingHeightScale] = dart.notNull(details.scale) * dart.notNull(currentScale);
                }, T.VoidTovoid()));
              }
            }
            if (details.scale === 1) {
              if (this[_transformationController].toScene(new ui.Offset.new(this.widget.viewportDimension.width, 0.0)).dx[$round]() + this[_leftMargin][$abs]()[$round]() >= dart.notNull(this.widget.viewportDimension.width) || this[_transformationController].toScene(ui.Offset.zero).dx[$round]() <= this[_leftMargin][$abs]()[$round]()) {
                this[_canPanOnZoom] = true;
              } else {
                this[_canScroll] = true;
              }
            } else {
              this[_canScroll] = true;
            }
            dart.nullCheck(this.widget.onPdfOffsetChanged)(this[_transformationController].toScene(ui.Offset.zero));
          }, T.ScaleUpdateDetailsTovoid()), onInteractionEnd: dart.fn(details => {
            let t8, t7;
            if (details == null) dart.nullFailed(I[4], 442, 44, "details");
            if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
              let pannedDistance = (dart.notNull(this[_panStartOffset]) - dart.notNull(this[_panUpdateOffset]))[$abs]();
              if (pannedDistance > 300) {
                if (dart.test(this[_canJumpPrevious]) && this.widget.pdfViewerController.pageNumber !== 1) {
                  this.widget.pageController.animateToPage(dart.notNull(this.widget.pdfViewerController.pageNumber) - 2, {duration: C[73] || CT.C73, curve: curves.Curves.ease});
                } else if (dart.test(this[_canJumpNext]) && this.widget.pdfViewerController.pageNumber != this.widget.pdfViewerController.pageCount) {
                  this.widget.pageController.animateToPage(this.widget.pdfViewerController.pageNumber, {duration: C[73] || CT.C73, curve: curves.Curves.ease});
                }
                this[_canJumpPrevious] = false;
                this[_canJumpNext] = false;
              } else {
                if (dart.test(this[_canJumpPrevious])) {
                  this.widget.pageController.animateTo(dart.notNull(this.widget.pageController.offset) - 10, {duration: C[74] || CT.C74, curve: curves.Curves.ease});
                } else if (dart.test(this[_canJumpNext])) {
                  this.widget.pageController.animateTo(dart.notNull(this.widget.pageController.offset) + 10, {duration: C[74] || CT.C74, curve: curves.Curves.ease});
                }
              }
            }
            if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.scaleEnabled)) {
              t7 = this.widget;
              t8 = this[_transformationController].value.getMaxScaleOnAxis();
              t7.onZoomLevelChanged(t8);
            }
            this.currentOffset = this[_transformationController].toScene(ui.Offset.zero);
            if (dart.test(this[_canScroll])) {
              this[_canPanOnZoom] = false;
              this[_canScroll] = false;
            }
            this[_paddingWidthScale] = 0.0;
            this[_paddingHeightScale] = 0.0;
            if (dart.notNull(this.widget.viewportDimension.width) > dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width) * dart.notNull(this[_transformationController].value.getMaxScaleOnAxis())) {
              this.setState(dart.fn(() => {
                if (!dart.test(this[_isMousePointer])) {
                  this[_transformationController].value.translate(this[_currentOffsetOfInteractionUpdate].dx);
                  this[_isOverFlowed] = false;
                }
              }, T.VoidTovoid()));
            } else {
              if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
                if (this[_isOverFlowed] === false) {
                  this[_transformationController].value.translate(this[_currentOffsetOfInteractionUpdate].dx);
                  this[_isOverFlowed] = true;
                }
              }
            }
            this[_isMousePointer] = false;
            this.setState(dart.fn(() => {
            }, T.VoidTovoid()));
          }, T.ScaleEndDetailsTovoid()), $creationLocationd_0dea112b090073317d4: C[75] || CT.C75}));
      }
      this[_scrollHeadPosition] = this.widget.pdfViewerController.pageNumber === 1 ? 0.0 : dart.notNull(this.widget.pdfViewerController.pageNumber) / dart.notNull(this.widget.pdfViewerController.pageCount) * (dart.notNull(this.widget.viewportDimension.width) - 48);
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
              if (context == null) dart.nullFailed(I[4], 524, 36, "context");
              if (constraints == null) dart.nullFailed(I[4], 524, 60, "constraints");
              if (!dart.equals(this[_oldLayoutSize], constraints.biggest)) {
                let previousOffset = this[_transformationController].toScene(ui.Offset.zero);
                let yPosition = !dart.test(this[_oldLayoutSize].isEmpty) ? dart.notNull(previousOffset.dy) / dart.notNull(this[_oldLayoutSize].height) : 0.0;
                let greyArea = dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height) - dart.notNull(constraints.biggest.height);
                yPosition = yPosition * dart.notNull(constraints.biggest.height);
                if (!greyArea[$isNegative] && greyArea < dart.notNull(constraints.biggest.height) / dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
                  yPosition = yPosition[$clamp](0.0, dart.notNull(constraints.biggest.height) - greyArea);
                }
                let xPosition = !dart.test(this[_oldLayoutSize].isEmpty) ? dart.notNull(previousOffset.dx) / dart.notNull(this[_oldLayoutSize].width) : 0.0;
                xPosition = media_query.MediaQuery.of(context).orientation == media_query.Orientation.landscape ? 0.0 : xPosition * dart.notNull(constraints.biggest.width);
                this[_transformationController].value.translate(dart.notNull(previousOffset.dx) - xPosition, dart.notNull(previousOffset.dy) - yPosition);
                this[_oldLayoutSize] = constraints.biggest;
                this[_canPanOnZoom] = false;
              }
              return new basic.Listener.new({onPointerDown: dart.fn(details => {
                  if (details == null) dart.nullFailed(I[4], 557, 46, "details");
                  if (details.kind == ui.PointerDeviceKind.mouse) {
                    this[_isMousePointer] = true;
                  }
                }, T.PointerDownEventTovoid()), child: new page_view.PageView.new({controller: this.widget.pageController, onPageChanged: dart.fn(value => {
                    let t8, t7;
                    if (value == null) dart.nullFailed(I[4], 564, 35, "value");
                    this[_transformationController] = new interactive_viewer.TransformationController.new();
                    t7 = this.widget;
                    t8 = value;
                    t7.onPageChanged(t8);
                  }, T.intTovoid()), physics: dart.test(this[_canPanOnZoom]) || this[_transformationController].value.getMaxScaleOnAxis() === 1 || dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView) || media_query.MediaQuery.of(context).orientation == media_query.Orientation.landscape && (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView)) ? C[89] || CT.C89 : C[90] || CT.C90, children: pages, $creationLocationd_0dea112b090073317d4: C[91] || CT.C91}), $creationLocationd_0dea112b090073317d4: C[97] || CT.C97});
            }, T.BuildContextAndBoxConstraintsToListener()), $creationLocationd_0dea112b090073317d4: C[101] || CT.C101}), new gesture_detector.GestureDetector.new({onHorizontalDragStart: dart.bind(this, _handleDragStart), onHorizontalDragEnd: dart.bind(this, _handleDragEnd), onHorizontalDragUpdate: dart.bind(this, _handleDragUpdate), onTap: dart.fn(() => {
              if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView)) {
                this[_textFieldController].clear();
                if (!dart.test(focus_scope.FocusScope.of(context).hasPrimaryFocus)) {
                  focus_scope.FocusScope.of(context).unfocus();
                }
                if (dart.test(this.widget.canShowPaginationDialog)) {
                  this[_showPaginationDialog]();
                }
              }
            }, T.VoidTovoid()), child: new visibility.Visibility.new({visible: dart.notNull(this.widget.pdfViewerController.pageCount) > 1 && (dart.test(this.widget.canShowScrollHead) && !dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop)), child: new scroll_head.ScrollHead.new(true, false, new ui.Offset.new(this[_scrollHeadPosition], this.widget.viewportDimension.height), this.widget.pdfViewerController, false, enums.PdfScrollDirection.horizontal, this.widget.isBookmarkViewOpen, enums.PdfPageLayoutMode.single, {$creationLocationd_0dea112b090073317d4: C[104] || CT.C104}), $creationLocationd_0dea112b090073317d4: C[114] || CT.C114}), $creationLocationd_0dea112b090073317d4: C[118] || CT.C118}), new visibility.Visibility.new({visible: dart.test(this[_isScrollHeadDragged]) && dart.test(this.widget.canShowScrollStatus), child: new scroll_status.ScrollStatus.new(this.widget.pdfViewerController, {$creationLocationd_0dea112b090073317d4: C[125] || CT.C125}), $creationLocationd_0dea112b090073317d4: C[128] || CT.C128})]), $creationLocationd_0dea112b090073317d4: C[132] || CT.C132});
    }
    [_onDoubleTapZoomInvoked](offset, tapPosition) {
      if (offset == null) dart.nullFailed(I[4], 618, 41, "offset");
      if (tapPosition == null) dart.nullFailed(I[4], 618, 56, "tapPosition");
      dart.nullCheck(this.widget.onDoubleTap)();
      this.previousZoomLevel = this.widget.pdfViewerController.zoomLevel;
      this[_oldPreviousZoomLevel] = this.previousZoomLevel;
      this.widget.pdfViewerController.zoomLevel = this[_transformationController].value.getMaxScaleOnAxis();
      let pdfPageHeight = dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height;
      let totalPageOffset = dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width;
      if (dart.notNull(this.widget.pdfViewerController.zoomLevel) <= 1) {
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
          offset = ui.Offset.zero;
        } else {
          offset = new ui.Offset.new(0.0, offset.dy);
        }
      }
      if (dart.notNull(this.widget.viewportDimension.height) > dart.notNull(pdfPageHeight)) {
        offset = new ui.Offset.new(offset.dx, dart.notNull(tapPosition.dy) > dart.notNull(this.widget.viewportDimension.height) / 2 ? dart.notNull(offset.dy) + (dart.notNull(this.widget.viewportDimension.height) - dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height)) / 2 : dart.notNull(offset.dy) / 2);
      }
      offset = new ui.Offset.new((dart.notNull(offset.dx) - (dart.notNull(this.widget.viewportDimension.width) - dart.notNull(totalPageOffset)))[$clamp](0.0, (dart.notNull(offset.dx) - (dart.notNull(this.widget.viewportDimension.width) - dart.notNull(totalPageOffset)))[$abs]()), (dart.notNull(this.widget.pdfViewerController.zoomLevel) > 1 ? dart.notNull(offset.dy) + dart.notNull(this.greyAreaSize) / 2 : 0.0)[$clamp](0.0, (dart.notNull(this.widget.viewportDimension.height) - dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height) + dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height)) / 2 - dart.notNull(this.greyAreaSize) / 2));
      this.setState(dart.fn(() => {
        this[_canPanOnZoom] = false;
      }, T.VoidTovoid()));
      return offset;
    }
    [_handleDragStart](details) {
      if (details == null) dart.nullFailed(I[4], 678, 42, "details");
      this[_isScrollHeadDragged] = true;
    }
    [_handleDragUpdate](details) {
      if (details == null) dart.nullFailed(I[4], 682, 44, "details");
      this[_scrollHeadPosition] = details.localPosition.dx;
      let pageNumber = (dart.notNull(this[_scrollHeadPosition]) / (dart.notNull(this.widget.viewportDimension.width) - 48) * dart.notNull(this.widget.pdfViewerController.pageCount))[$round]();
      if (pageNumber > 0 && pageNumber !== this.widget.pdfViewerController.pageNumber) {
        this.widget.pdfViewerController.jumpToPage(pageNumber);
        this.setState(dart.fn(() => {
        }, T.VoidTovoid()));
      }
    }
    [_handleDragEnd](details) {
      if (details == null) dart.nullFailed(I[4], 694, 38, "details");
      this.setState(dart.fn(() => {
        this[_isScrollHeadDragged] = false;
      }, T.VoidTovoid()));
    }
    scaleTo(zoomLevel) {
      if (zoomLevel == null) dart.nullFailed(I[4], 701, 25, "zoomLevel");
      this.currentZoomLevel = this[_transformationController].value.getMaxScaleOnAxis();
      if (this.currentZoomLevel != zoomLevel) {
        this.previousZoomLevel = this.currentZoomLevel;
        this[_oldPreviousZoomLevel] = this.previousZoomLevel;
        this[_setZoomLevel] = true;
        let zoomChangeFactor = dart.notNull(zoomLevel) / dart.notNull(this.currentZoomLevel);
        let previousOffset = this[_transformationController].toScene(ui.Offset.zero);
        this[_transformationController].value.scale(zoomChangeFactor, zoomChangeFactor);
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView) && dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width) * dart.notNull(zoomLevel) < dart.notNull(this.widget.viewportDimension.width)) {
          this[_isOverFlowed] = false;
        }
        let currentOffset = this[_transformationController].toScene(ui.Offset.zero);
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView) || dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width) * dart.notNull(this.currentZoomLevel) < dart.notNull(this.widget.viewportDimension.width)) {
          this.setState(dart.fn(() => {
            this[_transformationController].value.translate(previousOffset.dx, dart.notNull(currentOffset.dy) / dart.notNull(this.widget.pdfViewerController.zoomLevel));
          }, T.VoidTovoid()));
        } else {
          this.greyAreaSize = dart.notNull(this.widget.viewportDimension.height) - dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height);
          let greyAreaOffset = 0.0;
          this.setState(dart.fn(() => {
            this[_canPanOnZoom] = false;
            if (dart.notNull(this.widget.viewportDimension.height) > dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height) * dart.notNull(this.previousZoomLevel)) {
              greyAreaOffset = dart.notNull(this.greyAreaSize) / 2;
            } else {
              greyAreaOffset = 0.0;
            }
            if (dart.notNull(this.widget.viewportDimension.height) > dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height) * dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
              this[_setPixel](new ui.Offset.new(previousOffset.dx, 0.0));
            } else {
              this[_setPixel](new ui.Offset.new(previousOffset.dx, dart.notNull(previousOffset.dy) + greyAreaOffset));
            }
          }, T.VoidTovoid()));
        }
      }
      dart.nullCheck(this.widget.onPdfOffsetChanged)(this[_transformationController].toScene(ui.Offset.zero));
      return zoomLevel;
    }
    jumpOnZoomedDocument(pageNumber, offset) {
      if (pageNumber == null) dart.nullFailed(I[4], 764, 33, "pageNumber");
      if (offset == null) dart.nullFailed(I[4], 764, 52, "offset");
      let currentPreviousZoomLevel = this.widget.pdfViewerController.zoomLevel;
      this.isJumpOnZoomedDocument = true;
      if (pageNumber != this.widget.pdfViewerController.pageNumber) {
        this.widget.pdfViewerController.jumpToPage(pageNumber);
      }
      this.widget.pdfViewerController.zoomLevel = currentPreviousZoomLevel;
      this.previousZoomLevel = this[_oldPreviousZoomLevel];
      if (dart.notNull(this.widget.pdfViewerController.zoomLevel) > 1) {
        if (dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width) * dart.notNull(this.widget.pdfViewerController.zoomLevel) < dart.notNull(this.widget.viewportDimension.width)) {
          this.isJumpOnZoomedDocument = true;
          this[_handlePdfOffsetChanged](new ui.Offset.new(0.0, offset.dy));
        } else {
          if ((!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView)) && dart.notNull(this.widget.viewportDimension.height) > dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height) * dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
            let pdfDimension = dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize;
            let widthFactor = dart.notNull(pdfDimension.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this.widget.pdfViewerController.zoomLevel);
            let previousOffset = this[_transformationController].toScene(ui.Offset.zero);
            this[_transformationController].value.translate(dart.notNull(previousOffset.dx) - offset.dx[$clamp](0, widthFactor[$abs]()), -(dart.notNull(this.widget.viewportDimension.height) - dart.notNull(this[_getChildSize](this.widget.viewportDimension).height)) / 2);
          } else {
            if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView)) {
              this.isJumpOnZoomedDocument = true;
            }
            this[_handlePdfOffsetChanged](new ui.Offset.new(offset.dx, offset.dy));
          }
        }
        this.isJumpOnZoomedDocument = false;
      }
      this.setState(dart.fn(() => {
      }, T.VoidTovoid()));
    }
    [_setPixel](offset) {
      if (offset == null) dart.nullFailed(I[4], 810, 25, "offset");
      let widthFactor = dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this.widget.pdfViewerController.zoomLevel);
      offset = new ui.Offset.new(offset.dx[$clamp](-widthFactor, widthFactor[$abs]()), offset.dy[$clamp](0.0, (dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this.widget.pdfViewerController.zoomLevel))[$abs]()));
      let previousOffset = this[_transformationController].toScene(ui.Offset.zero);
      this[_transformationController].value.translate(dart.notNull(previousOffset.dx) - dart.notNull(offset.dx), dart.notNull(previousOffset.dy) - dart.notNull(offset.dy));
      dart.nullCheck(this.widget.onPdfOffsetChanged)(this[_transformationController].toScene(ui.Offset.zero));
    }
    [_clearSelection]() {
      return async.async(core.bool, (function* _clearSelection() {
        return this.widget.pdfViewerController.clearSelection();
      }).bind(this));
    }
    [_showPaginationDialog]() {
      return async.async(dart.void, (function* _showPaginationDialog() {
        yield this[_clearSelection]();
        return dialog.showDialog(dart.void, {context: this.context, barrierDismissible: true, builder: dart.fn(context => {
            if (context == null) dart.nullFailed(I[4], 843, 32, "context");
            let orientation = media_query.MediaQuery.of(context).orientation;
            return new dialog.AlertDialog.new({scrollable: true, insetPadding: C[135] || CT.C135, contentPadding: orientation == media_query.Orientation.portrait ? C[136] || CT.C136 : C[137] || CT.C137, buttonPadding: orientation == media_query.Orientation.portrait ? C[138] || CT.C138 : C[139] || CT.C139, backgroundColor: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.backgroundColor, title: new text.Text.new(dart.nullCheck(this[_localizations$]).pdfGoToPageLabel, {style: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.headerTextStyle, $creationLocationd_0dea112b090073317d4: C[140] || CT.C140}), shape: C[144] || CT.C144, content: new single_child_scroll_view.SingleChildScrollView.new({child: this[_paginationTextField](), $creationLocationd_0dea112b090073317d4: C[150] || CT.C150}), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                    this[_textFieldController].clear();
                    navigator.Navigator.of(context).pop(T.ObjectN());
                  }, T.VoidTovoid()), child: new text.Text.new(dart.nullCheck(this[_localizations$]).pdfPaginationDialogCancelLabel, {style: dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.cancelTextStyle).color == null ? dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.cancelTextStyle).copyWith({color: theme$.Theme.of(context).primaryColor}) : dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.cancelTextStyle, $creationLocationd_0dea112b090073317d4: C[153] || CT.C153}), $creationLocationd_0dea112b090073317d4: C[157] || CT.C157}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                    this[_handlePageNumberValidation]();
                  }, T.VoidTovoid()), child: new text.Text.new(dart.nullCheck(this[_localizations$]).pdfPaginationDialogOkLabel, {style: dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.okTextStyle).color == null ? dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.okTextStyle).copyWith({color: theme$.Theme.of(context).primaryColor}) : dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.okTextStyle, $creationLocationd_0dea112b090073317d4: C[161] || CT.C161}), $creationLocationd_0dea112b090073317d4: C[165] || CT.C165})]), $creationLocationd_0dea112b090073317d4: C[169] || CT.C169});
          }, T.BuildContextToAlertDialog())});
      }).bind(this));
    }
    [_paginationTextField]() {
      return new form.Form.new({key: this[_formKey], child: new container.Container.new({width: 328, child: new text_form_field.TextFormField.new({style: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.inputFieldTextStyle, focusNode: this[_focusNode], decoration: new input_decorator.InputDecoration.new({isDense: true, focusedBorder: new input_border.UnderlineInputBorder.new({borderSide: new borders.BorderSide.new({color: theme$.Theme.of(this.context).primaryColor})}), contentPadding: C[180] || CT.C180, hintText: dart.nullCheck(this[_localizations$]).pdfEnterPageNumberLabel, hintStyle: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.hintTextStyle, counterText: dart.str(this.widget.pdfViewerController.pageNumber) + "/" + dart.str(this.widget.pdfViewerController.pageCount), counterStyle: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.pageInfoTextStyle, errorStyle: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.validationTextStyle}), keyboardType: text_input.TextInputType.number, enableInteractiveSelection: false, controller: this[_textFieldController], autofocus: true, onEditingComplete: dart.bind(this, _handlePageNumberValidation), onFieldSubmitted: dart.fn(value => {
              if (value == null) dart.nullFailed(I[4], 929, 37, "value");
              this[_handlePageNumberValidation]();
            }, T.StringTovoid()), validator: dart.fn(value => {
              try {
                if (value != null) {
                  let index = core.int.parse(value);
                  if (dart.notNull(index) <= 0 || dart.notNull(index) > dart.notNull(this.widget.pdfViewerController.pageCount)) {
                    this[_textFieldController].clear();
                    return dart.nullCheck(this[_localizations$]).pdfInvalidPageNumberLabel;
                  }
                }
              } catch (e) {
                let ex = dart.getThrown(e);
                if (core.Exception.is(ex)) {
                  this[_textFieldController].clear();
                  return dart.nullCheck(this[_localizations$]).pdfInvalidPageNumberLabel;
                } else
                  throw e;
              }
            }, T.StringNToStringN()), $creationLocationd_0dea112b090073317d4: C[181] || CT.C181}), $creationLocationd_0dea112b090073317d4: C[193] || CT.C193}), $creationLocationd_0dea112b090073317d4: C[197] || CT.C197});
    }
    [_handlePageNumberValidation]() {
      if (this[_formKey].currentState != null && dart.test(dart.nullCheck(this[_formKey].currentState).validate())) {
        let index = core.int.parse(this[_textFieldController].text);
        this[_textFieldController].clear();
        navigator.Navigator.of(this.context).pop(T.ObjectN());
        this.widget.pdfViewerController.jumpToPage(index);
      }
    }
  };
  (single_page_view.SinglePageViewState.new = function() {
    this[_pdfViewerThemeData$] = null;
    this[_localizations$] = null;
    this[_isScrollHeadDragged] = false;
    this[_scrollHeadPosition] = 0.0;
    this[_canScroll] = false;
    this[_isOverFlowed] = false;
    this[_setZoomLevel] = false;
    this[_paddingWidthScale] = 0.0;
    this[_paddingHeightScale] = 0.0;
    this[_currentOffsetOfInteractionUpdate] = ui.Offset.zero;
    this[_transformationController] = new interactive_viewer.TransformationController.new();
    this[_canPanOnZoom] = false;
    this[_textFieldController] = new editable_text.TextEditingController.new();
    this[_formKey] = T.GlobalKeyOfFormState().new();
    this[_focusNode] = new focus_manager.FocusNode.new();
    this[_oldLayoutSize] = ui.Size.zero;
    this[_topMargin] = 0.0;
    this[_leftMargin] = 0.0;
    this[_panStartOffset] = 0.0;
    this[_panUpdateOffset] = 0.0;
    this[_canJumpPrevious] = false;
    this[_canJumpNext] = false;
    this[_isMousePointer] = false;
    this[isJumpOnZoomedDocument] = false;
    this[_oldPreviousZoomLevel] = 1.0;
    this[greyAreaSize] = 0.0;
    this[previousZoomLevel] = 1.0;
    this[currentZoomLevel] = 1.0;
    this[currentOffset] = ui.Offset.zero;
    single_page_view.SinglePageViewState.__proto__.new.call(this);
    ;
  }).prototype = single_page_view.SinglePageViewState.prototype;
  dart.addTypeTests(single_page_view.SinglePageViewState);
  dart.addTypeCaches(single_page_view.SinglePageViewState);
  dart.setMethodSignature(single_page_view.SinglePageViewState, () => ({
    __proto__: dart.getMethods(single_page_view.SinglePageViewState.__proto__),
    [_getChildSize]: dart.fnType(ui.Size, [ui.Size]),
    jumpTo: dart.fnType(dart.void, [], {xOffset: dart.nullable(core.double), yOffset: dart.nullable(core.double)}, {}),
    [_handlePdfOffsetChanged]: dart.fnType(dart.void, [ui.Offset]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_onDoubleTapZoomInvoked]: dart.fnType(ui.Offset, [ui.Offset, ui.Offset]),
    [_handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    scaleTo: dart.fnType(core.double, [core.double]),
    jumpOnZoomedDocument: dart.fnType(dart.void, [core.int, ui.Offset]),
    [_setPixel]: dart.fnType(dart.void, [ui.Offset]),
    [_clearSelection]: dart.fnType(async.Future$(core.bool), []),
    [_showPaginationDialog]: dart.fnType(async.Future$(dart.void), []),
    [_paginationTextField]: dart.fnType(framework.Widget, []),
    [_handlePageNumberValidation]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(single_page_view.SinglePageViewState, I[5]);
  dart.setFieldSignature(single_page_view.SinglePageViewState, () => ({
    __proto__: dart.getFields(single_page_view.SinglePageViewState.__proto__),
    [_pdfViewerThemeData$]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations$]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations)),
    [_isScrollHeadDragged]: dart.fieldType(core.bool),
    [_scrollHeadPosition]: dart.fieldType(core.double),
    [_canScroll]: dart.fieldType(core.bool),
    [_isOverFlowed]: dart.fieldType(core.bool),
    [_setZoomLevel]: dart.fieldType(core.bool),
    [_paddingWidthScale]: dart.fieldType(core.double),
    [_paddingHeightScale]: dart.fieldType(core.double),
    [_currentOffsetOfInteractionUpdate]: dart.fieldType(ui.Offset),
    [_transformationController]: dart.fieldType(interactive_viewer.TransformationController),
    [_canPanOnZoom]: dart.fieldType(core.bool),
    [_textFieldController]: dart.finalFieldType(editable_text.TextEditingController),
    [_formKey]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_focusNode]: dart.finalFieldType(focus_manager.FocusNode),
    [_oldLayoutSize]: dart.fieldType(ui.Size),
    [_topMargin]: dart.fieldType(core.double),
    [_leftMargin]: dart.fieldType(core.double),
    [_panStartOffset]: dart.fieldType(core.double),
    [_panUpdateOffset]: dart.fieldType(core.double),
    [_canJumpPrevious]: dart.fieldType(core.bool),
    [_canJumpNext]: dart.fieldType(core.bool),
    [_isMousePointer]: dart.fieldType(core.bool),
    isJumpOnZoomedDocument: dart.fieldType(core.bool),
    [_oldPreviousZoomLevel]: dart.fieldType(core.double),
    greyAreaSize: dart.fieldType(core.double),
    previousZoomLevel: dart.fieldType(core.double),
    currentZoomLevel: dart.fieldType(core.double),
    currentOffset: dart.fieldType(ui.Offset)
  }));
  dart.defineLazy(single_page_view, {
    /*single_page_view._kPdfScrollHeadHeight*/get _kPdfScrollHeadHeight() {
      return 48;
    },
    /*single_page_view._kPdfPaginationTextFieldWidth*/get _kPdfPaginationTextFieldWidth() {
      return 328;
    }
  }, false);
  var height$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.height");
  var width$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.width");
  var enableDocumentLinkNavigation$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.enableDocumentLinkNavigation");
  var pdfDocument$0 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfDocument");
  var pageIndex$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pageIndex");
  var pdfPages$0 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfPages");
  var pdfViewerController$0 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfViewerController");
  var enableTextSelection$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.enableTextSelection");
  var onTextSelectionDragStarted$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionDragStarted");
  var onTextSelectionDragEnded$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionDragEnded");
  var onTextSelectionChanged$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionChanged");
  var searchTextHighlightColor$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.searchTextHighlightColor");
  var textCollection$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.textCollection");
  var pdfTextSearchResult$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfTextSearchResult");
  var interactionMode$0 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.interactionMode");
  var isMobileWebView$0 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.isMobileWebView");
  var viewportGlobalRect$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.viewportGlobalRect");
  var pdfScrollableStateKey$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfScrollableStateKey");
  var singlePageViewStateKey$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.singlePageViewStateKey");
  var scrollDirection$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.scrollDirection");
  var isSinglePageView$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.isSinglePageView");
  var _scrollWhileSelection = dart.privateName(pdfviewer_canvas, "_scrollWhileSelection");
  pdfviewer_canvas.PdfViewerCanvas = class PdfViewerCanvas extends framework.LeafRenderObjectWidget {
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get enableDocumentLinkNavigation() {
      return this[enableDocumentLinkNavigation$];
    }
    set enableDocumentLinkNavigation(value) {
      super.enableDocumentLinkNavigation = value;
    }
    get pdfDocument() {
      return this[pdfDocument$0];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    get pageIndex() {
      return this[pageIndex$];
    }
    set pageIndex(value) {
      super.pageIndex = value;
    }
    get pdfPages() {
      return this[pdfPages$0];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$0];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get onTextSelectionDragStarted() {
      return this[onTextSelectionDragStarted$];
    }
    set onTextSelectionDragStarted(value) {
      super.onTextSelectionDragStarted = value;
    }
    get onTextSelectionDragEnded() {
      return this[onTextSelectionDragEnded$];
    }
    set onTextSelectionDragEnded(value) {
      super.onTextSelectionDragEnded = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get textCollection() {
      return this[textCollection$];
    }
    set textCollection(value) {
      super.textCollection = value;
    }
    get pdfTextSearchResult() {
      return this[pdfTextSearchResult$];
    }
    set pdfTextSearchResult(value) {
      super.pdfTextSearchResult = value;
    }
    get interactionMode() {
      return this[interactionMode$0];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$0];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get viewportGlobalRect() {
      return this[viewportGlobalRect$];
    }
    set viewportGlobalRect(value) {
      super.viewportGlobalRect = value;
    }
    get pdfScrollableStateKey() {
      return this[pdfScrollableStateKey$];
    }
    set pdfScrollableStateKey(value) {
      super.pdfScrollableStateKey = value;
    }
    get singlePageViewStateKey() {
      return this[singlePageViewStateKey$];
    }
    set singlePageViewStateKey(value) {
      super.singlePageViewStateKey = value;
    }
    get scrollDirection() {
      return this[scrollDirection$];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get isSinglePageView() {
      return this[isSinglePageView$];
    }
    set isSinglePageView(value) {
      super.isSinglePageView = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[6], 109, 48, "context");
      return new pdfviewer_canvas.CanvasRenderBox.new(this.height, this.width, context, this.pdfDocument, this.pdfPages, this.pageIndex, this.interactionMode, this.pdfViewerController, this.enableDocumentLinkNavigation, this.enableTextSelection, this.onTextSelectionChanged, this.onTextSelectionDragStarted, this.onTextSelectionDragEnded, this.textCollection, this.searchTextHighlightColor, this.isMobileWebView, this.pdfTextSearchResult, this.pdfScrollableStateKey, this.singlePageViewStateKey, this.viewportGlobalRect, this.scrollDirection, this.isSinglePageView);
    }
    updateRenderObject(context, renderObject) {
      let t9;
      if (context == null) dart.nullFailed(I[6], 136, 40, "context");
      pdfviewer_canvas.CanvasRenderBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[6], 136, 65, "renderObject");
      t9 = renderObject;
      (() => {
        t9.height = this.height;
        t9.width = this.width;
        t9.onTextSelectionChanged = this.onTextSelectionChanged;
        t9.pageIndex = this.pageIndex;
        t9.textCollection = this.textCollection;
        t9.interactionMode = this.interactionMode;
        t9.enableTextSelection = this.enableTextSelection;
        t9.enableDocumentLinkNavigation = this.enableDocumentLinkNavigation;
        t9.searchTextHighlightColor = this.searchTextHighlightColor;
        t9.scrollDirection = this.scrollDirection;
        t9.isSinglePageView = this.isSinglePageView;
        t9.viewportGlobalRect = this.viewportGlobalRect;
        t9.pdfTextSearchResult = this.pdfTextSearchResult;
        return t9;
      })();
      renderObject.markNeedsPaint();
      renderObject[_scrollWhileSelection]();
      super.updateRenderObject(context, renderObject);
    }
  };
  (pdfviewer_canvas.PdfViewerCanvas.new = function(key, height, width, pdfDocument, pageIndex, pdfPages, interactionMode, pdfViewerController, enableDocumentLinkNavigation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, textCollection, searchTextHighlightColor, pdfTextSearchResult, isMobileWebView, pdfScrollableStateKey, singlePageViewStateKey, viewportGlobalRect, scrollDirection, isSinglePageView, opts) {
    if (key == null) dart.nullFailed(I[6], 21, 9, "key");
    if (height == null) dart.nullFailed(I[6], 22, 10, "height");
    if (width == null) dart.nullFailed(I[6], 23, 10, "width");
    if (pageIndex == null) dart.nullFailed(I[6], 25, 10, "pageIndex");
    if (pdfPages == null) dart.nullFailed(I[6], 26, 10, "pdfPages");
    if (interactionMode == null) dart.nullFailed(I[6], 27, 10, "interactionMode");
    if (pdfViewerController == null) dart.nullFailed(I[6], 28, 10, "pdfViewerController");
    if (enableDocumentLinkNavigation == null) dart.nullFailed(I[6], 29, 10, "enableDocumentLinkNavigation");
    if (enableTextSelection == null) dart.nullFailed(I[6], 30, 10, "enableTextSelection");
    if (onTextSelectionDragStarted == null) dart.nullFailed(I[6], 32, 10, "onTextSelectionDragStarted");
    if (onTextSelectionDragEnded == null) dart.nullFailed(I[6], 33, 10, "onTextSelectionDragEnded");
    if (searchTextHighlightColor == null) dart.nullFailed(I[6], 35, 10, "searchTextHighlightColor");
    if (pdfTextSearchResult == null) dart.nullFailed(I[6], 36, 10, "pdfTextSearchResult");
    if (isMobileWebView == null) dart.nullFailed(I[6], 37, 10, "isMobileWebView");
    if (pdfScrollableStateKey == null) dart.nullFailed(I[6], 38, 10, "pdfScrollableStateKey");
    if (singlePageViewStateKey == null) dart.nullFailed(I[6], 39, 10, "singlePageViewStateKey");
    if (scrollDirection == null) dart.nullFailed(I[6], 41, 10, "scrollDirection");
    if (isSinglePageView == null) dart.nullFailed(I[6], 42, 10, "isSinglePageView");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[height$] = height;
    this[width$] = width;
    this[pdfDocument$0] = pdfDocument;
    this[pageIndex$] = pageIndex;
    this[pdfPages$0] = pdfPages;
    this[interactionMode$0] = interactionMode;
    this[pdfViewerController$0] = pdfViewerController;
    this[enableDocumentLinkNavigation$] = enableDocumentLinkNavigation;
    this[enableTextSelection$] = enableTextSelection;
    this[onTextSelectionChanged$] = onTextSelectionChanged;
    this[onTextSelectionDragStarted$] = onTextSelectionDragStarted;
    this[onTextSelectionDragEnded$] = onTextSelectionDragEnded;
    this[textCollection$] = textCollection;
    this[searchTextHighlightColor$] = searchTextHighlightColor;
    this[pdfTextSearchResult$] = pdfTextSearchResult;
    this[isMobileWebView$0] = isMobileWebView;
    this[pdfScrollableStateKey$] = pdfScrollableStateKey;
    this[singlePageViewStateKey$] = singlePageViewStateKey;
    this[viewportGlobalRect$] = viewportGlobalRect;
    this[scrollDirection$] = scrollDirection;
    this[isSinglePageView$] = isSinglePageView;
    pdfviewer_canvas.PdfViewerCanvas.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer_canvas.PdfViewerCanvas.prototype;
  dart.addTypeTests(pdfviewer_canvas.PdfViewerCanvas);
  dart.addTypeCaches(pdfviewer_canvas.PdfViewerCanvas);
  dart.setMethodSignature(pdfviewer_canvas.PdfViewerCanvas, () => ({
    __proto__: dart.getMethods(pdfviewer_canvas.PdfViewerCanvas.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(pdfviewer_canvas.PdfViewerCanvas, I[7]);
  dart.setFieldSignature(pdfviewer_canvas.PdfViewerCanvas, () => ({
    __proto__: dart.getFields(pdfviewer_canvas.PdfViewerCanvas.__proto__),
    height: dart.finalFieldType(core.double),
    width: dart.finalFieldType(core.double),
    enableDocumentLinkNavigation: dart.finalFieldType(core.bool),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument)),
    pageIndex: dart.finalFieldType(core.int),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    enableTextSelection: dart.finalFieldType(core.bool),
    onTextSelectionDragStarted: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionDragEnded: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    textCollection: dart.finalFieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    pdfTextSearchResult: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    isMobileWebView: dart.finalFieldType(core.bool),
    viewportGlobalRect: dart.finalFieldType(dart.nullable(ui.Rect)),
    pdfScrollableStateKey: dart.finalFieldType(framework.GlobalKey$(pdf_scrollable.PdfScrollableState)),
    singlePageViewStateKey: dart.finalFieldType(framework.GlobalKey$(single_page_view.SinglePageViewState)),
    scrollDirection: dart.finalFieldType(enums.PdfScrollDirection),
    isSinglePageView: dart.finalFieldType(core.bool)
  }));
  var pdfScrollableStateKey$0 = dart.privateName(pdfviewer_canvas, "CanvasRenderBox.pdfScrollableStateKey");
  var singlePageViewStateKey$0 = dart.privateName(pdfviewer_canvas, "CanvasRenderBox.singlePageViewStateKey");
  var __CanvasRenderBox_height = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#height");
  var __CanvasRenderBox_height_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#height#isSet");
  var __CanvasRenderBox_width = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#width");
  var __CanvasRenderBox_width_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#width#isSet");
  var __CanvasRenderBox_pageIndex = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pageIndex");
  var __CanvasRenderBox_pageIndex_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pageIndex#isSet");
  var __CanvasRenderBox_pdfDocument = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfDocument");
  var __CanvasRenderBox_pdfDocument_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfDocument#isSet");
  var __CanvasRenderBox_context = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#context");
  var __CanvasRenderBox_context_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#context#isSet");
  var __CanvasRenderBox_enableTextSelection = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableTextSelection");
  var __CanvasRenderBox_enableTextSelection_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableTextSelection#isSet");
  var __CanvasRenderBox_enableDocumentLinkNavigation = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableDocumentLinkNavigation");
  var __CanvasRenderBox_enableDocumentLinkNavigation_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableDocumentLinkNavigation#isSet");
  var __CanvasRenderBox_pdfPages = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfPages");
  var __CanvasRenderBox_pdfPages_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfPages#isSet");
  var __CanvasRenderBox_pdfViewerController = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfViewerController");
  var __CanvasRenderBox_pdfViewerController_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfViewerController#isSet");
  var __CanvasRenderBox_onTextSelectionDragStarted = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragStarted");
  var __CanvasRenderBox_onTextSelectionDragStarted_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragStarted#isSet");
  var __CanvasRenderBox_onTextSelectionDragEnded = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragEnded");
  var __CanvasRenderBox_onTextSelectionDragEnded_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragEnded#isSet");
  var __CanvasRenderBox_onTextSelectionChanged = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionChanged");
  var __CanvasRenderBox_onTextSelectionChanged_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionChanged#isSet");
  var __CanvasRenderBox_interactionMode = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#interactionMode");
  var __CanvasRenderBox_interactionMode_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#interactionMode#isSet");
  var __CanvasRenderBox_searchTextHighlightColor = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#searchTextHighlightColor");
  var __CanvasRenderBox_searchTextHighlightColor_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#searchTextHighlightColor#isSet");
  var __CanvasRenderBox_textCollection = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#textCollection");
  var __CanvasRenderBox_textCollection_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#textCollection#isSet");
  var __CanvasRenderBox_pdfTextSearchResult = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfTextSearchResult");
  var __CanvasRenderBox_pdfTextSearchResult_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfTextSearchResult#isSet");
  var __CanvasRenderBox_isMobileWebView = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#isMobileWebView");
  var __CanvasRenderBox_isMobileWebView_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#isMobileWebView#isSet");
  var __CanvasRenderBox_viewportGlobalRect = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#viewportGlobalRect");
  var __CanvasRenderBox_viewportGlobalRect_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#viewportGlobalRect#isSet");
  var __CanvasRenderBox_scrollDirection = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#scrollDirection");
  var __CanvasRenderBox_scrollDirection_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#scrollDirection#isSet");
  var __CanvasRenderBox_isSinglePageView = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#isSinglePageView");
  var __CanvasRenderBox_isSinglePageView_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#isSinglePageView#isSet");
  var _viewId = dart.privateName(pdfviewer_canvas, "_viewId");
  var _destinationPageIndex = dart.privateName(pdfviewer_canvas, "_destinationPageIndex");
  var __CanvasRenderBox__totalPageOffset = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_totalPageOffset");
  var __CanvasRenderBox__totalPageOffset_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_totalPageOffset#isSet");
  var _isTOCTapped = dart.privateName(pdfviewer_canvas, "_isTOCTapped");
  var _isMousePointer$ = dart.privateName(pdfviewer_canvas, "_isMousePointer");
  var _startBubbleTapX = dart.privateName(pdfviewer_canvas, "_startBubbleTapX");
  var _endBubbleTapX = dart.privateName(pdfviewer_canvas, "_endBubbleTapX");
  var _bubbleSize = dart.privateName(pdfviewer_canvas, "_bubbleSize");
  var _jumpOffset = dart.privateName(pdfviewer_canvas, "_jumpOffset");
  var _maximumZoomLevel = dart.privateName(pdfviewer_canvas, "_maximumZoomLevel");
  var _longPressed = dart.privateName(pdfviewer_canvas, "_longPressed");
  var _startBubbleDragging = dart.privateName(pdfviewer_canvas, "_startBubbleDragging");
  var _endBubbleDragging = dart.privateName(pdfviewer_canvas, "_endBubbleDragging");
  var _zoomPercentage = dart.privateName(pdfviewer_canvas, "_zoomPercentage");
  var _tapDetails = dart.privateName(pdfviewer_canvas, "_tapDetails");
  var _dragDetails = dart.privateName(pdfviewer_canvas, "_dragDetails");
  var _dragDownDetails = dart.privateName(pdfviewer_canvas, "_dragDownDetails");
  var _selectionColor = dart.privateName(pdfviewer_canvas, "_selectionColor");
  var _selectionHandleColor = dart.privateName(pdfviewer_canvas, "_selectionHandleColor");
  var __CanvasRenderBox__tapRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_tapRecognizer");
  var __CanvasRenderBox__tapRecognizer_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_tapRecognizer#isSet");
  var __CanvasRenderBox__dragRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_dragRecognizer");
  var __CanvasRenderBox__dragRecognizer_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_dragRecognizer#isSet");
  var __CanvasRenderBox__longPressRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_longPressRecognizer");
  var __CanvasRenderBox__longPressRecognizer_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_longPressRecognizer#isSet");
  var __CanvasRenderBox__verticalDragRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_verticalDragRecognizer");
  var __CanvasRenderBox__verticalDragRecognizer_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_verticalDragRecognizer#isSet");
  var __CanvasRenderBox__documentLinkAnnotation = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_documentLinkAnnotation");
  var __CanvasRenderBox__documentLinkAnnotation_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_documentLinkAnnotation#isSet");
  var __CanvasRenderBox__rotatedAngle = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_rotatedAngle");
  var __CanvasRenderBox__rotatedAngle_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_rotatedAngle#isSet");
  var _tapRecognizer = dart.privateName(pdfviewer_canvas, "_tapRecognizer");
  var _longPressRecognizer = dart.privateName(pdfviewer_canvas, "_longPressRecognizer");
  var _dragRecognizer = dart.privateName(pdfviewer_canvas, "_dragRecognizer");
  var _verticalDragRecognizer = dart.privateName(pdfviewer_canvas, "_verticalDragRecognizer");
  var _totalPageOffset = dart.privateName(pdfviewer_canvas, "_totalPageOffset");
  var _documentLinkAnnotation = dart.privateName(pdfviewer_canvas, "_documentLinkAnnotation");
  var _rotatedAngle = dart.privateName(pdfviewer_canvas, "_rotatedAngle");
  var _checkStartBubblePosition = dart.privateName(pdfviewer_canvas, "_checkStartBubblePosition");
  var _checkEndBubblePosition = dart.privateName(pdfviewer_canvas, "_checkEndBubblePosition");
  var _enableMouseSelection = dart.privateName(pdfviewer_canvas, "_enableMouseSelection");
  var _updateSelectionPan = dart.privateName(pdfviewer_canvas, "_updateSelectionPan");
  var _enableSelection = dart.privateName(pdfviewer_canvas, "_enableSelection");
  var _sortTextLines = dart.privateName(pdfviewer_canvas, "_sortTextLines");
  var _name$ = dart.privateName(pdf, "_name");
  var _handleHistoryEntryRemoved$ = dart.privateName(pdfviewer_canvas, "_handleHistoryEntryRemoved");
  var _ensureHistoryEntry$ = dart.privateName(pdfviewer_canvas, "_ensureHistoryEntry");
  var _drawStartBubble = dart.privateName(pdfviewer_canvas, "_drawStartBubble");
  var _drawEndBubble = dart.privateName(pdfviewer_canvas, "_drawEndBubble");
  var _drawTextRect = dart.privateName(pdfviewer_canvas, "_drawTextRect");
  var _performDocumentLinkNavigation = dart.privateName(pdfviewer_canvas, "_performDocumentLinkNavigation");
  var _performTextSearch = dart.privateName(pdfviewer_canvas, "_performTextSearch");
  var _findStartAndEndIndex = dart.privateName(pdfviewer_canvas, "_findStartAndEndIndex");
  var _selectTextLinesInRegion = dart.privateName(pdfviewer_canvas, "_selectTextLinesInRegion");
  var _performSelection = dart.privateName(pdfviewer_canvas, "_performSelection");
  var Rect_bottom = dart.privateName(ui, "Rect.bottom");
  var Rect_right = dart.privateName(ui, "Rect.right");
  var Rect_top = dart.privateName(ui, "Rect.top");
  var Rect_left = dart.privateName(ui, "Rect.left");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var _name$0 = dart.privateName(platform, "_name");
  pdfviewer_canvas.CanvasRenderBox = class CanvasRenderBox extends box.RenderBox {
    get pdfScrollableStateKey() {
      return this[pdfScrollableStateKey$0];
    }
    set pdfScrollableStateKey(value) {
      super.pdfScrollableStateKey = value;
    }
    get singlePageViewStateKey() {
      return this[singlePageViewStateKey$0];
    }
    set singlePageViewStateKey(value) {
      super.singlePageViewStateKey = value;
    }
    get height() {
      let t9;
      return dart.test(this[__CanvasRenderBox_height_isSet]) ? (t9 = this[__CanvasRenderBox_height], t9) : dart.throw(new _internal.LateError.fieldNI("height"));
    }
    set height(t9) {
      if (t9 == null) dart.nullFailed(I[6], 204, 15, "null");
      this[__CanvasRenderBox_height_isSet] = true;
      this[__CanvasRenderBox_height] = t9;
    }
    get width() {
      let t10;
      return dart.test(this[__CanvasRenderBox_width_isSet]) ? (t10 = this[__CanvasRenderBox_width], t10) : dart.throw(new _internal.LateError.fieldNI("width"));
    }
    set width(t10) {
      if (t10 == null) dart.nullFailed(I[6], 207, 15, "null");
      this[__CanvasRenderBox_width_isSet] = true;
      this[__CanvasRenderBox_width] = t10;
    }
    get pageIndex() {
      let t11;
      return dart.test(this[__CanvasRenderBox_pageIndex_isSet]) ? (t11 = this[__CanvasRenderBox_pageIndex], t11) : dart.throw(new _internal.LateError.fieldNI("pageIndex"));
    }
    set pageIndex(t11) {
      if (t11 == null) dart.nullFailed(I[6], 210, 12, "null");
      this[__CanvasRenderBox_pageIndex_isSet] = true;
      this[__CanvasRenderBox_pageIndex] = t11;
    }
    get pdfDocument() {
      return dart.test(this[__CanvasRenderBox_pdfDocument_isSet]) ? this[__CanvasRenderBox_pdfDocument] : dart.throw(new _internal.LateError.fieldNI("pdfDocument"));
    }
    set pdfDocument(t12) {
      if (dart.test(this[__CanvasRenderBox_pdfDocument_isSet]))
        dart.throw(new _internal.LateError.fieldAI("pdfDocument"));
      else {
        this[__CanvasRenderBox_pdfDocument_isSet] = true;
        this[__CanvasRenderBox_pdfDocument] = t12;
      }
    }
    get context() {
      let t13;
      return dart.test(this[__CanvasRenderBox_context_isSet]) ? (t13 = this[__CanvasRenderBox_context], t13) : dart.throw(new _internal.LateError.fieldNI("context"));
    }
    set context(t13) {
      if (t13 == null) dart.nullFailed(I[6], 216, 27, "null");
      if (dart.test(this[__CanvasRenderBox_context_isSet]))
        dart.throw(new _internal.LateError.fieldAI("context"));
      else {
        this[__CanvasRenderBox_context_isSet] = true;
        this[__CanvasRenderBox_context] = t13;
      }
    }
    get enableTextSelection() {
      let t14;
      return dart.test(this[__CanvasRenderBox_enableTextSelection_isSet]) ? (t14 = this[__CanvasRenderBox_enableTextSelection], t14) : dart.throw(new _internal.LateError.fieldNI("enableTextSelection"));
    }
    set enableTextSelection(t14) {
      if (t14 == null) dart.nullFailed(I[6], 219, 13, "null");
      this[__CanvasRenderBox_enableTextSelection_isSet] = true;
      this[__CanvasRenderBox_enableTextSelection] = t14;
    }
    get enableDocumentLinkNavigation() {
      let t15;
      return dart.test(this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet]) ? (t15 = this[__CanvasRenderBox_enableDocumentLinkNavigation], t15) : dart.throw(new _internal.LateError.fieldNI("enableDocumentLinkNavigation"));
    }
    set enableDocumentLinkNavigation(t15) {
      if (t15 == null) dart.nullFailed(I[6], 222, 13, "null");
      this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet] = true;
      this[__CanvasRenderBox_enableDocumentLinkNavigation] = t15;
    }
    get pdfPages() {
      let t16;
      return dart.test(this[__CanvasRenderBox_pdfPages_isSet]) ? (t16 = this[__CanvasRenderBox_pdfPages], t16) : dart.throw(new _internal.LateError.fieldNI("pdfPages"));
    }
    set pdfPages(t16) {
      if (t16 == null) dart.nullFailed(I[6], 225, 36, "null");
      if (dart.test(this[__CanvasRenderBox_pdfPages_isSet]))
        dart.throw(new _internal.LateError.fieldAI("pdfPages"));
      else {
        this[__CanvasRenderBox_pdfPages_isSet] = true;
        this[__CanvasRenderBox_pdfPages] = t16;
      }
    }
    get pdfViewerController() {
      let t17;
      return dart.test(this[__CanvasRenderBox_pdfViewerController_isSet]) ? (t17 = this[__CanvasRenderBox_pdfViewerController], t17) : dart.throw(new _internal.LateError.fieldNI("pdfViewerController"));
    }
    set pdfViewerController(t17) {
      if (t17 == null) dart.nullFailed(I[6], 228, 34, "null");
      if (dart.test(this[__CanvasRenderBox_pdfViewerController_isSet]))
        dart.throw(new _internal.LateError.fieldAI("pdfViewerController"));
      else {
        this[__CanvasRenderBox_pdfViewerController_isSet] = true;
        this[__CanvasRenderBox_pdfViewerController] = t17;
      }
    }
    get onTextSelectionDragStarted() {
      let t18;
      return dart.test(this[__CanvasRenderBox_onTextSelectionDragStarted_isSet]) ? (t18 = this[__CanvasRenderBox_onTextSelectionDragStarted], t18) : dart.throw(new _internal.LateError.fieldNI("onTextSelectionDragStarted"));
    }
    set onTextSelectionDragStarted(t18) {
      if (t18 == null) dart.nullFailed(I[6], 231, 27, "null");
      if (dart.test(this[__CanvasRenderBox_onTextSelectionDragStarted_isSet]))
        dart.throw(new _internal.LateError.fieldAI("onTextSelectionDragStarted"));
      else {
        this[__CanvasRenderBox_onTextSelectionDragStarted_isSet] = true;
        this[__CanvasRenderBox_onTextSelectionDragStarted] = t18;
      }
    }
    get onTextSelectionDragEnded() {
      let t19;
      return dart.test(this[__CanvasRenderBox_onTextSelectionDragEnded_isSet]) ? (t19 = this[__CanvasRenderBox_onTextSelectionDragEnded], t19) : dart.throw(new _internal.LateError.fieldNI("onTextSelectionDragEnded"));
    }
    set onTextSelectionDragEnded(t19) {
      if (t19 == null) dart.nullFailed(I[6], 234, 27, "null");
      if (dart.test(this[__CanvasRenderBox_onTextSelectionDragEnded_isSet]))
        dart.throw(new _internal.LateError.fieldAI("onTextSelectionDragEnded"));
      else {
        this[__CanvasRenderBox_onTextSelectionDragEnded_isSet] = true;
        this[__CanvasRenderBox_onTextSelectionDragEnded] = t19;
      }
    }
    get onTextSelectionChanged() {
      return dart.test(this[__CanvasRenderBox_onTextSelectionChanged_isSet]) ? this[__CanvasRenderBox_onTextSelectionChanged] : dart.throw(new _internal.LateError.fieldNI("onTextSelectionChanged"));
    }
    set onTextSelectionChanged(t20) {
      this[__CanvasRenderBox_onTextSelectionChanged_isSet] = true;
      this[__CanvasRenderBox_onTextSelectionChanged] = t20;
    }
    get interactionMode() {
      let t21;
      return dart.test(this[__CanvasRenderBox_interactionMode_isSet]) ? (t21 = this[__CanvasRenderBox_interactionMode], t21) : dart.throw(new _internal.LateError.fieldNI("interactionMode"));
    }
    set interactionMode(t21) {
      if (t21 == null) dart.nullFailed(I[6], 240, 27, "null");
      this[__CanvasRenderBox_interactionMode_isSet] = true;
      this[__CanvasRenderBox_interactionMode] = t21;
    }
    get searchTextHighlightColor() {
      let t22;
      return dart.test(this[__CanvasRenderBox_searchTextHighlightColor_isSet]) ? (t22 = this[__CanvasRenderBox_searchTextHighlightColor], t22) : dart.throw(new _internal.LateError.fieldNI("searchTextHighlightColor"));
    }
    set searchTextHighlightColor(t22) {
      if (t22 == null) dart.nullFailed(I[6], 243, 14, "null");
      this[__CanvasRenderBox_searchTextHighlightColor_isSet] = true;
      this[__CanvasRenderBox_searchTextHighlightColor] = t22;
    }
    get textCollection() {
      return dart.test(this[__CanvasRenderBox_textCollection_isSet]) ? this[__CanvasRenderBox_textCollection] : dart.throw(new _internal.LateError.fieldNI("textCollection"));
    }
    set textCollection(t23) {
      this[__CanvasRenderBox_textCollection_isSet] = true;
      this[__CanvasRenderBox_textCollection] = t23;
    }
    get pdfTextSearchResult() {
      let t24;
      return dart.test(this[__CanvasRenderBox_pdfTextSearchResult_isSet]) ? (t24 = this[__CanvasRenderBox_pdfTextSearchResult], t24) : dart.throw(new _internal.LateError.fieldNI("pdfTextSearchResult"));
    }
    set pdfTextSearchResult(t24) {
      if (t24 == null) dart.nullFailed(I[6], 249, 28, "null");
      this[__CanvasRenderBox_pdfTextSearchResult_isSet] = true;
      this[__CanvasRenderBox_pdfTextSearchResult] = t24;
    }
    set isMobileWebView(t25) {
      if (t25 == null) dart.nullFailed(I[6], 252, 19, "null");
      if (dart.test(this[__CanvasRenderBox_isMobileWebView_isSet]))
        dart.throw(new _internal.LateError.fieldAI("isMobileWebView"));
      else {
        this[__CanvasRenderBox_isMobileWebView_isSet] = true;
        this[__CanvasRenderBox_isMobileWebView] = t25;
      }
    }
    get isMobileWebView() {
      let t26;
      return dart.test(this[__CanvasRenderBox_isMobileWebView_isSet]) ? (t26 = this[__CanvasRenderBox_isMobileWebView], t26) : dart.throw(new _internal.LateError.fieldNI("isMobileWebView"));
    }
    get viewportGlobalRect() {
      return dart.test(this[__CanvasRenderBox_viewportGlobalRect_isSet]) ? this[__CanvasRenderBox_viewportGlobalRect] : dart.throw(new _internal.LateError.fieldNI("viewportGlobalRect"));
    }
    set viewportGlobalRect(t26) {
      this[__CanvasRenderBox_viewportGlobalRect_isSet] = true;
      this[__CanvasRenderBox_viewportGlobalRect] = t26;
    }
    get scrollDirection() {
      let t27;
      return dart.test(this[__CanvasRenderBox_scrollDirection_isSet]) ? (t27 = this[__CanvasRenderBox_scrollDirection], t27) : dart.throw(new _internal.LateError.fieldNI("scrollDirection"));
    }
    set scrollDirection(t27) {
      if (t27 == null) dart.nullFailed(I[6], 264, 27, "null");
      this[__CanvasRenderBox_scrollDirection_isSet] = true;
      this[__CanvasRenderBox_scrollDirection] = t27;
    }
    get isSinglePageView() {
      let t28;
      return dart.test(this[__CanvasRenderBox_isSinglePageView_isSet]) ? (t28 = this[__CanvasRenderBox_isSinglePageView], t28) : dart.throw(new _internal.LateError.fieldNI("isSinglePageView"));
    }
    set isSinglePageView(t28) {
      if (t28 == null) dart.nullFailed(I[6], 267, 13, "null");
      this[__CanvasRenderBox_isSinglePageView_isSet] = true;
      this[__CanvasRenderBox_isSinglePageView] = t28;
    }
    get [_totalPageOffset]() {
      let t29;
      return dart.test(this[__CanvasRenderBox__totalPageOffset_isSet]) ? (t29 = this[__CanvasRenderBox__totalPageOffset], t29) : dart.throw(new _internal.LateError.fieldNI("_totalPageOffset"));
    }
    set [_totalPageOffset](t29) {
      if (t29 == null) dart.nullFailed(I[6], 271, 15, "null");
      this[__CanvasRenderBox__totalPageOffset_isSet] = true;
      this[__CanvasRenderBox__totalPageOffset] = t29;
    }
    get [_tapRecognizer]() {
      let t30;
      return dart.test(this[__CanvasRenderBox__tapRecognizer_isSet]) ? (t30 = this[__CanvasRenderBox__tapRecognizer], t30) : dart.throw(new _internal.LateError.fieldNI("_tapRecognizer"));
    }
    set [_tapRecognizer](t30) {
      if (t30 == null) dart.nullFailed(I[6], 288, 29, "null");
      this[__CanvasRenderBox__tapRecognizer_isSet] = true;
      this[__CanvasRenderBox__tapRecognizer] = t30;
    }
    get [_dragRecognizer]() {
      let t31;
      return dart.test(this[__CanvasRenderBox__dragRecognizer_isSet]) ? (t31 = this[__CanvasRenderBox__dragRecognizer], t31) : dart.throw(new _internal.LateError.fieldNI("_dragRecognizer"));
    }
    set [_dragRecognizer](t31) {
      if (t31 == null) dart.nullFailed(I[6], 289, 40, "null");
      this[__CanvasRenderBox__dragRecognizer_isSet] = true;
      this[__CanvasRenderBox__dragRecognizer] = t31;
    }
    get [_longPressRecognizer]() {
      let t32;
      return dart.test(this[__CanvasRenderBox__longPressRecognizer_isSet]) ? (t32 = this[__CanvasRenderBox__longPressRecognizer], t32) : dart.throw(new _internal.LateError.fieldNI("_longPressRecognizer"));
    }
    set [_longPressRecognizer](t32) {
      if (t32 == null) dart.nullFailed(I[6], 290, 35, "null");
      this[__CanvasRenderBox__longPressRecognizer_isSet] = true;
      this[__CanvasRenderBox__longPressRecognizer] = t32;
    }
    get [_verticalDragRecognizer]() {
      let t33;
      return dart.test(this[__CanvasRenderBox__verticalDragRecognizer_isSet]) ? (t33 = this[__CanvasRenderBox__verticalDragRecognizer], t33) : dart.throw(new _internal.LateError.fieldNI("_verticalDragRecognizer"));
    }
    set [_verticalDragRecognizer](t33) {
      if (t33 == null) dart.nullFailed(I[6], 291, 38, "null");
      this[__CanvasRenderBox__verticalDragRecognizer_isSet] = true;
      this[__CanvasRenderBox__verticalDragRecognizer] = t33;
    }
    get [_documentLinkAnnotation]() {
      return dart.test(this[__CanvasRenderBox__documentLinkAnnotation_isSet]) ? this[__CanvasRenderBox__documentLinkAnnotation] : dart.throw(new _internal.LateError.fieldNI("_documentLinkAnnotation"));
    }
    set [_documentLinkAnnotation](t34) {
      this[__CanvasRenderBox__documentLinkAnnotation_isSet] = true;
      this[__CanvasRenderBox__documentLinkAnnotation] = t34;
    }
    get [_rotatedAngle]() {
      let t36;
      if (!dart.test(this[__CanvasRenderBox__rotatedAngle_isSet])) {
        let t35 = dart.nullCheck(this.pdfDocument).pages._get(this.pageIndex).rotation;
        if (dart.test(this[__CanvasRenderBox__rotatedAngle_isSet])) dart.throw(new _internal.LateError.fieldADI("_rotatedAngle"));
        this[__CanvasRenderBox__rotatedAngle] = t35;
        this[__CanvasRenderBox__rotatedAngle_isSet] = true;
      }
      t36 = this[__CanvasRenderBox__rotatedAngle];
      return t36;
    }
    handleEvent(event, entry) {
      if (event == null) dart.nullFailed(I[6], 297, 33, "event");
      box.BoxHitTestEntry.as(entry);
      if (entry == null) dart.nullFailed(I[6], 297, 56, "entry");
      if (events.PointerDownEvent.is(event)) {
        this[_tapRecognizer].addPointer(event);
        if (this.interactionMode == enums.PdfInteractionMode.selection && dart.test(pdfviewer_helper.kIsDesktop) || !dart.test(pdfviewer_helper.kIsDesktop)) {
          this[_longPressRecognizer].addPointer(event);
          if (event.kind == ui.PointerDeviceKind.mouse) {
            this[_dragRecognizer].addPointer(event);
            this[_verticalDragRecognizer].addPointer(event);
          } else if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
            let isStartDragPossible = this[_checkStartBubblePosition](event.localPosition);
            let isEndDragPossible = this[_checkEndBubblePosition](event.localPosition);
            if (dart.test(isStartDragPossible) || dart.test(isEndDragPossible)) {
              this[_dragRecognizer].addPointer(event);
              this[_verticalDragRecognizer].addPointer(event);
            }
          }
        }
      }
      super.handleEvent(event, entry);
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[6], 322, 27, "position");
      return true;
    }
    get sizedByParent() {
      return true;
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[6], 329, 40, "constraints");
      return constraints.biggest;
    }
    handleTapDown(details) {
      if (details == null) dart.nullFailed(I[6], 334, 37, "details");
      this[_tapDetails] = details.localPosition;
      if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.isMobileWebView) && dart.test(this.enableTextSelection) && this.interactionMode == enums.PdfInteractionMode.selection) {
        if (details.kind == ui.PointerDeviceKind.mouse) {
          this[_isMousePointer$] = true;
        } else {
          this[_isMousePointer$] = false;
        }
      }
    }
    handleTapUp(details) {
      let t36;
      if (details == null) dart.nullFailed(I[6], 349, 33, "details");
      if (this.textCollection == null && !dart.test(pdfviewer_canvas._textSelectionHelper.enableTapSelection)) {
        this.clearSelection();
      }
      if (dart.test(pdfviewer_canvas._textSelectionHelper.enableTapSelection) && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        this.updateContextMenuPosition();
        pdfviewer_canvas._textSelectionHelper.enableTapSelection = false;
      }
      if (dart.test(this.enableDocumentLinkNavigation) && this.pdfDocument != null) {
        this[_viewId] = this.pageIndex;
        let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(this[_viewId])).size.height) / dart.notNull(this.height);
        let widthPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(this[_viewId])).size.width) / dart.notNull(this.width);
        let page = dart.nullCheck(this.pdfDocument).pages._get(this.pageIndex);
        let length = page.annotations.count;
        for (let index = 0; index < dart.notNull(length); index = index + 1) {
          if (pdf.PdfDocumentLinkAnnotation.is(page.annotations._get(index))) {
            this[_documentLinkAnnotation] = pdf.PdfDocumentLinkAnnotation.as(page.annotations._get(index));
            if (!(this[_documentLinkAnnotation] != null)) dart.assertFailed(null, I[6], 371, 18, "_documentLinkAnnotation != null");
            if (dart.notNull(details.localPosition.dy) >= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.top) / heightPercentage && dart.notNull(details.localPosition.dy) <= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.bottom) / heightPercentage && dart.notNull(details.localPosition.dx) >= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.left) / heightPercentage && dart.notNull(details.localPosition.dx) <= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.right) / heightPercentage) {
              if ((t36 = dart.nullCheck(this[_documentLinkAnnotation]).destination, t36 == null ? null : t36.page) != null) {
                this[_isTOCTapped] = true;
                let destinationPage = dart.nullCheck(dart.nullCheck(this[_documentLinkAnnotation]).destination).page;
                let destinationPageIndex = dart.notNull(dart.nullCheck(this.pdfDocument).pages.indexOf(destinationPage)) + 1;
                let destinationPageOffset = dart.nullCheck(dart.nullCheck(this[_documentLinkAnnotation]).destination).location;
                destinationPageOffset = this.getRotatedOffset(destinationPageOffset, destinationPageIndex - 1, destinationPage.rotation);
                let positionX = dart.notNull(destinationPageOffset.dx) / widthPercentage;
                let positionY = dart.notNull(destinationPageOffset.dy) / heightPercentage;
                let pageOffset = dart.nullCheck(this.pdfPages[$_get](destinationPageIndex)).pageOffset;
                if (dart.test(this.isSinglePageView)) {
                  this[_totalPageOffset] = new ui.Offset.new(positionX, positionY);
                } else {
                  if (this.scrollDirection == enums.PdfScrollDirection.horizontal) {
                    if (this.pdfViewerController.zoomLevel === 1) {
                      this[_totalPageOffset] = new ui.Offset.new(pageOffset, positionY);
                    } else {
                      this[_totalPageOffset] = new ui.Offset.new(dart.notNull(pageOffset) + positionX, positionY);
                    }
                  } else {
                    this[_totalPageOffset] = new ui.Offset.new(positionX, dart.notNull(pageOffset) + positionY);
                  }
                }
                this[_viewId] = this.pageIndex;
                this[_destinationPageIndex] = destinationPageIndex;
                this.markNeedsPaint();
                break;
              }
            }
          }
        }
      }
    }
    handleLongPressStart(details) {
      if (details == null) dart.nullFailed(I[6], 444, 51, "details");
      if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.isMobileWebView) && this.pdfDocument != null) {
        this.clearMouseSelection();
        let isTOC = this.findTOC(details.localPosition);
        if (this.interactionMode == enums.PdfInteractionMode.selection && !dart.test(isTOC) && !dart.test(this[_isMousePointer$])) {
          this.enableSelection();
        }
      } else {
        this.enableSelection();
      }
    }
    handleDragStart(details) {
      if (details == null) dart.nullFailed(I[6], 459, 41, "details");
      this[_enableMouseSelection](details, "DragStart");
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        let isStartDragPossible = this[_checkStartBubblePosition](dart.nullCheck(this[_dragDownDetails]));
        let isEndDragPossible = this[_checkEndBubblePosition](dart.nullCheck(this[_dragDownDetails]));
        if (dart.test(isStartDragPossible)) {
          this[_startBubbleDragging] = true;
          this.onTextSelectionDragStarted();
        } else if (dart.test(isEndDragPossible)) {
          this[_endBubbleDragging] = true;
          this.onTextSelectionDragStarted();
        }
      }
      if (details.kind == ui.PointerDeviceKind.mouse) {
        this[_isMousePointer$] = true;
      } else {
        this[_isMousePointer$] = false;
      }
    }
    handleDragUpdate(details) {
      if (details == null) dart.nullFailed(I[6], 481, 43, "details");
      if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.isMobileWebView) && dart.test(this[_isMousePointer$])) {
        this[_updateSelectionPan](details);
      }
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        this[_dragDetails] = details.localPosition;
        if (dart.test(this[_startBubbleDragging])) {
          this[_startBubbleTapX] = details.localPosition.dx;
          this.markNeedsPaint();
          this.triggerNullCallback();
        } else if (dart.test(this[_endBubbleDragging])) {
          this[_endBubbleTapX] = details.localPosition.dx;
          this.markNeedsPaint();
          if (this.onTextSelectionChanged != null) {
            dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
          }
          this.triggerNullCallback();
        }
      }
    }
    handleDragEnd(details) {
      if (details == null) dart.nullFailed(I[6], 503, 37, "details");
      if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.isMobileWebView) && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        if (dart.test(pdfviewer_canvas._textSelectionHelper.isCursorExit)) {
          pdfviewer_canvas._textSelectionHelper.isCursorExit = false;
        }
        this.onTextSelectionDragEnded();
        this.triggerValueCallback();
      }
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        if (dart.test(this[_startBubbleDragging])) {
          this[_startBubbleDragging] = false;
          this.onTextSelectionDragEnded();
          this.triggerValueCallback();
        }
        if (dart.test(this[_endBubbleDragging])) {
          this[_endBubbleDragging] = false;
          this.onTextSelectionDragEnded();
          this.triggerValueCallback();
        }
      }
    }
    handleDragDown(details) {
      if (details == null) dart.nullFailed(I[6], 528, 39, "details");
      this[_dragDownDetails] = details.localPosition;
    }
    handleDoubleTapDown(details) {
      if (details == null) dart.nullFailed(I[6], 533, 45, "details");
      pdfviewer_canvas._textSelectionHelper.enableTapSelection = true;
      this[_enableMouseSelection](details, "DoubleTap");
    }
    handleTripleTapDown(details) {
      if (details == null) dart.nullFailed(I[6], 539, 45, "details");
      pdfviewer_canvas._textSelectionHelper.enableTapSelection = true;
      this[_enableMouseSelection](details, "TripleTap");
    }
    [_enableMouseSelection](details, gestureType) {
      if (gestureType == null) dart.nullFailed(I[6], 545, 54, "gestureType");
      if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.isMobileWebView) && dart.test(this.enableTextSelection) && this.interactionMode == enums.PdfInteractionMode.selection && dart.test(this[_isMousePointer$])) {
        let isTOC = this.findTOC(ui.Offset.as(dart.dload(details, 'localPosition')));
        pdfviewer_canvas._textSelectionHelper.initialScrollOffset = 0.0;
        pdfviewer_canvas._textSelectionHelper.finalScrollOffset = 0.0;
        if (dart.equals(dart.dload(details, 'kind'), ui.PointerDeviceKind.mouse) && !dart.test(isTOC)) {
          if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
            let isStartDragPossible = this[_checkStartBubblePosition](ui.Offset.as(dart.dload(details, 'localPosition')));
            let isEndDragPossible = this[_checkEndBubblePosition](ui.Offset.as(dart.dload(details, 'localPosition')));
            if (dart.test(isStartDragPossible) || dart.test(isEndDragPossible)) {
              pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = false;
            } else {
              this.clearSelection();
            }
          }
          if (pdfviewer_canvas._textSelectionHelper.textLines == null || pdfviewer_canvas._textSelectionHelper.viewId != this.pageIndex) {
            pdfviewer_canvas._textSelectionHelper.viewId = this.pageIndex;
            pdfviewer_canvas._textSelectionHelper.textLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: this.pageIndex});
          }
          let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height) / dart.notNull(this.height);
          if (gestureType === "DragStart" && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
            pdfviewer_canvas._textSelectionHelper.endBubbleX = dart.notNull(core.double.as(dart.dload(dart.dload(details, 'localPosition'), 'dx'))) * heightPercentage;
            pdfviewer_canvas._textSelectionHelper.endBubbleY = dart.notNull(core.double.as(dart.dload(dart.dload(details, 'localPosition'), 'dy'))) * heightPercentage;
          }
          for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); textLineIndex = textLineIndex + 1) {
            let textLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex).wordCollection[$length]); wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                if (gestureType === "DragStart") {
                  if (dart.test(textGlyph.bounds.contains(ui.Offset.as(dart.dsend(dart.dload(details, 'localPosition'), '*', [heightPercentage]))))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                    pdfviewer_canvas._textSelectionHelper.startIndex = textLineIndex;
                    pdfviewer_canvas._textSelectionHelper.endIndex = textLineIndex;
                    this[_enableSelection](gestureType);
                  }
                } else if (gestureType === "DoubleTap") {
                  this.triggerNullCallback();
                  if (dart.test(textWord.bounds.contains(ui.Offset.as(dart.dsend(dart.dload(details, 'localPosition'), '*', [heightPercentage]))))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textWord.glyphs[$first];
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textWord.glyphs[$last].bounds.right;
                    pdfviewer_canvas._textSelectionHelper.endBubbleY = textWord.glyphs[$last].bounds.bottom;
                    pdfviewer_canvas._textSelectionHelper.startIndex = textLineIndex;
                    pdfviewer_canvas._textSelectionHelper.endIndex = textLineIndex;
                    this[_enableSelection](gestureType);
                  }
                } else if (gestureType === "TripleTap") {
                  this.triggerNullCallback();
                  if (dart.test(textLine.bounds.contains(ui.Offset.as(dart.dsend(dart.dload(details, 'localPosition'), '*', [heightPercentage]))))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textLine.wordCollection[$first].glyphs[$first];
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textLine.wordCollection[$last].bounds.right;
                    pdfviewer_canvas._textSelectionHelper.endBubbleY = textLine.wordCollection[$last].bounds.bottom;
                    pdfviewer_canvas._textSelectionHelper.startIndex = textLineIndex;
                    pdfviewer_canvas._textSelectionHelper.endIndex = textLineIndex;
                    this[_enableSelection](gestureType);
                  }
                }
              }
            }
          }
          this.markNeedsPaint();
        }
      }
    }
    [_enableSelection](gestureType) {
      if (gestureType == null) dart.nullFailed(I[6], 646, 32, "gestureType");
      if (!dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        if (gestureType === "DragStart") {
          this.clearMouseSelection();
          this.onTextSelectionDragStarted();
        }
        pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = true;
      }
    }
    triggerNullCallback() {
      if (this.onTextSelectionChanged != null) {
        dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
    }
    triggerValueCallback() {
      if (this.onTextSelectionChanged != null) {
        dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(pdfviewer_canvas._textSelectionHelper.copiedText, pdfviewer_canvas._textSelectionHelper.globalSelectedRegion));
      }
    }
    scrollStarted() {
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) || dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        this.triggerNullCallback();
      }
    }
    scrollEnded() {
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) || dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        this.triggerValueCallback();
      }
    }
    updateContextMenuPosition() {
      this.scrollStarted();
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) || dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        async.Future.delayed(C[201] || CT.C201, dart.fn(() => async.async(core.Null, (function*() {
          this.triggerValueCallback();
        }).bind(this)), T.VoidToFutureOfNull()));
      }
    }
    [_updateSelectionPan](details) {
      if (details == null) dart.nullFailed(I[6], 700, 46, "details");
      this[_scrollWhileSelection]();
      let currentOffset = this.pdfViewerController.scrollOffset.dy;
      if (this.viewportGlobalRect != null && !dart.test(dart.nullCheck(this.viewportGlobalRect).contains(details.globalPosition)) && dart.notNull(details.globalPosition.dx) <= dart.notNull(dart.nullCheck(this.viewportGlobalRect).right) && dart.notNull(details.globalPosition.dx) >= dart.notNull(dart.nullCheck(this.viewportGlobalRect).left)) {
        if (dart.notNull(details.globalPosition.dy) <= dart.notNull(dart.nullCheck(this.viewportGlobalRect).top)) {
          pdfviewer_canvas._textSelectionHelper.isCursorReachedTop = true;
        } else {
          pdfviewer_canvas._textSelectionHelper.isCursorReachedTop = false;
        }
        pdfviewer_canvas._textSelectionHelper.isCursorExit = true;
        if (pdfviewer_canvas._textSelectionHelper.initialScrollOffset === 0) {
          pdfviewer_canvas._textSelectionHelper.initialScrollOffset = currentOffset;
        }
      } else if (dart.test(pdfviewer_canvas._textSelectionHelper.isCursorExit)) {
        if (dart.test(pdfviewer_canvas._textSelectionHelper.isCursorReachedTop)) {
          pdfviewer_canvas._textSelectionHelper.finalScrollOffset = dart.notNull(currentOffset) - dart.notNull(this[_jumpOffset]);
        } else {
          pdfviewer_canvas._textSelectionHelper.finalScrollOffset = dart.notNull(currentOffset) + dart.notNull(this[_jumpOffset]);
        }
        pdfviewer_canvas._textSelectionHelper.isCursorExit = false;
      }
      if (dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) && !dart.test(pdfviewer_canvas._textSelectionHelper.isCursorExit)) {
        let endBubbleValue = null;
        if (this[_rotatedAngle] == pdf.PdfPageRotateAngle.rotateAngle180) {
          endBubbleValue = -(dart.notNull(pdfviewer_canvas._textSelectionHelper.finalScrollOffset) - dart.notNull(pdfviewer_canvas._textSelectionHelper.initialScrollOffset));
        } else {
          endBubbleValue = dart.notNull(pdfviewer_canvas._textSelectionHelper.finalScrollOffset) - dart.notNull(pdfviewer_canvas._textSelectionHelper.initialScrollOffset);
        }
        let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height) / dart.notNull(this.height);
        pdfviewer_canvas._textSelectionHelper.endBubbleX = dart.notNull(details.localPosition.dx) * heightPercentage;
        pdfviewer_canvas._textSelectionHelper.endBubbleY = (dart.notNull(details.localPosition.dy) + dart.notNull(endBubbleValue)) * heightPercentage;
        this.markNeedsPaint();
      }
    }
    [_scrollWhileSelection]() {
      let t36;
      if (dart.test(pdfviewer_canvas._textSelectionHelper.isCursorExit) && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        let viewId = (t36 = pdfviewer_canvas._textSelectionHelper.viewId, t36 == null ? 0 : t36);
        if (dart.test(pdfviewer_canvas._textSelectionHelper.isCursorReachedTop) && dart.notNull(this.pdfViewerController.pageNumber) >= dart.notNull(viewId) + 1 || dart.notNull(this.pdfViewerController.scrollOffset.dy) > 0 && (this.scrollDirection == enums.PdfScrollDirection.horizontal || dart.test(this.isSinglePageView))) {
          this.scroll(pdfviewer_canvas._textSelectionHelper.isCursorReachedTop, true);
        } else if (!dart.test(pdfviewer_canvas._textSelectionHelper.isCursorReachedTop) && dart.notNull(this.pdfViewerController.pageNumber) <= dart.notNull(viewId) + 1 || this.scrollDirection == enums.PdfScrollDirection.horizontal || dart.test(this.isSinglePageView)) {
          this.scroll(pdfviewer_canvas._textSelectionHelper.isCursorReachedTop, true);
        }
        if (this.onTextSelectionChanged != null) {
          dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
        }
      }
    }
    scroll(isReachedTop, isSelectionScroll) {
      let t36, t36$, t36$0;
      if (isReachedTop == null) dart.nullFailed(I[6], 767, 20, "isReachedTop");
      if (isSelectionScroll == null) dart.nullFailed(I[6], 767, 39, "isSelectionScroll");
      if (dart.test(isSelectionScroll)) {
        let endBubbleValue = dart.test(isReachedTop) ? -3.0 : 3.0;
        if (dart.nullCheck(this.pdfDocument).pages._get(this.pageIndex).rotation == pdf.PdfPageRotateAngle.rotateAngle180) {
          endBubbleValue = -endBubbleValue;
        } else {
          endBubbleValue = endBubbleValue;
        }
        pdfviewer_canvas._textSelectionHelper.endBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) + endBubbleValue;
      }
      let position = dart.notNull(this.pdfViewerController.scrollOffset.dy) + dart.notNull(dart.test(isReachedTop) ? -dart.notNull(this[_jumpOffset]) : this[_jumpOffset]);
      if (dart.test(isSelectionScroll)) {
        t36 = binding.WidgetsBinding.instance;
        t36 == null ? null : t36.addPostFrameCallback(dart.fn(timeStamp => {
          let t37, t37$;
          if (timeStamp == null) dart.nullFailed(I[6], 783, 63, "timeStamp");
          if (dart.test(this.isSinglePageView)) {
            t37 = this.singlePageViewStateKey.currentState;
            t37 == null ? null : t37.jumpTo({yOffset: position});
            this[_scrollWhileSelection]();
          } else {
            t37$ = this.pdfScrollableStateKey.currentState;
            t37$ == null ? null : t37$.jumpTo({yOffset: position});
          }
        }, T.DurationTovoid()));
      } else {
        if (dart.test(this.isSinglePageView)) {
          t36$ = this.singlePageViewStateKey.currentState;
          t36$ == null ? null : t36$.jumpTo({yOffset: position});
        } else {
          t36$0 = this.pdfScrollableStateKey.currentState;
          t36$0 == null ? null : t36$0.jumpTo({yOffset: position});
        }
      }
    }
    [_checkStartBubblePosition](details) {
      if (details == null) dart.nullFailed(I[6], 801, 41, "details");
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        let startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        let startBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        if (dart.notNull(details.dx) >= startBubbleX - dart.notNull(this[_bubbleSize]) * dart.notNull(this[_maximumZoomLevel]) && dart.notNull(details.dx) <= startBubbleX && dart.notNull(details.dy) >= startBubbleY - dart.notNull(this[_bubbleSize]) && dart.notNull(details.dy) <= startBubbleY + dart.notNull(this[_bubbleSize])) {
          return true;
        }
      }
      return false;
    }
    [_checkEndBubblePosition](details) {
      if (details == null) dart.nullFailed(I[6], 818, 39, "details");
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        let endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        let endBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        if (dart.notNull(details.dx) >= endBubbleX && dart.notNull(details.dx) <= endBubbleX + dart.notNull(this[_bubbleSize]) * dart.notNull(this[_maximumZoomLevel]) && dart.notNull(details.dy) >= endBubbleY - dart.notNull(this[_bubbleSize]) && dart.notNull(details.dy) <= endBubbleY + dart.notNull(this[_bubbleSize])) {
          return true;
        }
      }
      return false;
    }
    [_sortTextLines](textLines) {
      if (textLines == null) dart.nullFailed(I[6], 834, 48, "textLines");
      for (let textLineIndex = 0; textLineIndex < dart.notNull(textLines[$length]); textLineIndex = textLineIndex + 1) {
        for (let index = textLineIndex + 1; index < dart.notNull(textLines[$length]); index = index + 1) {
          if (dart.notNull(textLines[$_get](textLineIndex).bounds.bottom) > dart.notNull(textLines[$_get](index).bounds.bottom)) {
            let textLine = textLines[$_get](textLineIndex);
            textLines[$_set](textLineIndex, textLines[$_get](index));
            textLines[$_set](index, textLine);
          }
        }
      }
      return textLines;
    }
    getRotatedOffset(offset, pageIndex, angle) {
      if (offset == null) dart.nullFailed(I[6], 852, 14, "offset");
      if (pageIndex == null) dart.nullFailed(I[6], 852, 26, "pageIndex");
      if (angle == null) dart.nullFailed(I[6], 852, 56, "angle");
      if (angle != pdf.PdfPageRotateAngle.rotateAngle0) {
        let textLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: pageIndex});
        textLines = this[_sortTextLines](textLines);
        let textLine = null;
        for (let textLineIndex = 0; textLineIndex < dart.notNull(textLines[$length]); textLineIndex = textLineIndex + 1) {
          if (dart.notNull(textLines[$_get](textLineIndex).bounds.topLeft.dy) >= dart.notNull(offset.dy)) {
            textLine = textLines[$_get](textLineIndex);
            break;
          }
        }
        let bounds = this.getRotatedTextBounds(dart.nullCheck(textLine).bounds, pageIndex, angle);
        offset = bounds.topLeft;
      }
      return offset;
    }
    getRotatedTextBounds(textBounds, pageIndex, angle) {
      if (textBounds == null) dart.nullFailed(I[6], 875, 12, "textBounds");
      if (pageIndex == null) dart.nullFailed(I[6], 875, 28, "pageIndex");
      if (angle == null) dart.nullFailed(I[6], 875, 58, "angle");
      let rotatedTextBounds = null;
      let height = dart.nullCheck(this.pdfDocument).pages._get(pageIndex).size.height;
      let width = dart.nullCheck(this.pdfDocument).pages._get(pageIndex).size.width;
      switch (angle) {
        case C[202] || CT.C202:
        {
          rotatedTextBounds = textBounds;
          break;
        }
        case C[203] || CT.C203:
        {
          rotatedTextBounds = new ui.Rect.fromLTRB(dart.notNull(height) - dart.notNull(textBounds.bottom), textBounds.left, dart.notNull(height) - dart.notNull(textBounds.bottom) + dart.notNull(textBounds.height), dart.notNull(textBounds.left) + dart.notNull(textBounds.width));
          break;
        }
        case C[204] || CT.C204:
        {
          rotatedTextBounds = new ui.Rect.fromLTRB(dart.notNull(width) - dart.notNull(textBounds.right), dart.notNull(height) - dart.notNull(textBounds.bottom), dart.notNull(width) - dart.notNull(textBounds.right) + dart.notNull(textBounds.width), dart.notNull(height) - dart.notNull(textBounds.bottom) + dart.notNull(textBounds.height));
          break;
        }
        case C[205] || CT.C205:
        {
          rotatedTextBounds = new ui.Rect.fromLTRB(textBounds.top, dart.notNull(width) - dart.notNull(textBounds.right), dart.notNull(textBounds.top) + dart.notNull(textBounds.height), dart.notNull(width) - dart.notNull(textBounds.right) + dart.notNull(textBounds.width));
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return rotatedTextBounds;
    }
    enableSelection() {
      if (dart.test(this.enableTextSelection)) {
        if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
          this.clearSelection();
        }
        this[_longPressed] = true;
        pdfviewer_canvas._textSelectionHelper.viewId = this.pageIndex;
        this.markNeedsPaint();
      }
    }
    [_ensureHistoryEntry$]() {
      async.Future.delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
        this.triggerValueCallback();
        if ((!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.isMobileWebView)) && pdfviewer_canvas._textSelectionHelper.historyEntry == null) {
          let route = routes.ModalRoute.of(T.ObjectN(), this.context);
          if (route != null) {
            pdfviewer_canvas._textSelectionHelper.historyEntry = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, _handleHistoryEntryRemoved$)});
            route.addLocalHistoryEntry(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.historyEntry));
          }
        }
      }).bind(this)), T.VoidToFutureOfNull()));
    }
    [_handleHistoryEntryRemoved$]() {
      if (this.textCollection != null && pdfviewer_canvas._textSelectionHelper.historyEntry != null) {
        navigator.Navigator.of(this.context).maybePop(T.ObjectN());
      }
      pdfviewer_canvas._textSelectionHelper.historyEntry = null;
      this.clearSelection();
    }
    clearSelection() {
      this.clearMouseSelection();
      let clearTextSelection = !dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled);
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        pdfviewer_canvas._textSelectionHelper.selectionEnabled = false;
        if ((!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.isMobileWebView)) && pdfviewer_canvas._textSelectionHelper.historyEntry != null && dart.test(navigator.Navigator.canPop(this.context))) {
          pdfviewer_canvas._textSelectionHelper.historyEntry = null;
          navigator.Navigator.of(this.context).maybePop(T.ObjectN());
        }
        this.markNeedsPaint();
        this.triggerNullCallback();
        if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.isMobileWebView)) {
          this.disposeSelection();
        }
      }
      return clearTextSelection;
    }
    disposeSelection() {
      this.disposeMouseSelection();
      pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleX = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleY = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleX = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleY = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleLine = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleLine = null;
      pdfviewer_canvas._textSelectionHelper.heightPercentage = null;
    }
    findTextWhileHover(details) {
      if (details == null) dart.nullFailed(I[6], 980, 39, "details");
      if (pdfviewer_canvas._textSelectionHelper.cursorTextLines == null || pdfviewer_canvas._textSelectionHelper.cursorPageNumber != this.pageIndex) {
        pdfviewer_canvas._textSelectionHelper.cursorPageNumber = this.pageIndex;
        pdfviewer_canvas._textSelectionHelper.cursorTextLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: this.pageIndex});
      }
      let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorPageNumber)).size.height) / dart.notNull(this.height);
      if (pdfviewer_canvas._textSelectionHelper.cursorTextLines != null) {
        for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorTextLines)[$length]); textLineIndex = textLineIndex + 1) {
          if (dart.test(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorTextLines)[$_get](textLineIndex).bounds.contains(details['*'](heightPercentage)))) {
            return dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorTextLines)[$_get](textLineIndex);
          }
        }
      }
      return null;
    }
    findTOC(details) {
      if (details == null) dart.nullFailed(I[6], 1004, 23, "details");
      if (pdfviewer_canvas._textSelectionHelper.cursorPageNumber != this.pageIndex) {
        pdfviewer_canvas._textSelectionHelper.cursorPageNumber = this.pageIndex;
      }
      let page = dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorPageNumber));
      let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorPageNumber)).size.height) / dart.notNull(this.height);
      let hoverDetails = details['*'](heightPercentage);
      for (let index = 0; index < dart.notNull(page.annotations.count); index = index + 1) {
        if (pdf.PdfDocumentLinkAnnotation.is(page.annotations._get(index))) {
          this[_documentLinkAnnotation] = pdf.PdfDocumentLinkAnnotation.as(page.annotations._get(index));
          if (dart.notNull(hoverDetails.dy) >= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.top) && dart.notNull(hoverDetails.dy) <= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.bottom) && dart.notNull(hoverDetails.dx) >= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.left) && dart.notNull(hoverDetails.dx) <= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.right)) {
            return true;
          }
        }
      }
      return false;
    }
    getSelectionDetails() {
      return pdfviewer_canvas._textSelectionHelper;
    }
    clearMouseSelection() {
      if ((!dart.test(pdfviewer_canvas._textSelectionHelper.enableTapSelection) || pdfviewer_canvas._textSelectionHelper.globalSelectedRegion != null && this[_tapDetails] != null && !dart.test(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.globalSelectedRegion).contains(dart.nullCheck(this[_tapDetails])))) && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = false;
        this.markNeedsPaint();
        this.triggerNullCallback();
      } else {
        pdfviewer_canvas._textSelectionHelper.enableTapSelection = false;
      }
    }
    checkGlyphInRegion(textGlyph, startGlyph, details) {
      if (textGlyph == null) dart.nullFailed(I[6], 1053, 17, "textGlyph");
      if (startGlyph == null) dart.nullFailed(I[6], 1053, 38, "startGlyph");
      if (details == null) dart.nullFailed(I[6], 1053, 57, "details");
      let glyphCenterX = textGlyph.bounds.center.dx;
      let glyphCenterY = textGlyph.bounds.center.dy;
      let top = startGlyph.bounds.top;
      let bottom = startGlyph.bounds.bottom;
      if (dart.notNull(glyphCenterY) > dart.notNull(top) && dart.notNull(glyphCenterY) < dart.notNull(details.dy) && (dart.notNull(glyphCenterX) > dart.notNull(startGlyph.bounds.left) || dart.notNull(glyphCenterY) > dart.notNull(bottom)) && (dart.notNull(textGlyph.bounds.bottom) < dart.notNull(details.dy) || dart.notNull(glyphCenterX) < dart.notNull(details.dx))) {
        return true;
      }
      if (dart.notNull(details.dy) < dart.notNull(top) || dart.notNull(details.dy) < dart.notNull(bottom) && dart.notNull(details.dx) < dart.notNull(startGlyph.bounds.left)) {
        if (dart.notNull(glyphCenterY) > dart.notNull(details.dy) && dart.notNull(glyphCenterY) < dart.notNull(bottom) && (dart.notNull(glyphCenterX) > dart.notNull(details.dx) || dart.notNull(textGlyph.bounds.top) > dart.notNull(details.dy)) && (dart.notNull(textGlyph.bounds.bottom) < dart.notNull(top) || dart.notNull(glyphCenterX) < dart.notNull(startGlyph.bounds.left))) {
          return true;
        }
      }
      return false;
    }
    disposeMouseSelection() {
      pdfviewer_canvas._textSelectionHelper.textLines = null;
      pdfviewer_canvas._textSelectionHelper.viewId = null;
      pdfviewer_canvas._textSelectionHelper.copiedText = null;
      pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = null;
    }
    [_drawStartBubble](canvas, bubblePaint, startBubbleOffset) {
      if (canvas == null) dart.nullFailed(I[6], 1085, 14, "canvas");
      if (bubblePaint == null) dart.nullFailed(I[6], 1085, 28, "bubblePaint");
      if (startBubbleOffset == null) dart.nullFailed(I[6], 1085, 48, "startBubbleOffset");
      canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(dart.notNull(startBubbleOffset.dx) - dart.notNull(this[_bubbleSize]) / dart.notNull(this[_zoomPercentage]), startBubbleOffset.dy, startBubbleOffset.dx, dart.notNull(startBubbleOffset.dy) + dart.notNull(this[_bubbleSize]) / dart.notNull(this[_zoomPercentage]), {topLeft: C[206] || CT.C206, topRight: C[207] || CT.C207, bottomRight: C[206] || CT.C206, bottomLeft: C[206] || CT.C206}), bubblePaint);
    }
    [_drawEndBubble](canvas, bubblePaint, endBubbleOffset) {
      if (canvas == null) dart.nullFailed(I[6], 1101, 14, "canvas");
      if (bubblePaint == null) dart.nullFailed(I[6], 1101, 28, "bubblePaint");
      if (endBubbleOffset == null) dart.nullFailed(I[6], 1101, 48, "endBubbleOffset");
      canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(endBubbleOffset.dx, endBubbleOffset.dy, dart.notNull(endBubbleOffset.dx) + dart.notNull(this[_bubbleSize]) / dart.notNull(this[_zoomPercentage]), dart.notNull(endBubbleOffset.dy) + dart.notNull(this[_bubbleSize]) / dart.notNull(this[_zoomPercentage]), {topLeft: C[207] || CT.C207, topRight: C[206] || CT.C206, bottomRight: C[206] || CT.C206, bottomLeft: C[206] || CT.C206}), bubblePaint);
    }
    [_drawTextRect](canvas, textPaint, textRectOffset) {
      if (canvas == null) dart.nullFailed(I[6], 1116, 29, "canvas");
      if (textPaint == null) dart.nullFailed(I[6], 1116, 43, "textPaint");
      if (textRectOffset == null) dart.nullFailed(I[6], 1116, 59, "textRectOffset");
      canvas.drawRect(textRectOffset, textPaint);
    }
    getSelectedTextLines() {
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) || dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        return pdfviewer_canvas._textSelectionHelper.selectedTextLines;
      }
      return null;
    }
    [_performDocumentLinkNavigation](canvas, offset) {
      let t36;
      if (canvas == null) dart.nullFailed(I[6], 1130, 46, "canvas");
      if (offset == null) dart.nullFailed(I[6], 1130, 61, "offset");
      if (this.pageIndex == this[_viewId]) {
        if (dart.test(this[_isTOCTapped])) {
          let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(this[_viewId])).size.height) / dart.notNull(this.height);
          let wordPaint = (t36 = ui.Paint.new(), (() => {
            t36.color = C[208] || CT.C208;
            return t36;
          })());
          canvas.drawRect(offset.translate(dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.left) / heightPercentage, dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.top) / heightPercentage)['&'](new ui.Size.new(dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.width) / heightPercentage, dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.height) / heightPercentage)), wordPaint);
          async.Future.delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
            if (dart.test(this.isSinglePageView)) {
              dart.nullCheck(this.singlePageViewStateKey.currentState).jumpOnZoomedDocument(dart.nullCheck(this[_destinationPageIndex]), new ui.Offset.new(this[_totalPageOffset].dx, this[_totalPageOffset].dy));
            } else {
              this.pdfViewerController.jumpTo({xOffset: this[_totalPageOffset].dx, yOffset: this[_totalPageOffset].dy});
            }
          }).bind(this)), T.VoidToFutureOfNull()));
          this[_isTOCTapped] = false;
        }
      }
    }
    [_performTextSearch](canvas, offset) {
      let t36, t36$;
      if (canvas == null) dart.nullFailed(I[6], 1162, 34, "canvas");
      if (offset == null) dart.nullFailed(I[6], 1162, 49, "offset");
      if (this.textCollection != null && !dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        let searchTextPaint = (t36 = ui.Paint.new(), (() => {
          t36.color = this.searchTextHighlightColor.withOpacity(0.3);
          return t36;
        })());
        let currentInstancePaint = (t36$ = ui.Paint.new(), (() => {
          t36$.color = this.searchTextHighlightColor.withOpacity(0.6);
          return t36$;
        })());
        let _pageNumber = 0;
        for (let i = 0; i < dart.notNull(dart.nullCheck(this.textCollection)[$length]); i = i + 1) {
          let item = dart.nullCheck(this.textCollection)[$_get](i);
          let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(item.pageIndex).size.height) / dart.notNull(this.height);
          if (this.pageIndex == item.pageIndex) {
            canvas.drawRect(offset.translate(dart.notNull(dart.nullCheck(this.textCollection)[$_get](i).bounds.left) / heightPercentage, dart.notNull(dart.nullCheck(this.textCollection)[$_get](i).bounds.top) / heightPercentage)['&'](new ui.Size.new(dart.notNull(dart.nullCheck(this.textCollection)[$_get](i).bounds.width) / heightPercentage, dart.notNull(dart.nullCheck(this.textCollection)[$_get](i).bounds.height) / heightPercentage)), searchTextPaint);
          }
          let matchedItem = dart.nullCheck(this.textCollection)[$_get](dart.notNull(this.pdfTextSearchResult.currentInstanceIndex) - 1);
          if (matchedItem.pageIndex == this.pageIndex) {
            if (dart.notNull(matchedItem.pageIndex) + 1 !== _pageNumber) {
              let bounds = matchedItem.bounds;
              canvas.drawRect(offset.translate(dart.notNull(bounds.left) / heightPercentage, dart.notNull(bounds.top) / heightPercentage)['&'](new ui.Size.new(dart.notNull(bounds.width) / heightPercentage, dart.notNull(bounds.height) / heightPercentage)), currentInstancePaint);
              _pageNumber = dart.notNull(matchedItem.pageIndex) + 1;
            }
          } else if (dart.notNull(item.pageIndex) > dart.notNull(this.pageIndex)) {
            break;
          }
        }
      }
    }
    [_performSelection](canvas, offset, textPaint, bubblePaint) {
      if (canvas == null) dart.nullFailed(I[6], 1204, 14, "canvas");
      if (offset == null) dart.nullFailed(I[6], 1204, 29, "offset");
      if (textPaint == null) dart.nullFailed(I[6], 1204, 43, "textPaint");
      if (bubblePaint == null) dart.nullFailed(I[6], 1204, 60, "bubblePaint");
      if (pdfviewer_canvas._textSelectionHelper.viewId == this.pageIndex) {
        let startGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph);
        let details = new ui.Offset.new(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX), dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY));
        let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height) / dart.notNull(this.height);
        pdfviewer_canvas._textSelectionHelper.heightPercentage = heightPercentage;
        pdfviewer_canvas._textSelectionHelper.copiedText = "";
        pdfviewer_canvas._textSelectionHelper.selectedTextLines[$clear]();
        if (dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
          this[_findStartAndEndIndex](details, heightPercentage, true, {startPoint: startGlyph.bounds});
        }
        for (let textLineIndex = pdfviewer_canvas._textSelectionHelper.startIndex; dart.notNull(textLineIndex) <= dart.notNull(pdfviewer_canvas._textSelectionHelper.endIndex); textLineIndex = dart.notNull(textLineIndex) + 1) {
          let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
          let startPoint = null;
          let endPoint = null;
          let glyphText = "";
          let textWordCollection = line.wordCollection;
          for (let wordIndex = 0; wordIndex < dart.notNull(textWordCollection[$length]); wordIndex = wordIndex + 1) {
            let textWord = textWordCollection[$_get](wordIndex);
            for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
              let glyph = textWord.glyphs[$_get](glyphIndex);
              let canSelectGlyph = this.checkGlyphInRegion(glyph, startGlyph, details);
              if (dart.test(canSelectGlyph)) {
                startPoint == null ? startPoint = glyph.bounds : null;
                endPoint = glyph.bounds;
                glyphText = glyphText + dart.notNull(glyph.text);
                pdfviewer_canvas._textSelectionHelper.copiedText = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.copiedText) + dart.notNull(glyph.text);
                let textRectOffset = offset.translate(dart.notNull(glyph.bounds.left) / heightPercentage, dart.notNull(glyph.bounds.top) / heightPercentage)['&'](new ui.Size.new(dart.notNull(glyph.bounds.width) / heightPercentage, dart.notNull(glyph.bounds.height) / heightPercentage));
                this[_drawTextRect](canvas, textPaint, textRectOffset);
              }
              if (startPoint != null && endPoint != null && dart.equals(glyph, line.wordCollection[$last].glyphs[$last])) {
                pdfviewer_canvas._textSelectionHelper.selectedTextLines[$add](new pdftextline.PdfTextLine.new(new ui.Rect.fromLTRB(startPoint.left, startPoint.top, endPoint.right, endPoint.bottom), glyphText, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)));
                if (dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
                  let startOffset = new ui.Offset.new(dart.notNull(startGlyph.bounds.left) / heightPercentage, dart.notNull(startGlyph.bounds.top) / heightPercentage);
                  let endOffset = new ui.Offset.new(dart.notNull(endPoint.right) / heightPercentage, dart.notNull(endPoint.bottom) / heightPercentage);
                  if (dart.notNull(details.dy) < dart.notNull(startGlyph.bounds.top)) {
                    startOffset = new ui.Offset.new(dart.notNull(details.dx) / heightPercentage, dart.notNull(details.dy) / heightPercentage);
                  }
                  pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(startOffset), this.localToGlobal(endOffset));
                  if (textLineIndex == pdfviewer_canvas._textSelectionHelper.endIndex) {
                    this[_selectTextLinesInRegion](canvas, offset, textPaint, heightPercentage, true, {startPoint: startOffset, endPoint: endPoint});
                  }
                }
              }
            }
          }
        }
        if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
          let startBubbleOffset = offset.translate(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / heightPercentage, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / heightPercentage);
          let endBubbleOffset = offset.translate(dart.notNull(details.dx) / heightPercentage, dart.notNull(details.dy) / heightPercentage);
          this[_drawStartBubble](canvas, bubblePaint, startBubbleOffset);
          this[_drawEndBubble](canvas, bubblePaint, endBubbleOffset);
          pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(new ui.Offset.new(dart.notNull(startGlyph.bounds.left) / heightPercentage, dart.notNull(startGlyph.bounds.top) / heightPercentage)), this.localToGlobal(new ui.Offset.new(dart.notNull(details.dx) / heightPercentage, dart.notNull(details.dy) / heightPercentage)));
          this[_selectTextLinesInRegion](canvas, offset, textPaint, heightPercentage, false);
        }
      }
    }
    [_findStartAndEndIndex](details, heightPercentage, isMouseSelection, opts) {
      if (details == null) dart.nullFailed(I[6], 1301, 14, "details");
      if (heightPercentage == null) dart.nullFailed(I[6], 1301, 30, "heightPercentage");
      if (isMouseSelection == null) dart.nullFailed(I[6], 1301, 53, "isMouseSelection");
      let startPoint = opts && 'startPoint' in opts ? opts.startPoint : C[209] || CT.C209;
      if (startPoint == null) dart.nullFailed(I[6], 1302, 13, "startPoint");
      for (let i = 0; i < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); i = i + 1) {
        let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](i);
        if (!dart.test(isMouseSelection)) {
          if (dart.test(line.bounds.contains(details['*'](heightPercentage)))) {
            if (dart.test(this[_startBubbleDragging]) && i <= dart.notNull(pdfviewer_canvas._textSelectionHelper.endIndex)) {
              pdfviewer_canvas._textSelectionHelper.startIndex = i;
            } else if (dart.test(this[_endBubbleDragging]) && i >= dart.notNull(pdfviewer_canvas._textSelectionHelper.startIndex)) {
              pdfviewer_canvas._textSelectionHelper.endIndex = i;
            }
          }
        } else if ((dart.test(line.bounds.contains(details)) || dart.test(pdfviewer_canvas._textSelectionHelper.isCursorExit) && dart.notNull(details.dy) > dart.notNull(line.bounds.top) / dart.notNull(heightPercentage)) && i <= dart.notNull(pdfviewer_canvas._textSelectionHelper.endIndex) && dart.notNull(details.dy) < dart.notNull(startPoint.top)) {
          pdfviewer_canvas._textSelectionHelper.startIndex = i;
        } else if (dart.test(line.bounds.contains(details)) && i >= dart.notNull(pdfviewer_canvas._textSelectionHelper.startIndex) && dart.notNull(details.dy) > dart.notNull(startPoint.top)) {
          pdfviewer_canvas._textSelectionHelper.endIndex = i;
        }
      }
    }
    [_selectTextLinesInRegion](canvas, offset, textPaint, heightPercentage, isMouseSelection, opts) {
      if (canvas == null) dart.nullFailed(I[6], 1329, 40, "canvas");
      if (offset == null) dart.nullFailed(I[6], 1329, 55, "offset");
      if (textPaint == null) dart.nullFailed(I[6], 1329, 69, "textPaint");
      if (heightPercentage == null) dart.nullFailed(I[6], 1330, 14, "heightPercentage");
      if (isMouseSelection == null) dart.nullFailed(I[6], 1330, 37, "isMouseSelection");
      let startPoint = opts && 'startPoint' in opts ? opts.startPoint : C[210] || CT.C210;
      if (startPoint == null) dart.nullFailed(I[6], 1331, 15, "startPoint");
      let endPoint = opts && 'endPoint' in opts ? opts.endPoint : C[209] || CT.C209;
      if (endPoint == null) dart.nullFailed(I[6], 1331, 46, "endPoint");
      for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); textLineIndex = textLineIndex + 1) {
        let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
        if (textLineIndex < dart.notNull(pdfviewer_canvas._textSelectionHelper.startIndex) || textLineIndex > dart.notNull(pdfviewer_canvas._textSelectionHelper.endIndex)) {
          let left = line.bounds.left;
          let right = line.bounds.right;
          let top = line.bounds.top;
          let bottom = line.bounds.bottom;
          let startGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph).bounds;
          let endOffset = new ui.Offset.new(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX), dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY));
          if (!dart.test(isMouseSelection) && left[$floor]() >= startGlyph.left[$floor]() && top[$floor]() >= startGlyph.top[$floor]() && right[$floor]() <= endOffset.dx[$floor]() && bottom[$floor]() <= endOffset.dy[$floor]() || dart.test(isMouseSelection) && left[$floor]() / dart.notNull(heightPercentage) >= startPoint.dx[$floor]() && top[$floor]() / dart.notNull(heightPercentage) >= startPoint.dy[$floor]() && right[$floor]() <= endPoint.right[$floor]() && bottom[$floor]() <= endPoint.bottom[$floor]()) {
            let lineRectOffset = offset.translate(dart.notNull(left) / dart.notNull(heightPercentage), dart.notNull(top) / dart.notNull(heightPercentage))['&'](new ui.Size.new(dart.notNull(line.bounds.width) / dart.notNull(heightPercentage), dart.notNull(line.bounds.height) / dart.notNull(heightPercentage)));
            this[_drawTextRect](canvas, textPaint, lineRectOffset);
          }
        }
      }
    }
    paint(context, offset) {
      let t36, t36$, t36$0, t36$1, t36$2, t36$3;
      if (context == null) dart.nullFailed(I[6], 1366, 30, "context");
      if (offset == null) dart.nullFailed(I[6], 1366, 46, "offset");
      if (this.pdfDocument == null) {
        return;
      }
      let canvas = context.canvas;
      let theme = theme$.Theme.of(this.context);
      let selectionTheme = text_selection_theme.TextSelectionTheme.of(this.context);
      let cupertinoTheme = theme$0.CupertinoTheme.of(this.context);
      switch (theme.platform) {
        case C[211] || CT.C211:
        case C[212] || CT.C212:
        {
          this[_selectionColor] == null ? this[_selectionColor] = (t36 = selectionTheme.selectionColor, t36 == null ? cupertinoTheme.primaryColor.withOpacity(0.4) : t36) : null;
          this[_selectionHandleColor] == null ? this[_selectionHandleColor] = (t36$ = selectionTheme.selectionHandleColor, t36$ == null ? cupertinoTheme.primaryColor : t36$) : null;
          break;
        }
        case C[213] || CT.C213:
        case C[214] || CT.C214:
        case C[215] || CT.C215:
        case C[216] || CT.C216:
        {
          this[_selectionColor] == null ? this[_selectionColor] = (t36$0 = selectionTheme.selectionColor, t36$0 == null ? theme.colorScheme.primary.withOpacity(0.4) : t36$0) : null;
          this[_selectionHandleColor] == null ? this[_selectionHandleColor] = (t36$1 = selectionTheme.selectionHandleColor, t36$1 == null ? theme.colorScheme.primary : t36$1) : null;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let textPaint = (t36$2 = ui.Paint.new(), (() => {
        t36$2.color = dart.nullCheck(this[_selectionColor]);
        return t36$2;
      })());
      let bubblePaint = (t36$3 = ui.Paint.new(), (() => {
        t36$3.color = dart.nullCheck(this[_selectionHandleColor]);
        return t36$3;
      })());
      this[_zoomPercentage] = dart.notNull(this.pdfViewerController.zoomLevel) > dart.notNull(this[_maximumZoomLevel]) ? this[_maximumZoomLevel] : this.pdfViewerController.zoomLevel;
      this[_performDocumentLinkNavigation](canvas, offset);
      this[_performTextSearch](canvas, offset);
      if (dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) && pdfviewer_canvas._textSelectionHelper.textLines != null && pdfviewer_canvas._textSelectionHelper.endBubbleX != null && pdfviewer_canvas._textSelectionHelper.endBubbleY != null) {
        this[_performSelection](canvas, offset, textPaint, bubblePaint);
      }
      if (dart.test(this[_longPressed])) {
        let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height) / dart.notNull(this.height);
        pdfviewer_canvas._textSelectionHelper.heightPercentage = heightPercentage;
        pdfviewer_canvas._textSelectionHelper.textLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: pdfviewer_canvas._textSelectionHelper.viewId});
        for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); textLineIndex = textLineIndex + 1) {
          let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
          let textWordCollection = line.wordCollection;
          for (let wordIndex = 0; wordIndex < dart.notNull(textWordCollection[$length]); wordIndex = wordIndex + 1) {
            let textWord = textWordCollection[$_get](wordIndex);
            let wordBounds = textWord.bounds;
            if (this[_tapDetails] != null && dart.test(wordBounds.contains(dart.nullCheck(this[_tapDetails])['*'](heightPercentage)))) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
              pdfviewer_canvas._textSelectionHelper.copiedText = textWord.text;
              pdfviewer_canvas._textSelectionHelper.endBubbleLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
              this[_startBubbleTapX] = dart.notNull(textWord.bounds.bottomLeft.dx) / heightPercentage;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = textWord.bounds.bottomLeft.dy;
              this[_endBubbleTapX] = dart.notNull(textWord.bounds.bottomRight.dx) / heightPercentage;
              pdfviewer_canvas._textSelectionHelper.endBubbleY = textWord.bounds.bottomRight.dy;
              pdfviewer_canvas._textSelectionHelper.startBubbleX = textWord.bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.endBubbleX = textWord.bounds.bottomRight.dx;
              let textRectOffset = offset.translate(dart.notNull(textWord.bounds.left) / heightPercentage, dart.notNull(textWord.bounds.top) / heightPercentage)['&'](new ui.Size.new(dart.notNull(wordBounds.width) / heightPercentage, dart.notNull(wordBounds.height) / heightPercentage));
              this[_drawTextRect](canvas, textPaint, textRectOffset);
              let startBubbleOffset = offset.translate(dart.notNull(textWord.bounds.bottomLeft.dx) / heightPercentage, dart.notNull(textWord.bounds.bottomLeft.dy) / heightPercentage);
              let endBubbleOffset = offset.translate(dart.notNull(textWord.bounds.bottomRight.dx) / heightPercentage, dart.notNull(textWord.bounds.bottomRight.dy) / heightPercentage);
              this[_drawStartBubble](canvas, bubblePaint, startBubbleOffset);
              this[_drawEndBubble](canvas, bubblePaint, endBubbleOffset);
              pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(new ui.Offset.new(dart.notNull(textWord.bounds.topLeft.dx) / heightPercentage, dart.notNull(textWord.bounds.topLeft.dy) / heightPercentage)), this.localToGlobal(new ui.Offset.new(dart.notNull(textWord.bounds.bottomRight.dx) / heightPercentage, dart.notNull(textWord.bounds.bottomRight.dy) / heightPercentage)));
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textWord.glyphs[$first];
              pdfviewer_canvas._textSelectionHelper.selectionEnabled = true;
              pdfviewer_canvas._textSelectionHelper.selectedTextLines[$clear]();
              pdfviewer_canvas._textSelectionHelper.selectedTextLines[$add](new pdftextline.PdfTextLine.new(textWord.bounds, textWord.text, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)));
              this[_ensureHistoryEntry$]();
              pdfviewer_canvas._textSelectionHelper.startIndex = textLineIndex;
              pdfviewer_canvas._textSelectionHelper.endIndex = textLineIndex;
            }
          }
        }
        this[_longPressed] = false;
      } else if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) && this.pageIndex == pdfviewer_canvas._textSelectionHelper.viewId) {
        let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height) / dart.notNull(this.height);
        pdfviewer_canvas._textSelectionHelper.heightPercentage = heightPercentage;
        if (this[_dragDetails] != null && pdfviewer_canvas._textSelectionHelper.textLines != null) {
          this[_findStartAndEndIndex](dart.nullCheck(this[_dragDetails]), heightPercentage, false);
        }
        if (dart.test(this[_startBubbleDragging])) {
          for (let textLineIndex = pdfviewer_canvas._textSelectionHelper.startIndex; dart.notNull(textLineIndex) <= dart.notNull(pdfviewer_canvas._textSelectionHelper.endIndex); textLineIndex = dart.notNull(textLineIndex) + 1) {
            let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            if (this[_dragDetails] != null && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) <= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / heightPercentage && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) >= dart.notNull(line.bounds.top) / heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = line;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = line.bounds.bottomLeft.dy;
            }
            if (this[_dragDetails] != null && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = pdfviewer_canvas._textSelectionHelper.endBubbleLine;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom;
            }
            for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$length]); wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                if (dart.notNull(this[_startBubbleTapX]) >= dart.notNull(textGlyph.bounds.bottomLeft.dx) / heightPercentage && dart.notNull(this[_startBubbleTapX]) <= dart.notNull(textGlyph.bounds.bottomRight.dx) / heightPercentage) {
                  pdfviewer_canvas._textSelectionHelper.startBubbleX = textGlyph.bounds.bottomLeft.dx;
                  pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                }
              }
            }
            if (dart.notNull(this[_startBubbleTapX]) < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomLeft.dx) / heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$first].glyphs[$first];
            }
            if (dart.notNull(this[_startBubbleTapX]) >= dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomRight.dx) / heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$last].glyphs[$last].bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$last].glyphs[$last];
            }
            if (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottom) / heightPercentage === dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom) / heightPercentage && dart.notNull(this[_startBubbleTapX]) >= dart.notNull(this[_endBubbleTapX])) {
              for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$length]); wordIndex = wordIndex + 1) {
                let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$_get](wordIndex);
                for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                  let textGlyph = textWord.glyphs[$_get](glyphIndex);
                  if (dart.notNull(textGlyph.bounds.bottomRight.dx) / heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / heightPercentage) {
                    pdfviewer_canvas._textSelectionHelper.startBubbleX = textGlyph.bounds.bottomLeft.dx;
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                    break;
                  }
                }
              }
            }
          }
        } else if (dart.test(this[_endBubbleDragging])) {
          for (let textLineIndex = pdfviewer_canvas._textSelectionHelper.startIndex; dart.notNull(textLineIndex) <= dart.notNull(pdfviewer_canvas._textSelectionHelper.endIndex); textLineIndex = dart.notNull(textLineIndex) + 1) {
            let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            if (this[_dragDetails] != null && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) >= dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.top) / heightPercentage && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) >= dart.notNull(line.bounds.topLeft.dy) / heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.endBubbleLine = line;
              pdfviewer_canvas._textSelectionHelper.endBubbleY = line.bounds.bottomRight.dy;
            }
            for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$length]); wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                if (dart.notNull(this[_endBubbleTapX]) >= dart.notNull(textGlyph.bounds.bottomLeft.dx) / heightPercentage && dart.notNull(this[_endBubbleTapX]) <= dart.notNull(textGlyph.bounds.bottomRight.dx) / heightPercentage) {
                  pdfviewer_canvas._textSelectionHelper.endBubbleX = textGlyph.bounds.bottomRight.dx;
                }
              }
            }
            if (this[_endBubbleTapX][$floor]() > (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomRight.dx) / heightPercentage)[$floor]()) {
              pdfviewer_canvas._textSelectionHelper.endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomRight.dx;
            }
            if (this[_endBubbleTapX][$floor]() <= (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomLeft.dx) / heightPercentage)[$floor]()) {
              pdfviewer_canvas._textSelectionHelper.endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$first].glyphs[$first].bounds.bottomRight.dx;
            }
            if (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom) / heightPercentage === dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottom) / heightPercentage && dart.notNull(this[_endBubbleTapX]) < dart.notNull(this[_startBubbleTapX])) {
              for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$length]); wordIndex = wordIndex + 1) {
                let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$_get](wordIndex);
                for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                  let textGlyph = textWord.glyphs[$_get](glyphIndex);
                  if (dart.notNull(textGlyph.bounds.bottomLeft.dx) / heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / heightPercentage) {
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textGlyph.bounds.bottomRight.dx;
                    break;
                  }
                }
              }
            }
          }
        }
        this[_performSelection](canvas, offset, textPaint, bubblePaint);
      }
    }
  };
  (pdfviewer_canvas.CanvasRenderBox.new = function(height, width, context, pdfDocument, pdfPages, pageIndex, interactionMode, pdfViewerController, enableDocumentLinkNavigation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, textCollection, searchTextHighlightColor, isMobileWebView, pdfTextSearchResult, pdfScrollableStateKey, singlePageViewStateKey, viewportGlobalRect, scrollDirection, isSinglePageView) {
    let t9, t9$, t9$0, t9$1;
    if (height == null) dart.nullFailed(I[6], 161, 12, "height");
    if (width == null) dart.nullFailed(I[6], 162, 12, "width");
    if (context == null) dart.nullFailed(I[6], 163, 12, "context");
    if (pdfPages == null) dart.nullFailed(I[6], 165, 12, "pdfPages");
    if (pageIndex == null) dart.nullFailed(I[6], 166, 12, "pageIndex");
    if (interactionMode == null) dart.nullFailed(I[6], 167, 12, "interactionMode");
    if (pdfViewerController == null) dart.nullFailed(I[6], 168, 12, "pdfViewerController");
    if (enableDocumentLinkNavigation == null) dart.nullFailed(I[6], 169, 12, "enableDocumentLinkNavigation");
    if (enableTextSelection == null) dart.nullFailed(I[6], 170, 12, "enableTextSelection");
    if (onTextSelectionDragStarted == null) dart.nullFailed(I[6], 172, 12, "onTextSelectionDragStarted");
    if (onTextSelectionDragEnded == null) dart.nullFailed(I[6], 173, 12, "onTextSelectionDragEnded");
    if (searchTextHighlightColor == null) dart.nullFailed(I[6], 175, 12, "searchTextHighlightColor");
    if (isMobileWebView == null) dart.nullFailed(I[6], 176, 12, "isMobileWebView");
    if (pdfTextSearchResult == null) dart.nullFailed(I[6], 177, 12, "pdfTextSearchResult");
    if (pdfScrollableStateKey == null) dart.nullFailed(I[6], 178, 12, "pdfScrollableStateKey");
    if (singlePageViewStateKey == null) dart.nullFailed(I[6], 179, 12, "singlePageViewStateKey");
    if (scrollDirection == null) dart.nullFailed(I[6], 181, 12, "scrollDirection");
    if (isSinglePageView == null) dart.nullFailed(I[6], 182, 12, "isSinglePageView");
    this[__CanvasRenderBox_height] = null;
    this[__CanvasRenderBox_height_isSet] = false;
    this[__CanvasRenderBox_width] = null;
    this[__CanvasRenderBox_width_isSet] = false;
    this[__CanvasRenderBox_pageIndex] = null;
    this[__CanvasRenderBox_pageIndex_isSet] = false;
    this[__CanvasRenderBox_pdfDocument] = null;
    this[__CanvasRenderBox_pdfDocument_isSet] = false;
    this[__CanvasRenderBox_context] = null;
    this[__CanvasRenderBox_context_isSet] = false;
    this[__CanvasRenderBox_enableTextSelection] = null;
    this[__CanvasRenderBox_enableTextSelection_isSet] = false;
    this[__CanvasRenderBox_enableDocumentLinkNavigation] = null;
    this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet] = false;
    this[__CanvasRenderBox_pdfPages] = null;
    this[__CanvasRenderBox_pdfPages_isSet] = false;
    this[__CanvasRenderBox_pdfViewerController] = null;
    this[__CanvasRenderBox_pdfViewerController_isSet] = false;
    this[__CanvasRenderBox_onTextSelectionDragStarted] = null;
    this[__CanvasRenderBox_onTextSelectionDragStarted_isSet] = false;
    this[__CanvasRenderBox_onTextSelectionDragEnded] = null;
    this[__CanvasRenderBox_onTextSelectionDragEnded_isSet] = false;
    this[__CanvasRenderBox_onTextSelectionChanged] = null;
    this[__CanvasRenderBox_onTextSelectionChanged_isSet] = false;
    this[__CanvasRenderBox_interactionMode] = null;
    this[__CanvasRenderBox_interactionMode_isSet] = false;
    this[__CanvasRenderBox_searchTextHighlightColor] = null;
    this[__CanvasRenderBox_searchTextHighlightColor_isSet] = false;
    this[__CanvasRenderBox_textCollection] = null;
    this[__CanvasRenderBox_textCollection_isSet] = false;
    this[__CanvasRenderBox_pdfTextSearchResult] = null;
    this[__CanvasRenderBox_pdfTextSearchResult_isSet] = false;
    this[__CanvasRenderBox_isMobileWebView] = null;
    this[__CanvasRenderBox_isMobileWebView_isSet] = false;
    this[__CanvasRenderBox_viewportGlobalRect] = null;
    this[__CanvasRenderBox_viewportGlobalRect_isSet] = false;
    this[__CanvasRenderBox_scrollDirection] = null;
    this[__CanvasRenderBox_scrollDirection_isSet] = false;
    this[__CanvasRenderBox_isSinglePageView] = null;
    this[__CanvasRenderBox_isSinglePageView_isSet] = false;
    this[_viewId] = null;
    this[_destinationPageIndex] = null;
    this[__CanvasRenderBox__totalPageOffset] = null;
    this[__CanvasRenderBox__totalPageOffset_isSet] = false;
    this[_isTOCTapped] = false;
    this[_isMousePointer$] = false;
    this[_startBubbleTapX] = 0.0;
    this[_endBubbleTapX] = 0.0;
    this[_bubbleSize] = 16.0;
    this[_jumpOffset] = 10.0;
    this[_maximumZoomLevel] = 2.0;
    this[_longPressed] = false;
    this[_startBubbleDragging] = false;
    this[_endBubbleDragging] = false;
    this[_zoomPercentage] = 0.0;
    this[_tapDetails] = null;
    this[_dragDetails] = null;
    this[_dragDownDetails] = null;
    this[_selectionColor] = null;
    this[_selectionHandleColor] = null;
    this[__CanvasRenderBox__tapRecognizer] = null;
    this[__CanvasRenderBox__tapRecognizer_isSet] = false;
    this[__CanvasRenderBox__dragRecognizer] = null;
    this[__CanvasRenderBox__dragRecognizer_isSet] = false;
    this[__CanvasRenderBox__longPressRecognizer] = null;
    this[__CanvasRenderBox__longPressRecognizer_isSet] = false;
    this[__CanvasRenderBox__verticalDragRecognizer] = null;
    this[__CanvasRenderBox__verticalDragRecognizer_isSet] = false;
    this[__CanvasRenderBox__documentLinkAnnotation] = null;
    this[__CanvasRenderBox__documentLinkAnnotation_isSet] = false;
    this[__CanvasRenderBox__rotatedAngle] = null;
    this[__CanvasRenderBox__rotatedAngle_isSet] = false;
    this[__CanvasRenderBox_height_isSet] = true;
    this[__CanvasRenderBox_height] = height;
    this[__CanvasRenderBox_width_isSet] = true;
    this[__CanvasRenderBox_width] = width;
    this[__CanvasRenderBox_context_isSet] = true;
    this[__CanvasRenderBox_context] = context;
    this[__CanvasRenderBox_pdfDocument_isSet] = true;
    this[__CanvasRenderBox_pdfDocument] = pdfDocument;
    this[__CanvasRenderBox_pdfPages_isSet] = true;
    this[__CanvasRenderBox_pdfPages] = pdfPages;
    this[__CanvasRenderBox_pageIndex_isSet] = true;
    this[__CanvasRenderBox_pageIndex] = pageIndex;
    this[__CanvasRenderBox_interactionMode_isSet] = true;
    this[__CanvasRenderBox_interactionMode] = interactionMode;
    this[__CanvasRenderBox_pdfViewerController_isSet] = true;
    this[__CanvasRenderBox_pdfViewerController] = pdfViewerController;
    this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet] = true;
    this[__CanvasRenderBox_enableDocumentLinkNavigation] = enableDocumentLinkNavigation;
    this[__CanvasRenderBox_enableTextSelection_isSet] = true;
    this[__CanvasRenderBox_enableTextSelection] = enableTextSelection;
    this[__CanvasRenderBox_onTextSelectionChanged_isSet] = true;
    this[__CanvasRenderBox_onTextSelectionChanged] = onTextSelectionChanged;
    this[__CanvasRenderBox_onTextSelectionDragStarted_isSet] = true;
    this[__CanvasRenderBox_onTextSelectionDragStarted] = onTextSelectionDragStarted;
    this[__CanvasRenderBox_onTextSelectionDragEnded_isSet] = true;
    this[__CanvasRenderBox_onTextSelectionDragEnded] = onTextSelectionDragEnded;
    this[__CanvasRenderBox_textCollection_isSet] = true;
    this[__CanvasRenderBox_textCollection] = textCollection;
    this[__CanvasRenderBox_searchTextHighlightColor_isSet] = true;
    this[__CanvasRenderBox_searchTextHighlightColor] = searchTextHighlightColor;
    this[__CanvasRenderBox_isMobileWebView_isSet] = true;
    this[__CanvasRenderBox_isMobileWebView] = isMobileWebView;
    this[__CanvasRenderBox_pdfTextSearchResult_isSet] = true;
    this[__CanvasRenderBox_pdfTextSearchResult] = pdfTextSearchResult;
    this[pdfScrollableStateKey$0] = pdfScrollableStateKey;
    this[singlePageViewStateKey$0] = singlePageViewStateKey;
    this[__CanvasRenderBox_viewportGlobalRect_isSet] = true;
    this[__CanvasRenderBox_viewportGlobalRect] = viewportGlobalRect;
    this[__CanvasRenderBox_scrollDirection_isSet] = true;
    this[__CanvasRenderBox_scrollDirection] = scrollDirection;
    this[__CanvasRenderBox_isSinglePageView_isSet] = true;
    this[__CanvasRenderBox_isSinglePageView] = isSinglePageView;
    pdfviewer_canvas.CanvasRenderBox.__proto__.new.call(this);
    let team = new team$.GestureArenaTeam.new();
    this[_tapRecognizer] = (t9 = new tap.TapGestureRecognizer.new(), (() => {
      t9.onTapUp = dart.bind(this, 'handleTapUp');
      t9.onTapDown = dart.bind(this, 'handleTapDown');
      return t9;
    })());
    this[_longPressRecognizer] = (t9$ = new long_press.LongPressGestureRecognizer.new(), (() => {
      t9$.onLongPressStart = dart.bind(this, 'handleLongPressStart');
      return t9$;
    })());
    this[_dragRecognizer] = (t9$0 = new monodrag.HorizontalDragGestureRecognizer.new(), (() => {
      t9$0.team = team;
      t9$0.onStart = dart.bind(this, 'handleDragStart');
      t9$0.onUpdate = dart.bind(this, 'handleDragUpdate');
      t9$0.onEnd = dart.bind(this, 'handleDragEnd');
      t9$0.onDown = dart.bind(this, 'handleDragDown');
      return t9$0;
    })());
    this[_verticalDragRecognizer] = (t9$1 = new monodrag.VerticalDragGestureRecognizer.new(), (() => {
      t9$1.team = team;
      t9$1.onStart = dart.bind(this, 'handleDragStart');
      t9$1.onUpdate = dart.bind(this, 'handleDragUpdate');
      t9$1.onEnd = dart.bind(this, 'handleDragEnd');
      t9$1.onDown = dart.bind(this, 'handleDragDown');
      return t9$1;
    })());
  }).prototype = pdfviewer_canvas.CanvasRenderBox.prototype;
  dart.addTypeTests(pdfviewer_canvas.CanvasRenderBox);
  dart.addTypeCaches(pdfviewer_canvas.CanvasRenderBox);
  dart.setMethodSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getMethods(pdfviewer_canvas.CanvasRenderBox.__proto__),
    handleTapDown: dart.fnType(dart.void, [tap.TapDownDetails]),
    handleTapUp: dart.fnType(dart.void, [tap.TapUpDetails]),
    handleLongPressStart: dart.fnType(dart.void, [long_press.LongPressStartDetails]),
    handleDragStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    handleDragUpdate: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    handleDragEnd: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    handleDragDown: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    handleDoubleTapDown: dart.fnType(dart.void, [events.PointerDownEvent]),
    handleTripleTapDown: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_enableMouseSelection]: dart.fnType(dart.void, [dart.dynamic, core.String]),
    [_enableSelection]: dart.fnType(dart.void, [core.String]),
    triggerNullCallback: dart.fnType(dart.void, []),
    triggerValueCallback: dart.fnType(dart.void, []),
    scrollStarted: dart.fnType(dart.void, []),
    scrollEnded: dart.fnType(dart.void, []),
    updateContextMenuPosition: dart.fnType(dart.void, []),
    [_updateSelectionPan]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_scrollWhileSelection]: dart.fnType(dart.void, []),
    scroll: dart.fnType(dart.void, [core.bool, core.bool]),
    [_checkStartBubblePosition]: dart.fnType(core.bool, [ui.Offset]),
    [_checkEndBubblePosition]: dart.fnType(core.bool, [ui.Offset]),
    [_sortTextLines]: dart.fnType(core.List$(pdf.TextLine), [core.List$(pdf.TextLine)]),
    getRotatedOffset: dart.fnType(ui.Offset, [ui.Offset, core.int, pdf.PdfPageRotateAngle]),
    getRotatedTextBounds: dart.fnType(ui.Rect, [ui.Rect, core.int, pdf.PdfPageRotateAngle]),
    enableSelection: dart.fnType(dart.void, []),
    [_ensureHistoryEntry$]: dart.fnType(dart.void, []),
    [_handleHistoryEntryRemoved$]: dart.fnType(dart.void, []),
    clearSelection: dart.fnType(core.bool, []),
    disposeSelection: dart.fnType(dart.void, []),
    findTextWhileHover: dart.fnType(dart.nullable(pdf.TextLine), [ui.Offset]),
    findTOC: dart.fnType(core.bool, [ui.Offset]),
    getSelectionDetails: dart.fnType(pdfviewer_helper.TextSelectionHelper, []),
    clearMouseSelection: dart.fnType(dart.void, []),
    checkGlyphInRegion: dart.fnType(core.bool, [pdf.TextGlyph, pdf.TextGlyph, ui.Offset]),
    disposeMouseSelection: dart.fnType(dart.void, []),
    [_drawStartBubble]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Offset]),
    [_drawEndBubble]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Offset]),
    [_drawTextRect]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Rect]),
    getSelectedTextLines: dart.fnType(dart.nullable(core.List$(pdftextline.PdfTextLine)), []),
    [_performDocumentLinkNavigation]: dart.fnType(dart.void, [ui.Canvas, ui.Offset]),
    [_performTextSearch]: dart.fnType(dart.void, [ui.Canvas, ui.Offset]),
    [_performSelection]: dart.fnType(dart.void, [ui.Canvas, ui.Offset, ui.Paint, ui.Paint]),
    [_findStartAndEndIndex]: dart.fnType(dart.void, [ui.Offset, core.double, core.bool], {startPoint: ui.Rect}, {}),
    [_selectTextLinesInRegion]: dart.fnType(dart.void, [ui.Canvas, ui.Offset, ui.Paint, core.double, core.bool], {endPoint: ui.Rect, startPoint: ui.Offset}, {})
  }));
  dart.setGetterSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getGetters(pdfviewer_canvas.CanvasRenderBox.__proto__),
    height: core.double,
    width: core.double,
    pageIndex: core.int,
    pdfDocument: dart.nullable(pdf.PdfDocument),
    context: framework.BuildContext,
    enableTextSelection: core.bool,
    enableDocumentLinkNavigation: core.bool,
    pdfPages: core.Map$(core.int, pdf_page_view.PdfPageInfo),
    pdfViewerController: pdfviewer.PdfViewerController,
    onTextSelectionDragStarted: dart.fnType(dart.void, []),
    onTextSelectionDragEnded: dart.fnType(dart.void, []),
    onTextSelectionChanged: dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails])),
    interactionMode: enums.PdfInteractionMode,
    searchTextHighlightColor: ui.Color,
    textCollection: dart.nullable(core.List$(pdf.MatchedItem)),
    pdfTextSearchResult: pdfviewer.PdfTextSearchResult,
    isMobileWebView: core.bool,
    viewportGlobalRect: dart.nullable(ui.Rect),
    scrollDirection: enums.PdfScrollDirection,
    isSinglePageView: core.bool,
    [_totalPageOffset]: ui.Offset,
    [_tapRecognizer]: tap.TapGestureRecognizer,
    [_dragRecognizer]: monodrag.HorizontalDragGestureRecognizer,
    [_longPressRecognizer]: long_press.LongPressGestureRecognizer,
    [_verticalDragRecognizer]: monodrag.VerticalDragGestureRecognizer,
    [_documentLinkAnnotation]: dart.nullable(pdf.PdfDocumentLinkAnnotation),
    [_rotatedAngle]: pdf.PdfPageRotateAngle
  }));
  dart.setSetterSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getSetters(pdfviewer_canvas.CanvasRenderBox.__proto__),
    height: core.double,
    width: core.double,
    pageIndex: core.int,
    pdfDocument: dart.nullable(pdf.PdfDocument),
    context: framework.BuildContext,
    enableTextSelection: core.bool,
    enableDocumentLinkNavigation: core.bool,
    pdfPages: core.Map$(core.int, pdf_page_view.PdfPageInfo),
    pdfViewerController: pdfviewer.PdfViewerController,
    onTextSelectionDragStarted: dart.fnType(dart.void, []),
    onTextSelectionDragEnded: dart.fnType(dart.void, []),
    onTextSelectionChanged: dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails])),
    interactionMode: enums.PdfInteractionMode,
    searchTextHighlightColor: ui.Color,
    textCollection: dart.nullable(core.List$(pdf.MatchedItem)),
    pdfTextSearchResult: pdfviewer.PdfTextSearchResult,
    isMobileWebView: core.bool,
    viewportGlobalRect: dart.nullable(ui.Rect),
    scrollDirection: enums.PdfScrollDirection,
    isSinglePageView: core.bool,
    [_totalPageOffset]: ui.Offset,
    [_tapRecognizer]: tap.TapGestureRecognizer,
    [_dragRecognizer]: monodrag.HorizontalDragGestureRecognizer,
    [_longPressRecognizer]: long_press.LongPressGestureRecognizer,
    [_verticalDragRecognizer]: monodrag.VerticalDragGestureRecognizer,
    [_documentLinkAnnotation]: dart.nullable(pdf.PdfDocumentLinkAnnotation)
  }));
  dart.setLibraryUri(pdfviewer_canvas.CanvasRenderBox, I[7]);
  dart.setFieldSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getFields(pdfviewer_canvas.CanvasRenderBox.__proto__),
    [__CanvasRenderBox_height]: dart.fieldType(dart.nullable(core.double)),
    [__CanvasRenderBox_height_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_width]: dart.fieldType(dart.nullable(core.double)),
    [__CanvasRenderBox_width_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pageIndex]: dart.fieldType(dart.nullable(core.int)),
    [__CanvasRenderBox_pageIndex_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfDocument]: dart.fieldType(dart.nullable(pdf.PdfDocument)),
    [__CanvasRenderBox_pdfDocument_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_context]: dart.fieldType(dart.nullable(framework.BuildContext)),
    [__CanvasRenderBox_context_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_enableTextSelection]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_enableTextSelection_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_enableDocumentLinkNavigation]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_enableDocumentLinkNavigation_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfPages]: dart.fieldType(dart.nullable(core.Map$(core.int, pdf_page_view.PdfPageInfo))),
    [__CanvasRenderBox_pdfPages_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfViewerController]: dart.fieldType(dart.nullable(pdfviewer.PdfViewerController)),
    [__CanvasRenderBox_pdfViewerController_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_onTextSelectionDragStarted]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    [__CanvasRenderBox_onTextSelectionDragStarted_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_onTextSelectionDragEnded]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    [__CanvasRenderBox_onTextSelectionDragEnded_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_onTextSelectionChanged]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    [__CanvasRenderBox_onTextSelectionChanged_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_interactionMode]: dart.fieldType(dart.nullable(enums.PdfInteractionMode)),
    [__CanvasRenderBox_interactionMode_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_searchTextHighlightColor]: dart.fieldType(dart.nullable(ui.Color)),
    [__CanvasRenderBox_searchTextHighlightColor_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_textCollection]: dart.fieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    [__CanvasRenderBox_textCollection_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfTextSearchResult]: dart.fieldType(dart.nullable(pdfviewer.PdfTextSearchResult)),
    [__CanvasRenderBox_pdfTextSearchResult_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_isMobileWebView]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_isMobileWebView_isSet]: dart.fieldType(core.bool),
    pdfScrollableStateKey: dart.finalFieldType(framework.GlobalKey$(pdf_scrollable.PdfScrollableState)),
    singlePageViewStateKey: dart.finalFieldType(framework.GlobalKey$(single_page_view.SinglePageViewState)),
    [__CanvasRenderBox_viewportGlobalRect]: dart.fieldType(dart.nullable(ui.Rect)),
    [__CanvasRenderBox_viewportGlobalRect_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_scrollDirection]: dart.fieldType(dart.nullable(enums.PdfScrollDirection)),
    [__CanvasRenderBox_scrollDirection_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_isSinglePageView]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_isSinglePageView_isSet]: dart.fieldType(core.bool),
    [_viewId]: dart.fieldType(dart.nullable(core.int)),
    [_destinationPageIndex]: dart.fieldType(dart.nullable(core.int)),
    [__CanvasRenderBox__totalPageOffset]: dart.fieldType(dart.nullable(ui.Offset)),
    [__CanvasRenderBox__totalPageOffset_isSet]: dart.fieldType(core.bool),
    [_isTOCTapped]: dart.fieldType(core.bool),
    [_isMousePointer$]: dart.fieldType(core.bool),
    [_startBubbleTapX]: dart.fieldType(core.double),
    [_endBubbleTapX]: dart.fieldType(core.double),
    [_bubbleSize]: dart.finalFieldType(core.double),
    [_jumpOffset]: dart.finalFieldType(core.double),
    [_maximumZoomLevel]: dart.finalFieldType(core.double),
    [_longPressed]: dart.fieldType(core.bool),
    [_startBubbleDragging]: dart.fieldType(core.bool),
    [_endBubbleDragging]: dart.fieldType(core.bool),
    [_zoomPercentage]: dart.fieldType(core.double),
    [_tapDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_dragDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_dragDownDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_selectionColor]: dart.fieldType(dart.nullable(ui.Color)),
    [_selectionHandleColor]: dart.fieldType(dart.nullable(ui.Color)),
    [__CanvasRenderBox__tapRecognizer]: dart.fieldType(dart.nullable(tap.TapGestureRecognizer)),
    [__CanvasRenderBox__tapRecognizer_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__dragRecognizer]: dart.fieldType(dart.nullable(monodrag.HorizontalDragGestureRecognizer)),
    [__CanvasRenderBox__dragRecognizer_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__longPressRecognizer]: dart.fieldType(dart.nullable(long_press.LongPressGestureRecognizer)),
    [__CanvasRenderBox__longPressRecognizer_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__verticalDragRecognizer]: dart.fieldType(dart.nullable(monodrag.VerticalDragGestureRecognizer)),
    [__CanvasRenderBox__verticalDragRecognizer_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__documentLinkAnnotation]: dart.fieldType(dart.nullable(pdf.PdfDocumentLinkAnnotation)),
    [__CanvasRenderBox__documentLinkAnnotation_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__rotatedAngle]: dart.fieldType(dart.nullable(pdf.PdfPageRotateAngle)),
    [__CanvasRenderBox__rotatedAngle_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(pdfviewer_canvas, {
    /*pdfviewer_canvas._textSelectionHelper*/get _textSelectionHelper() {
      return new pdfviewer_helper.TextSelectionHelper.new();
    },
    set _textSelectionHelper(_) {}
  }, false);
  var pdfViewerController$1 = dart.privateName(scroll_status, "ScrollStatus.pdfViewerController");
  var isSinglePageView$0 = dart.privateName(scroll_status, "ScrollStatus.isSinglePageView");
  scroll_status.ScrollStatus = class ScrollStatus extends framework.StatefulWidget {
    get pdfViewerController() {
      return this[pdfViewerController$1];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isSinglePageView() {
      return this[isSinglePageView$0];
    }
    set isSinglePageView(value) {
      super.isSinglePageView = value;
    }
    createState() {
      return new scroll_status._ScrollStatusState.new();
    }
  };
  (scroll_status.ScrollStatus.new = function(pdfViewerController, opts) {
    if (pdfViewerController == null) dart.nullFailed(I[8], 13, 27, "pdfViewerController");
    let isSinglePageView = opts && 'isSinglePageView' in opts ? opts.isSinglePageView : false;
    if (isSinglePageView == null) dart.nullFailed(I[8], 13, 54, "isSinglePageView");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pdfViewerController$1] = pdfViewerController;
    this[isSinglePageView$0] = isSinglePageView;
    scroll_status.ScrollStatus.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_status.ScrollStatus.prototype;
  dart.addTypeTests(scroll_status.ScrollStatus);
  dart.addTypeCaches(scroll_status.ScrollStatus);
  dart.setMethodSignature(scroll_status.ScrollStatus, () => ({
    __proto__: dart.getMethods(scroll_status.ScrollStatus.__proto__),
    createState: dart.fnType(scroll_status._ScrollStatusState, [])
  }));
  dart.setLibraryUri(scroll_status.ScrollStatus, I[9]);
  dart.setFieldSignature(scroll_status.ScrollStatus, () => ({
    __proto__: dart.getFields(scroll_status.ScrollStatus.__proto__),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isSinglePageView: dart.finalFieldType(core.bool)
  }));
  var _pdfViewerThemeData$0 = dart.privateName(scroll_status, "_pdfViewerThemeData");
  var _localizations$0 = dart.privateName(scroll_status, "_localizations");
  scroll_status._ScrollStatusState = class _ScrollStatusState extends framework.State$(scroll_status.ScrollStatus) {
    didChangeDependencies() {
      this[_pdfViewerThemeData$0] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations$0] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$0] = null;
      this[_localizations$0] = null;
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[8], 45, 29, "context");
      return new basic.Positioned.fill({bottom: 25, child: new basic.Align.new({alignment: alignment$.Alignment.bottomCenter, child: new basic.Flex.new({direction: basic_types.Axis.horizontal, mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[217] || CT.C217, constraints: new box.BoxConstraints.new({maxWidth: dart.notNull(media_query.MediaQuery.of(context).size.width) * 0.7}), decoration: new box_decoration.BoxDecoration.new({color: dart.nullCheck(this[_pdfViewerThemeData$0]).scrollStatusStyle.backgroundColor, borderRadius: C[218] || CT.C218}), child: new text.Text.new(dart.str(this.widget.pdfViewerController.pageNumber) + " " + dart.str(dart.nullCheck(this[_localizations$0]).pdfScrollStatusOfLabel) + " " + dart.str(this.widget.pdfViewerController.pageCount), {textAlign: ui.TextAlign.center, style: dart.nullCheck(this[_pdfViewerThemeData$0]).scrollStatusStyle.pageInfoTextStyle, $creationLocationd_0dea112b090073317d4: C[220] || CT.C220}), $creationLocationd_0dea112b090073317d4: C[225] || CT.C225})]), $creationLocationd_0dea112b090073317d4: C[231] || CT.C231}), $creationLocationd_0dea112b090073317d4: C[236] || CT.C236}), $creationLocationd_0dea112b090073317d4: C[240] || CT.C240});
    }
  };
  (scroll_status._ScrollStatusState.new = function() {
    this[_pdfViewerThemeData$0] = null;
    this[_localizations$0] = null;
    scroll_status._ScrollStatusState.__proto__.new.call(this);
    ;
  }).prototype = scroll_status._ScrollStatusState.prototype;
  dart.addTypeTests(scroll_status._ScrollStatusState);
  dart.addTypeCaches(scroll_status._ScrollStatusState);
  dart.setMethodSignature(scroll_status._ScrollStatusState, () => ({
    __proto__: dart.getMethods(scroll_status._ScrollStatusState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_status._ScrollStatusState, I[9]);
  dart.setFieldSignature(scroll_status._ScrollStatusState, () => ({
    __proto__: dart.getFields(scroll_status._ScrollStatusState.__proto__),
    [_pdfViewerThemeData$0]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations$0]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations))
  }));
  dart.defineLazy(scroll_status, {
    /*scroll_status._kPdfScrollStatusBottomPosition*/get _kPdfScrollStatusBottomPosition() {
      return 25;
    }
  }, false);
  var scrollHeadOffset$ = dart.privateName(scroll_head, "ScrollHead.scrollHeadOffset");
  var pdfViewerController$2 = dart.privateName(scroll_head, "ScrollHead.pdfViewerController");
  var isMobileWebView$1 = dart.privateName(scroll_head, "ScrollHead.isMobileWebView");
  var scrollDirection$0 = dart.privateName(scroll_head, "ScrollHead.scrollDirection");
  var canShowHorizontalScrollBar$ = dart.privateName(scroll_head, "ScrollHead.canShowHorizontalScrollBar");
  var canShowVerticalScrollBar$ = dart.privateName(scroll_head, "ScrollHead.canShowVerticalScrollBar");
  var isBookmarkViewOpen$0 = dart.privateName(scroll_head, "ScrollHead.isBookmarkViewOpen");
  var pageLayoutMode$ = dart.privateName(scroll_head, "ScrollHead.pageLayoutMode");
  scroll_head.ScrollHead = class ScrollHead extends framework.StatefulWidget {
    get scrollHeadOffset() {
      return this[scrollHeadOffset$];
    }
    set scrollHeadOffset(value) {
      super.scrollHeadOffset = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$2];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$1];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get scrollDirection() {
      return this[scrollDirection$0];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get canShowHorizontalScrollBar() {
      return this[canShowHorizontalScrollBar$];
    }
    set canShowHorizontalScrollBar(value) {
      super.canShowHorizontalScrollBar = value;
    }
    get canShowVerticalScrollBar() {
      return this[canShowVerticalScrollBar$];
    }
    set canShowVerticalScrollBar(value) {
      super.canShowVerticalScrollBar = value;
    }
    get isBookmarkViewOpen() {
      return this[isBookmarkViewOpen$0];
    }
    set isBookmarkViewOpen(value) {
      super.isBookmarkViewOpen = value;
    }
    get pageLayoutMode() {
      return this[pageLayoutMode$];
    }
    set pageLayoutMode(value) {
      super.pageLayoutMode = value;
    }
    createState() {
      return new scroll_head._ScrollHeadState.new();
    }
  };
  (scroll_head.ScrollHead.new = function(canShowHorizontalScrollBar, canShowVerticalScrollBar, scrollHeadOffset, pdfViewerController, isMobileWebView, scrollDirection, isBookmarkViewOpen, pageLayoutMode, opts) {
    if (canShowHorizontalScrollBar == null) dart.nullFailed(I[10], 19, 12, "canShowHorizontalScrollBar");
    if (canShowVerticalScrollBar == null) dart.nullFailed(I[10], 20, 12, "canShowVerticalScrollBar");
    if (scrollHeadOffset == null) dart.nullFailed(I[10], 21, 12, "scrollHeadOffset");
    if (pdfViewerController == null) dart.nullFailed(I[10], 22, 12, "pdfViewerController");
    if (isMobileWebView == null) dart.nullFailed(I[10], 23, 12, "isMobileWebView");
    if (scrollDirection == null) dart.nullFailed(I[10], 24, 12, "scrollDirection");
    if (isBookmarkViewOpen == null) dart.nullFailed(I[10], 25, 12, "isBookmarkViewOpen");
    if (pageLayoutMode == null) dart.nullFailed(I[10], 26, 12, "pageLayoutMode");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowHorizontalScrollBar$] = canShowHorizontalScrollBar;
    this[canShowVerticalScrollBar$] = canShowVerticalScrollBar;
    this[scrollHeadOffset$] = scrollHeadOffset;
    this[pdfViewerController$2] = pdfViewerController;
    this[isMobileWebView$1] = isMobileWebView;
    this[scrollDirection$0] = scrollDirection;
    this[isBookmarkViewOpen$0] = isBookmarkViewOpen;
    this[pageLayoutMode$] = pageLayoutMode;
    scroll_head.ScrollHead.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_head.ScrollHead.prototype;
  dart.addTypeTests(scroll_head.ScrollHead);
  dart.addTypeCaches(scroll_head.ScrollHead);
  dart.setMethodSignature(scroll_head.ScrollHead, () => ({
    __proto__: dart.getMethods(scroll_head.ScrollHead.__proto__),
    createState: dart.fnType(scroll_head._ScrollHeadState, [])
  }));
  dart.setLibraryUri(scroll_head.ScrollHead, I[11]);
  dart.setFieldSignature(scroll_head.ScrollHead, () => ({
    __proto__: dart.getFields(scroll_head.ScrollHead.__proto__),
    scrollHeadOffset: dart.finalFieldType(ui.Offset),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isMobileWebView: dart.finalFieldType(core.bool),
    scrollDirection: dart.finalFieldType(enums.PdfScrollDirection),
    canShowHorizontalScrollBar: dart.finalFieldType(core.bool),
    canShowVerticalScrollBar: dart.finalFieldType(core.bool),
    isBookmarkViewOpen: dart.finalFieldType(core.bool),
    pageLayoutMode: dart.finalFieldType(enums.PdfPageLayoutMode)
  }));
  var _pdfViewerThemeData$1 = dart.privateName(scroll_head, "_pdfViewerThemeData");
  var _createScrollBar = dart.privateName(scroll_head, "_createScrollBar");
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var BoxConstraints_maxHeight = dart.privateName(box, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box, "BoxConstraints.minWidth");
  scroll_head._ScrollHeadState = class _ScrollHeadState extends framework.State$(scroll_head.ScrollHead) {
    didChangeDependencies() {
      this[_pdfViewerThemeData$1] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$1] = null;
      super.dispose();
    }
    [_createScrollBar](visible, alignment, edgeInsets, size) {
      if (visible == null) dart.nullFailed(I[10], 74, 12, "visible");
      if (alignment == null) dart.nullFailed(I[10], 74, 31, "alignment");
      if (edgeInsets == null) dart.nullFailed(I[10], 74, 53, "edgeInsets");
      if (size == null) dart.nullFailed(I[10], 74, 70, "size");
      return new visibility.Visibility.new({visible: visible, child: new container.Container.new({alignment: alignment, margin: edgeInsets, child: new material.Material.new({color: colors.Colors.grey, borderRadius: C[244] || CT.C244, child: new container.Container.new({constraints: new box.BoxConstraints.tight(size), $creationLocationd_0dea112b090073317d4: C[246] || CT.C246}), $creationLocationd_0dea112b090073317d4: C[249] || CT.C249}), $creationLocationd_0dea112b090073317d4: C[254] || CT.C254}), $creationLocationd_0dea112b090073317d4: C[259] || CT.C259});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[10], 94, 29, "context");
      if (dart.test(pdfviewer_helper.kIsDesktop)) {
        let verticalScrollBar = this[_createScrollBar](this.widget.canShowVerticalScrollBar, alignment$.Alignment.topRight, new edge_insets.EdgeInsets.only({top: this.widget.scrollHeadOffset.dy}), C[263] || CT.C263);
        let horizontalScrollBar = this[_createScrollBar](this.widget.canShowHorizontalScrollBar, alignment$.Alignment.bottomLeft, new edge_insets.EdgeInsets.only({left: this.widget.scrollHeadOffset.dx}), C[264] || CT.C264);
        if (this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
          return new basic.Stack.new({children: T.JSArrayOfWidget().of([verticalScrollBar, horizontalScrollBar]), $creationLocationd_0dea112b090073317d4: C[265] || CT.C265});
        } else if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
          return horizontalScrollBar;
        } else {
          return verticalScrollBar;
        }
      }
      let boxShadows = C[268] || CT.C268;
      let edgeInsets = this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? new edge_insets.EdgeInsets.only({left: this.widget.scrollHeadOffset.dx}) : new edge_insets.EdgeInsets.only({top: this.widget.scrollHeadOffset.dy});
      let borderRadius = this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? C[277] || CT.C277 : C[280] || CT.C280;
      let alignment = this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? alignment$.Alignment.bottomLeft : alignment$.Alignment.topRight;
      return new basic.Align.new({alignment: alignment, child: new container.Container.new({alignment: alignment, margin: edgeInsets, constraints: C[281] || CT.C281, child: new basic.Semantics.new({container: true, button: true, child: new basic.Align.new({alignment: this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? alignment$.Alignment.bottomCenter : alignment$.Alignment.centerRight, child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: dart.nullCheck(this[_pdfViewerThemeData$1]).scrollHeadStyle.backgroundColor, borderRadius: borderRadius, boxShadow: boxShadows}), constraints: C[282] || CT.C282, child: new basic.Align.new({alignment: alignment$.Alignment.center, child: new text.Text.new(dart.str(this.widget.pdfViewerController.pageNumber), {style: dart.nullCheck(this[_pdfViewerThemeData$1]).scrollHeadStyle.pageNumberTextStyle, semanticsLabel: dart.test(this.widget.isBookmarkViewOpen) ? "" : dart.toString(this.widget.pdfViewerController.pageNumber), $creationLocationd_0dea112b090073317d4: C[283] || CT.C283}), $creationLocationd_0dea112b090073317d4: C[288] || CT.C288}), $creationLocationd_0dea112b090073317d4: C[292] || CT.C292}), $creationLocationd_0dea112b090073317d4: C[297] || CT.C297}), $creationLocationd_0dea112b090073317d4: C[301] || CT.C301}), $creationLocationd_0dea112b090073317d4: C[306] || CT.C306}), $creationLocationd_0dea112b090073317d4: C[312] || CT.C312});
    }
  };
  (scroll_head._ScrollHeadState.new = function() {
    this[_pdfViewerThemeData$1] = null;
    scroll_head._ScrollHeadState.__proto__.new.call(this);
    ;
  }).prototype = scroll_head._ScrollHeadState.prototype;
  dart.addTypeTests(scroll_head._ScrollHeadState);
  dart.addTypeCaches(scroll_head._ScrollHeadState);
  dart.setMethodSignature(scroll_head._ScrollHeadState, () => ({
    __proto__: dart.getMethods(scroll_head._ScrollHeadState.__proto__),
    [_createScrollBar]: dart.fnType(framework.Widget, [core.bool, alignment$.Alignment, edge_insets.EdgeInsets, ui.Size]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_head._ScrollHeadState, I[11]);
  dart.setFieldSignature(scroll_head._ScrollHeadState, () => ({
    __proto__: dart.getFields(scroll_head._ScrollHeadState.__proto__),
    [_pdfViewerThemeData$1]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData))
  }));
  dart.defineLazy(scroll_head, {
    /*scroll_head.kPdfScrollHeadHeight*/get kPdfScrollHeadHeight() {
      return 32;
    }
  }, false);
  var canShowPaginationDialog$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.canShowPaginationDialog");
  var canShowScrollHead$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.canShowScrollHead");
  var canShowScrollStatus$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.canShowScrollStatus");
  var enableDoubleTapZooming$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.enableDoubleTapZooming");
  var pdfViewerController$3 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.pdfViewerController");
  var isMobileWebView$2 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.isMobileWebView");
  var child$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.child");
  var transformationController$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.transformationController");
  var onInteractionStart$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onInteractionStart");
  var onInteractionUpdate$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onInteractionUpdate");
  var onInteractionEnd$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onInteractionEnd");
  var pdfDimension$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.pdfDimension");
  var viewportDimension$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.viewportDimension");
  var currentOffset$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.currentOffset");
  var isPanEnabled$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.isPanEnabled");
  var maxScale$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.maxScale");
  var minScale$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.minScale");
  var onPdfOffsetChanged$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onPdfOffsetChanged");
  var onDoubleTapZoomInvoked$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onDoubleTapZoomInvoked");
  var interactionMode$1 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.interactionMode");
  var scaleEnabled$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.scaleEnabled");
  var maxPdfPageWidth$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.maxPdfPageWidth");
  var scrollDirection$1 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.scrollDirection");
  var pdfPages$1 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.pdfPages");
  var totalImageSize$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.totalImageSize");
  var isBookmarkViewOpen$1 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.isBookmarkViewOpen");
  scroll_head_overlay.ScrollHeadOverlay = class ScrollHeadOverlay extends framework.StatefulWidget {
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$0];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$0];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get canShowScrollStatus() {
      return this[canShowScrollStatus$0];
    }
    set canShowScrollStatus(value) {
      super.canShowScrollStatus = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$0];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$3];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$2];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get transformationController() {
      return this[transformationController$];
    }
    set transformationController(value) {
      super.transformationController = value;
    }
    get onInteractionStart() {
      return this[onInteractionStart$];
    }
    set onInteractionStart(value) {
      super.onInteractionStart = value;
    }
    get onInteractionUpdate() {
      return this[onInteractionUpdate$];
    }
    set onInteractionUpdate(value) {
      super.onInteractionUpdate = value;
    }
    get onInteractionEnd() {
      return this[onInteractionEnd$];
    }
    set onInteractionEnd(value) {
      super.onInteractionEnd = value;
    }
    get pdfDimension() {
      return this[pdfDimension$];
    }
    set pdfDimension(value) {
      super.pdfDimension = value;
    }
    get viewportDimension() {
      return this[viewportDimension$0];
    }
    set viewportDimension(value) {
      super.viewportDimension = value;
    }
    get currentOffset() {
      return this[currentOffset$];
    }
    set currentOffset(value) {
      super.currentOffset = value;
    }
    get isPanEnabled() {
      return this[isPanEnabled$];
    }
    set isPanEnabled(value) {
      super.isPanEnabled = value;
    }
    get maxScale() {
      return this[maxScale$];
    }
    set maxScale(value) {
      super.maxScale = value;
    }
    get minScale() {
      return this[minScale$];
    }
    set minScale(value) {
      super.minScale = value;
    }
    get onPdfOffsetChanged() {
      return this[onPdfOffsetChanged$0];
    }
    set onPdfOffsetChanged(value) {
      super.onPdfOffsetChanged = value;
    }
    get onDoubleTapZoomInvoked() {
      return this[onDoubleTapZoomInvoked$];
    }
    set onDoubleTapZoomInvoked(value) {
      super.onDoubleTapZoomInvoked = value;
    }
    get interactionMode() {
      return this[interactionMode$1];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get scaleEnabled() {
      return this[scaleEnabled$0];
    }
    set scaleEnabled(value) {
      super.scaleEnabled = value;
    }
    get maxPdfPageWidth() {
      return this[maxPdfPageWidth$];
    }
    set maxPdfPageWidth(value) {
      super.maxPdfPageWidth = value;
    }
    get scrollDirection() {
      return this[scrollDirection$1];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get pdfPages() {
      return this[pdfPages$1];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get totalImageSize() {
      return this[totalImageSize$];
    }
    set totalImageSize(value) {
      super.totalImageSize = value;
    }
    get isBookmarkViewOpen() {
      return this[isBookmarkViewOpen$1];
    }
    set isBookmarkViewOpen(value) {
      super.isBookmarkViewOpen = value;
    }
    createState() {
      return new scroll_head_overlay.ScrollHeadOverlayState.new();
    }
  };
  (scroll_head_overlay.ScrollHeadOverlay.new = function(canShowPaginationDialog, canShowScrollStatus, canShowScrollHead, pdfViewerController, isMobileWebView, pdfDimension, totalImageSize, viewportDimension, currentOffset, maxScale, minScale, onDoubleTapZoomInvoked, enableDoubleTapZooming, interactionMode, scaleEnabled, maxPdfPageWidth, pdfPages, scrollDirection, isBookmarkViewOpen, child, opts) {
    if (canShowPaginationDialog == null) dart.nullFailed(I[12], 29, 12, "canShowPaginationDialog");
    if (canShowScrollStatus == null) dart.nullFailed(I[12], 30, 12, "canShowScrollStatus");
    if (canShowScrollHead == null) dart.nullFailed(I[12], 31, 12, "canShowScrollHead");
    if (pdfViewerController == null) dart.nullFailed(I[12], 32, 12, "pdfViewerController");
    if (isMobileWebView == null) dart.nullFailed(I[12], 33, 12, "isMobileWebView");
    if (pdfDimension == null) dart.nullFailed(I[12], 34, 12, "pdfDimension");
    if (totalImageSize == null) dart.nullFailed(I[12], 35, 12, "totalImageSize");
    if (viewportDimension == null) dart.nullFailed(I[12], 36, 12, "viewportDimension");
    if (currentOffset == null) dart.nullFailed(I[12], 37, 12, "currentOffset");
    if (maxScale == null) dart.nullFailed(I[12], 38, 12, "maxScale");
    if (minScale == null) dart.nullFailed(I[12], 39, 12, "minScale");
    if (onDoubleTapZoomInvoked == null) dart.nullFailed(I[12], 40, 12, "onDoubleTapZoomInvoked");
    if (enableDoubleTapZooming == null) dart.nullFailed(I[12], 41, 12, "enableDoubleTapZooming");
    if (interactionMode == null) dart.nullFailed(I[12], 42, 12, "interactionMode");
    if (scaleEnabled == null) dart.nullFailed(I[12], 43, 12, "scaleEnabled");
    if (maxPdfPageWidth == null) dart.nullFailed(I[12], 44, 12, "maxPdfPageWidth");
    if (pdfPages == null) dart.nullFailed(I[12], 45, 12, "pdfPages");
    if (scrollDirection == null) dart.nullFailed(I[12], 46, 12, "scrollDirection");
    if (isBookmarkViewOpen == null) dart.nullFailed(I[12], 47, 12, "isBookmarkViewOpen");
    if (child == null) dart.nullFailed(I[12], 48, 12, "child");
    let key = opts && 'key' in opts ? opts.key : null;
    let transformationController = opts && 'transformationController' in opts ? opts.transformationController : null;
    let onInteractionStart = opts && 'onInteractionStart' in opts ? opts.onInteractionStart : null;
    let onInteractionUpdate = opts && 'onInteractionUpdate' in opts ? opts.onInteractionUpdate : null;
    let onInteractionEnd = opts && 'onInteractionEnd' in opts ? opts.onInteractionEnd : null;
    let onPdfOffsetChanged = opts && 'onPdfOffsetChanged' in opts ? opts.onPdfOffsetChanged : null;
    let isPanEnabled = opts && 'isPanEnabled' in opts ? opts.isPanEnabled : true;
    if (isPanEnabled == null) dart.nullFailed(I[12], 55, 12, "isPanEnabled");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowPaginationDialog$0] = canShowPaginationDialog;
    this[canShowScrollStatus$0] = canShowScrollStatus;
    this[canShowScrollHead$0] = canShowScrollHead;
    this[pdfViewerController$3] = pdfViewerController;
    this[isMobileWebView$2] = isMobileWebView;
    this[pdfDimension$] = pdfDimension;
    this[totalImageSize$] = totalImageSize;
    this[viewportDimension$0] = viewportDimension;
    this[currentOffset$] = currentOffset;
    this[maxScale$] = maxScale;
    this[minScale$] = minScale;
    this[onDoubleTapZoomInvoked$] = onDoubleTapZoomInvoked;
    this[enableDoubleTapZooming$0] = enableDoubleTapZooming;
    this[interactionMode$1] = interactionMode;
    this[scaleEnabled$0] = scaleEnabled;
    this[maxPdfPageWidth$] = maxPdfPageWidth;
    this[pdfPages$1] = pdfPages;
    this[scrollDirection$1] = scrollDirection;
    this[isBookmarkViewOpen$1] = isBookmarkViewOpen;
    this[child$] = child;
    this[transformationController$] = transformationController;
    this[onInteractionStart$] = onInteractionStart;
    this[onInteractionUpdate$] = onInteractionUpdate;
    this[onInteractionEnd$] = onInteractionEnd;
    this[onPdfOffsetChanged$0] = onPdfOffsetChanged;
    this[isPanEnabled$] = isPanEnabled;
    scroll_head_overlay.ScrollHeadOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_head_overlay.ScrollHeadOverlay.prototype;
  dart.addTypeTests(scroll_head_overlay.ScrollHeadOverlay);
  dart.addTypeCaches(scroll_head_overlay.ScrollHeadOverlay);
  dart.setMethodSignature(scroll_head_overlay.ScrollHeadOverlay, () => ({
    __proto__: dart.getMethods(scroll_head_overlay.ScrollHeadOverlay.__proto__),
    createState: dart.fnType(scroll_head_overlay.ScrollHeadOverlayState, [])
  }));
  dart.setLibraryUri(scroll_head_overlay.ScrollHeadOverlay, I[13]);
  dart.setFieldSignature(scroll_head_overlay.ScrollHeadOverlay, () => ({
    __proto__: dart.getFields(scroll_head_overlay.ScrollHeadOverlay.__proto__),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    canShowScrollHead: dart.finalFieldType(core.bool),
    canShowScrollStatus: dart.finalFieldType(core.bool),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isMobileWebView: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget),
    transformationController: dart.finalFieldType(dart.nullable(interactive_viewer.TransformationController)),
    onInteractionStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleStartDetails]))),
    onInteractionUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleUpdateDetails]))),
    onInteractionEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [scale.ScaleEndDetails]))),
    pdfDimension: dart.finalFieldType(ui.Size),
    viewportDimension: dart.finalFieldType(ui.Size),
    currentOffset: dart.finalFieldType(ui.Offset),
    isPanEnabled: dart.finalFieldType(core.bool),
    maxScale: dart.finalFieldType(core.double),
    minScale: dart.finalFieldType(core.double),
    onPdfOffsetChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [ui.Offset]))),
    onDoubleTapZoomInvoked: dart.finalFieldType(dart.fnType(dart.dynamic, [core.double])),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    scaleEnabled: dart.finalFieldType(core.bool),
    maxPdfPageWidth: dart.finalFieldType(core.double),
    scrollDirection: dart.finalFieldType(enums.PdfScrollDirection),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    totalImageSize: dart.finalFieldType(ui.Size),
    isBookmarkViewOpen: dart.finalFieldType(core.bool)
  }));
  var _textFieldController$ = dart.privateName(scroll_head_overlay, "_textFieldController");
  var _formKey$ = dart.privateName(scroll_head_overlay, "_formKey");
  var _focusNode$ = dart.privateName(scroll_head_overlay, "_focusNode");
  var _pdfViewerThemeData$2 = dart.privateName(scroll_head_overlay, "_pdfViewerThemeData");
  var _localizations$1 = dart.privateName(scroll_head_overlay, "_localizations");
  var _childKey = dart.privateName(scroll_head_overlay, "_childKey");
  var _isInteractionEnded = dart.privateName(scroll_head_overlay, "_isInteractionEnded");
  var _scale = dart.privateName(scroll_head_overlay, "_scale");
  var _scrollHeadPositionY = dart.privateName(scroll_head_overlay, "_scrollHeadPositionY");
  var _scrollHeadPositionX = dart.privateName(scroll_head_overlay, "_scrollHeadPositionX");
  var _isScrollHeadDragged$ = dart.privateName(scroll_head_overlay, "_isScrollHeadDragged");
  var _onDoubleTapZoomInvoked$ = dart.privateName(scroll_head_overlay, "_onDoubleTapZoomInvoked");
  var _updateScrollHeadPosition = dart.privateName(scroll_head_overlay, "_updateScrollHeadPosition");
  var _handleInteractionStart = dart.privateName(scroll_head_overlay, "_handleInteractionStart");
  var _handleInteractionChanged = dart.privateName(scroll_head_overlay, "_handleInteractionChanged");
  var _handleInteractionEnd = dart.privateName(scroll_head_overlay, "_handleInteractionEnd");
  var _handleScrollHeadDragStart = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragStart");
  var _handleVerticalScrollHeadDragUpdate = dart.privateName(scroll_head_overlay, "_handleVerticalScrollHeadDragUpdate");
  var _handleScrollHeadDragEnd = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragEnd");
  var _handleScrollHeadDragUpdate = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragUpdate");
  var _showPaginationDialog$ = dart.privateName(scroll_head_overlay, "_showPaginationDialog");
  var _clearSelection$ = dart.privateName(scroll_head_overlay, "_clearSelection");
  var _paginationTextField$ = dart.privateName(scroll_head_overlay, "_paginationTextField");
  var _handlePageNumberValidation$ = dart.privateName(scroll_head_overlay, "_handlePageNumberValidation");
  scroll_head_overlay.ScrollHeadOverlayState = class ScrollHeadOverlayState extends framework.State$(scroll_head_overlay.ScrollHeadOverlay) {
    initState() {
      super.initState();
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$2] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations$1] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$2] = null;
      this[_localizations$1] = null;
      this[_focusNode$].dispose();
      super.dispose();
    }
    [_onDoubleTapZoomInvoked$](offset, tapPosition) {
      let t37, t36;
      if (offset == null) dart.nullFailed(I[12], 182, 41, "offset");
      if (tapPosition == null) dart.nullFailed(I[12], 182, 56, "tapPosition");
      t36 = this.widget;
      t37 = this.widget.pdfViewerController.zoomLevel;
      t36.onDoubleTapZoomInvoked(t37);
      this.widget.pdfViewerController.zoomLevel = dart.nullCheck(this.widget.transformationController).value.getMaxScaleOnAxis();
      let pdfPageHeight = dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height;
      let totalPageOffset = dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageCount)).pageOffset) + dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.width);
      if (dart.notNull(this.widget.pdfViewerController.zoomLevel) <= 1) {
        if (this.widget.scrollDirection == enums.PdfScrollDirection.vertical || this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && totalPageOffset < dart.notNull(this.widget.viewportDimension.width)) {
          offset = new ui.Offset.new(0.0, offset.dy);
        }
      } else {
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
          if (dart.notNull(this.widget.viewportDimension.width) < dart.notNull(this.widget.maxPdfPageWidth) * dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
            let clampedX = dart.notNull(tapPosition.dx) > dart.notNull(this.widget.maxPdfPageWidth) ? (dart.notNull(this.widget.maxPdfPageWidth) * 2 - dart.notNull(this.widget.viewportDimension.width)) / 2 : 0.0;
            offset = new ui.Offset.new(this.widget.scrollDirection == enums.PdfScrollDirection.vertical ? clampedX : offset.dx, offset.dy);
          }
        }
      }
      let widthFactor = dart.notNull(this.widget.pdfDimension.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this.widget.pdfViewerController.zoomLevel);
      if (dart.notNull(this.widget.viewportDimension.height) > dart.notNull(pdfPageHeight) && (this.widget.scrollDirection == enums.PdfScrollDirection.horizontal || this.widget.pdfViewerController.pageCount === 1 && this.widget.scrollDirection == enums.PdfScrollDirection.vertical)) {
        offset = new ui.Offset.new(this.widget.scrollDirection == enums.PdfScrollDirection.vertical ? offset.dx[$clamp](-widthFactor, widthFactor[$abs]()) : offset.dx, (dart.notNull(tapPosition.dy) > dart.notNull(this.widget.viewportDimension.height) / 2 ? dart.notNull(offset.dy) + (dart.notNull(this.widget.viewportDimension.height) - dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height)) / 2 : dart.notNull(offset.dy) / 2)[$clamp](0.0, ((dart.notNull(this.widget.viewportDimension.height) - dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height)) / 2 + dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageNumber)).pageSize.height)) / 2));
      } else {
        if (dart.notNull(this.widget.viewportDimension.width) > totalPageOffset && dart.notNull(this.widget.pdfDimension.width) >= dart.notNull(this.widget.viewportDimension.width)) {
          offset = new ui.Offset.new((dart.notNull(offset.dx) - (dart.notNull(this.widget.viewportDimension.width) - totalPageOffset))[$clamp](0.0, (dart.notNull(offset.dx) - (dart.notNull(this.widget.viewportDimension.width) - totalPageOffset))[$abs]()), offset.dy);
        }
        offset = new ui.Offset.new(offset.dx, offset.dy[$clamp](0.0, (dart.notNull(this.widget.pdfDimension.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this.widget.pdfViewerController.zoomLevel))[$abs]()));
      }
      return offset;
    }
    build(context) {
      let t36;
      if (context == null) dart.nullFailed(I[12], 275, 29, "context");
      t36 = binding.WidgetsBinding.instance;
      t36 == null ? null : t36.addPostFrameCallback(dart.fn(timeStamp => {
        if (timeStamp == null) dart.nullFailed(I[12], 276, 61, "timeStamp");
        this[_updateScrollHeadPosition]();
      }, T.DurationTovoid()));
      let _enableDoubleTapZoom = !dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.enableDoubleTapZooming) || dart.test(pdfviewer_helper.kIsDesktop) && this.widget.interactionMode == enums.PdfInteractionMode.pan || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) && dart.test(this.widget.enableDoubleTapZooming) ? true : false;
      let scrollable = new interactive_scroll_viewer_internal.InteractiveScrollViewer.new(this.widget.child, {minScale: this.widget.minScale, maxScale: this.widget.maxScale, onDoubleTapZoomInvoked: dart.bind(this, _onDoubleTapZoomInvoked$), transformationController: this.widget.transformationController, key: this[_childKey], enableDoubleTapZooming: _enableDoubleTapZoom, scaleEnabled: dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) || !dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.scaleEnabled) ? true : false, panEnabled: this.widget.isPanEnabled, onInteractionStart: dart.bind(this, _handleInteractionStart), onInteractionUpdate: dart.bind(this, _handleInteractionChanged), onInteractionEnd: dart.bind(this, _handleInteractionEnd), constrained: false, $creationLocationd_0dea112b090073317d4: C[316] || CT.C316});
      let scrollHeadOffset = new ui.Offset.new(this[_scrollHeadPositionX], this[_scrollHeadPositionY]);
      let hasBiggerWidth = dart.notNull(this.widget.totalImageSize.width) > dart.notNull(this.widget.viewportDimension.width);
      let hasBiggerHeight = dart.notNull(this.widget.totalImageSize.height) > dart.notNull(this.widget.viewportDimension.height);
      let enableScrollHead = hasBiggerWidth || hasBiggerHeight;
      let canShowScrollHead = !enableScrollHead ? enableScrollHead : this.widget.canShowScrollHead;
      if (dart.test(pdfviewer_helper.kIsDesktop) && enableScrollHead) {
        canShowScrollHead = true;
      }
      if (this.widget.pdfViewerController.pageCount === 1) {
        canShowScrollHead = false;
      }
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([scrollable, new gesture_detector.GestureDetector.new({onVerticalDragStart: dart.fn(details => {
              if (details == null) dart.nullFailed(I[12], 327, 50, "details");
              this[_handleScrollHeadDragStart](details, true);
            }, T.DragStartDetailsTovoid()), onVerticalDragUpdate: dart.bind(this, _handleVerticalScrollHeadDragUpdate), onVerticalDragEnd: dart.bind(this, _handleScrollHeadDragEnd), onHorizontalDragStart: this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? dart.fn(details => {
              if (details == null) dart.nullFailed(I[12], 334, 39, "details");
              this[_handleScrollHeadDragStart](details, false);
            }, T.DragStartDetailsTovoid()) : null, onHorizontalDragUpdate: this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? dart.bind(this, _handleScrollHeadDragUpdate) : null, onHorizontalDragEnd: this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? dart.bind(this, _handleScrollHeadDragEnd) : null, onTap: dart.fn(() => {
              if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView)) {
                this[_textFieldController$].clear();
                if (!dart.test(focus_scope.FocusScope.of(context).hasPrimaryFocus)) {
                  focus_scope.FocusScope.of(context).unfocus();
                }
                if (dart.test(this.widget.canShowPaginationDialog)) {
                  this[_showPaginationDialog$]();
                }
              }
            }, T.VoidTovoid()), child: new visibility.Visibility.new({visible: canShowScrollHead, child: new scroll_head.ScrollHead.new(hasBiggerWidth, hasBiggerHeight, scrollHeadOffset, this.widget.pdfViewerController, this.widget.isMobileWebView, this.widget.scrollDirection, this.widget.isBookmarkViewOpen, enums.PdfPageLayoutMode.continuous, {$creationLocationd_0dea112b090073317d4: C[331] || CT.C331}), $creationLocationd_0dea112b090073317d4: C[341] || CT.C341}), $creationLocationd_0dea112b090073317d4: C[345] || CT.C345}), new visibility.Visibility.new({visible: dart.test(this[_isScrollHeadDragged$]) && dart.test(this.widget.canShowScrollStatus), child: new scroll_status.ScrollStatus.new(this.widget.pdfViewerController, {$creationLocationd_0dea112b090073317d4: C[355] || CT.C355}), $creationLocationd_0dea112b090073317d4: C[358] || CT.C358})]), $creationLocationd_0dea112b090073317d4: C[362] || CT.C362});
    }
    [_clearSelection$]() {
      return async.async(core.bool, (function* _clearSelection() {
        return this.widget.pdfViewerController.clearSelection();
      }).bind(this));
    }
    [_showPaginationDialog$]() {
      return async.async(dart.void, (function* _showPaginationDialog() {
        yield this[_clearSelection$]();
        return dialog.showDialog(dart.void, {context: this.context, barrierDismissible: true, builder: dart.fn(context => {
            if (context == null) dart.nullFailed(I[12], 387, 32, "context");
            let orientation = media_query.MediaQuery.of(context).orientation;
            return new dialog.AlertDialog.new({scrollable: true, insetPadding: C[135] || CT.C135, contentPadding: orientation == media_query.Orientation.portrait ? C[136] || CT.C136 : C[137] || CT.C137, buttonPadding: orientation == media_query.Orientation.portrait ? C[138] || CT.C138 : C[139] || CT.C139, backgroundColor: dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.backgroundColor, title: new text.Text.new(dart.nullCheck(this[_localizations$1]).pdfGoToPageLabel, {style: dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.headerTextStyle, $creationLocationd_0dea112b090073317d4: C[365] || CT.C365}), shape: C[144] || CT.C144, content: new single_child_scroll_view.SingleChildScrollView.new({child: this[_paginationTextField$](), $creationLocationd_0dea112b090073317d4: C[369] || CT.C369}), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                    this[_textFieldController$].clear();
                    navigator.Navigator.of(context).pop(T.ObjectN());
                  }, T.VoidTovoid()), child: new text.Text.new(dart.nullCheck(this[_localizations$1]).pdfPaginationDialogCancelLabel, {style: dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.cancelTextStyle).color == null ? dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.cancelTextStyle).copyWith({color: theme$.Theme.of(context).primaryColor}) : dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.cancelTextStyle, $creationLocationd_0dea112b090073317d4: C[372] || CT.C372}), $creationLocationd_0dea112b090073317d4: C[376] || CT.C376}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                    this[_handlePageNumberValidation$]();
                  }, T.VoidTovoid()), child: new text.Text.new(dart.nullCheck(this[_localizations$1]).pdfPaginationDialogOkLabel, {style: dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.okTextStyle).color == null ? dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.okTextStyle).copyWith({color: theme$.Theme.of(context).primaryColor}) : dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.okTextStyle, $creationLocationd_0dea112b090073317d4: C[380] || CT.C380}), $creationLocationd_0dea112b090073317d4: C[384] || CT.C384})]), $creationLocationd_0dea112b090073317d4: C[388] || CT.C388});
          }, T.BuildContextToAlertDialog())});
      }).bind(this));
    }
    [_paginationTextField$]() {
      return new form.Form.new({key: this[_formKey$], child: new container.Container.new({width: 328, child: new text_form_field.TextFormField.new({style: dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.inputFieldTextStyle, focusNode: this[_focusNode$], decoration: new input_decorator.InputDecoration.new({isDense: true, focusedBorder: new input_border.UnderlineInputBorder.new({borderSide: new borders.BorderSide.new({color: theme$.Theme.of(this.context).primaryColor})}), contentPadding: C[180] || CT.C180, hintText: dart.nullCheck(this[_localizations$1]).pdfEnterPageNumberLabel, hintStyle: dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.hintTextStyle, counterText: dart.str(this.widget.pdfViewerController.pageNumber) + "/" + dart.str(this.widget.pdfViewerController.pageCount), counterStyle: dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.pageInfoTextStyle, errorStyle: dart.nullCheck(this[_pdfViewerThemeData$2]).paginationDialogStyle.validationTextStyle}), keyboardType: text_input.TextInputType.number, enableInteractiveSelection: false, controller: this[_textFieldController$], autofocus: true, onEditingComplete: dart.bind(this, _handlePageNumberValidation$), onFieldSubmitted: dart.fn(value => {
              if (value == null) dart.nullFailed(I[12], 473, 37, "value");
              this[_handlePageNumberValidation$]();
            }, T.StringTovoid()), validator: dart.fn(value => {
              try {
                if (value != null) {
                  let index = core.int.parse(value);
                  if (dart.notNull(index) <= 0 || dart.notNull(index) > dart.notNull(this.widget.pdfViewerController.pageCount)) {
                    this[_textFieldController$].clear();
                    return dart.nullCheck(this[_localizations$1]).pdfInvalidPageNumberLabel;
                  }
                }
              } catch (e) {
                let ex = dart.getThrown(e);
                if (core.Exception.is(ex)) {
                  this[_textFieldController$].clear();
                  return dart.nullCheck(this[_localizations$1]).pdfInvalidPageNumberLabel;
                } else
                  throw e;
              }
            }, T.StringNToStringN()), $creationLocationd_0dea112b090073317d4: C[399] || CT.C399}), $creationLocationd_0dea112b090073317d4: C[411] || CT.C411}), $creationLocationd_0dea112b090073317d4: C[415] || CT.C415});
    }
    [_handlePageNumberValidation$]() {
      if (this[_formKey$].currentState != null && dart.test(dart.nullCheck(this[_formKey$].currentState).validate())) {
        let index = core.int.parse(this[_textFieldController$].text);
        this[_textFieldController$].clear();
        navigator.Navigator.of(this.context).pop(T.ObjectN());
        this.widget.pdfViewerController.jumpToPage(index);
      }
    }
    [_handleScrollHeadDragStart](details, isVerticalDrag) {
      if (details == null) dart.nullFailed(I[12], 509, 24, "details");
      if (isVerticalDrag == null) dart.nullFailed(I[12], 509, 38, "isVerticalDrag");
      this[_isInteractionEnded] = false;
      if (this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && dart.test(isVerticalDrag)) {
        this[_isScrollHeadDragged$] = false;
      } else {
        this[_isScrollHeadDragged$] = true;
      }
    }
    [_handleScrollHeadDragUpdate](details) {
      if (details == null) dart.nullFailed(I[12], 520, 54, "details");
      this[_isInteractionEnded] = false;
      if (!dart.test(this.widget.viewportDimension.isEmpty)) {
        let dragOffset = dart.notNull(details.delta.dx) + dart.notNull(this[_scrollHeadPositionX]);
        let scrollHeadPosition = dart.notNull(this.widget.viewportDimension.width) - (dart.test(pdfviewer_helper.kIsDesktop) ? 54 : 48);
        if (dragOffset < scrollHeadPosition && dragOffset >= 0) {
          dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new((dart.notNull(this.widget.pdfDimension.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this[_scale])) * (dragOffset / scrollHeadPosition), this.widget.currentOffset.dy));
          this[_scrollHeadPositionX] = dragOffset;
        } else {
          if (dragOffset < 0) {
            dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new(0.0, this.widget.currentOffset.dy));
          } else {
            dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new(dart.notNull(this.widget.pdfDimension.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this[_scale]), this.widget.currentOffset.dy));
          }
        }
      }
    }
    [_handleVerticalScrollHeadDragUpdate](details) {
      if (details == null) dart.nullFailed(I[12], 547, 62, "details");
      if (!dart.test(this.widget.viewportDimension.isEmpty)) {
        let dragOffset = dart.notNull(details.delta.dy) + dart.notNull(this[_scrollHeadPositionY]);
        let scrollHeadPosition = dart.notNull(this.widget.viewportDimension.height) - (dart.test(pdfviewer_helper.kIsDesktop) ? 54 : 48);
        if (dragOffset < scrollHeadPosition && dragOffset >= 0) {
          dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new(this.widget.currentOffset.dx, (dart.notNull(this.widget.pdfDimension.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this[_scale])) * (dragOffset / scrollHeadPosition)));
          this[_scrollHeadPositionY] = dragOffset;
        } else {
          if (dragOffset < 0) {
            dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new(this.widget.currentOffset.dx, 0.0));
          } else {
            dart.nullCheck(this.widget.onPdfOffsetChanged)(new ui.Offset.new(this.widget.currentOffset.dx, dart.notNull(this.widget.pdfDimension.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this[_scale])));
          }
        }
      }
    }
    [_handleScrollHeadDragEnd](details) {
      if (details == null) dart.nullFailed(I[12], 573, 48, "details");
      this[_isInteractionEnded] = true;
      this[_isScrollHeadDragged$] = false;
    }
    [_handleInteractionStart](details) {
      let t38;
      if (details == null) dart.nullFailed(I[12], 579, 50, "details");
      t38 = this.widget.onInteractionStart;
      t38 == null ? null : t38(details);
    }
    [_handleInteractionChanged](details) {
      let t38;
      if (details == null) dart.nullFailed(I[12], 584, 53, "details");
      if (details.scale !== 1) {
        this[_isInteractionEnded] = false;
      }
      t38 = this.widget.onInteractionUpdate;
      t38 == null ? null : t38(details);
    }
    [_handleInteractionEnd](details) {
      let t38;
      if (details == null) dart.nullFailed(I[12], 592, 46, "details");
      this[_isInteractionEnded] = true;
      t38 = this.widget.onInteractionEnd;
      t38 == null ? null : t38(details);
    }
    [_updateScrollHeadPosition]() {
      if (dart.notNull(this.widget.pdfDimension.height) > 0 && dart.notNull(this.widget.viewportDimension.height) > 0) {
        this[_scale] = dart.nullCheck(this.widget.transformationController).value.getMaxScaleOnAxis();
        let currentOffsetX = dart.nullCheck(this.widget.transformationController).toScene(ui.Offset.zero).dx;
        let currentOffsetY = dart.nullCheck(this.widget.transformationController).toScene(ui.Offset.zero).dy;
        let scrollPercentX = currentOffsetX[$abs]() / (dart.notNull(this.widget.pdfDimension.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this[_scale]));
        let scrollPercentY = currentOffsetY[$abs]() / (dart.notNull(this.widget.pdfDimension.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this[_scale]));
        let scrollHeadMaxExtentX = dart.notNull(this.widget.viewportDimension.width) - (dart.test(pdfviewer_helper.kIsDesktop) ? 54 : 48);
        let scrollHeadMaxExtentY = dart.notNull(this.widget.viewportDimension.height) - (dart.test(pdfviewer_helper.kIsDesktop) ? 54 : 48);
        let newPositionX = (scrollPercentX * scrollHeadMaxExtentX)[$clamp](1.0, scrollHeadMaxExtentX);
        let newPositionY = (scrollPercentY * scrollHeadMaxExtentY)[$clamp](1.0, scrollHeadMaxExtentY);
        if (newPositionX[$round]() !== this[_scrollHeadPositionX][$round]() && dart.test(this[_isInteractionEnded])) {
          this[_scrollHeadPositionX] = newPositionX;
          dart.nullCheck(this.widget.onPdfOffsetChanged)(dart.nullCheck(this.widget.transformationController).toScene(ui.Offset.zero));
        }
        if (newPositionY[$round]() !== this[_scrollHeadPositionY][$round]() && dart.test(this[_isInteractionEnded])) {
          this[_scrollHeadPositionY] = newPositionY;
          dart.nullCheck(this.widget.onPdfOffsetChanged)(dart.nullCheck(this.widget.transformationController).toScene(ui.Offset.zero));
        }
      }
    }
  };
  (scroll_head_overlay.ScrollHeadOverlayState.new = function() {
    this[_textFieldController$] = new editable_text.TextEditingController.new();
    this[_formKey$] = T.GlobalKeyOfFormState().new();
    this[_focusNode$] = new focus_manager.FocusNode.new();
    this[_pdfViewerThemeData$2] = null;
    this[_localizations$1] = null;
    this[_childKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_isInteractionEnded] = true;
    this[_scale] = 1.0;
    this[_scrollHeadPositionY] = 0.0;
    this[_scrollHeadPositionX] = 0.0;
    this[_isScrollHeadDragged$] = false;
    scroll_head_overlay.ScrollHeadOverlayState.__proto__.new.call(this);
    ;
  }).prototype = scroll_head_overlay.ScrollHeadOverlayState.prototype;
  dart.addTypeTests(scroll_head_overlay.ScrollHeadOverlayState);
  dart.addTypeCaches(scroll_head_overlay.ScrollHeadOverlayState);
  dart.setMethodSignature(scroll_head_overlay.ScrollHeadOverlayState, () => ({
    __proto__: dart.getMethods(scroll_head_overlay.ScrollHeadOverlayState.__proto__),
    [_onDoubleTapZoomInvoked$]: dart.fnType(ui.Offset, [ui.Offset, ui.Offset]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_clearSelection$]: dart.fnType(async.Future$(core.bool), []),
    [_showPaginationDialog$]: dart.fnType(async.Future$(dart.void), []),
    [_paginationTextField$]: dart.fnType(framework.Widget, []),
    [_handlePageNumberValidation$]: dart.fnType(dart.void, []),
    [_handleScrollHeadDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails, core.bool]),
    [_handleScrollHeadDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleVerticalScrollHeadDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleScrollHeadDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_handleInteractionStart]: dart.fnType(dart.void, [scale.ScaleStartDetails]),
    [_handleInteractionChanged]: dart.fnType(dart.void, [scale.ScaleUpdateDetails]),
    [_handleInteractionEnd]: dart.fnType(dart.void, [scale.ScaleEndDetails]),
    [_updateScrollHeadPosition]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(scroll_head_overlay.ScrollHeadOverlayState, I[13]);
  dart.setFieldSignature(scroll_head_overlay.ScrollHeadOverlayState, () => ({
    __proto__: dart.getFields(scroll_head_overlay.ScrollHeadOverlayState.__proto__),
    [_textFieldController$]: dart.finalFieldType(editable_text.TextEditingController),
    [_formKey$]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_focusNode$]: dart.finalFieldType(focus_manager.FocusNode),
    [_pdfViewerThemeData$2]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations$1]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations)),
    [_childKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_isInteractionEnded]: dart.fieldType(core.bool),
    [_scale]: dart.fieldType(core.double),
    [_scrollHeadPositionY]: dart.fieldType(core.double),
    [_scrollHeadPositionX]: dart.fieldType(core.double),
    [_isScrollHeadDragged$]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(scroll_head_overlay, {
    /*scroll_head_overlay._kPdfScrollHeadHeight*/get _kPdfScrollHeadHeight() {
      return 48;
    },
    /*scroll_head_overlay._kPdfScrollBarHeight*/get _kPdfScrollBarHeight() {
      return 54;
    },
    /*scroll_head_overlay._kPdfPaginationTextFieldWidth*/get _kPdfPaginationTextFieldWidth() {
      return 328;
    }
  }, false);
  var canShowPaginationDialog$1 = dart.privateName(pdf_scrollable, "PdfScrollable.canShowPaginationDialog");
  var canShowScrollHead$1 = dart.privateName(pdf_scrollable, "PdfScrollable.canShowScrollHead");
  var pdfViewerController$4 = dart.privateName(pdf_scrollable, "PdfScrollable.pdfViewerController");
  var isMobileWebView$3 = dart.privateName(pdf_scrollable, "PdfScrollable.isMobileWebView");
  var isPanEnabled$0 = dart.privateName(pdf_scrollable, "PdfScrollable.isPanEnabled");
  var interactionMode$2 = dart.privateName(pdf_scrollable, "PdfScrollable.interactionMode");
  var canShowScrollStatus$1 = dart.privateName(pdf_scrollable, "PdfScrollable.canShowScrollStatus");
  var child$0 = dart.privateName(pdf_scrollable, "PdfScrollable.child");
  var maxScale$0 = dart.privateName(pdf_scrollable, "PdfScrollable.maxScale");
  var minScale$0 = dart.privateName(pdf_scrollable, "PdfScrollable.minScale");
  var enableDoubleTapZooming$1 = dart.privateName(pdf_scrollable, "PdfScrollable.enableDoubleTapZooming");
  var pdfDimension$0 = dart.privateName(pdf_scrollable, "PdfScrollable.pdfDimension");
  var viewportDimension$1 = dart.privateName(pdf_scrollable, "PdfScrollable.viewportDimension");
  var maxPdfPageWidth$0 = dart.privateName(pdf_scrollable, "PdfScrollable.maxPdfPageWidth");
  var onPdfOffsetChanged$1 = dart.privateName(pdf_scrollable, "PdfScrollable.onPdfOffsetChanged");
  var onDoubleTap$0 = dart.privateName(pdf_scrollable, "PdfScrollable.onDoubleTap");
  var scaleEnabled$1 = dart.privateName(pdf_scrollable, "PdfScrollable.scaleEnabled");
  var pdfPages$2 = dart.privateName(pdf_scrollable, "PdfScrollable.pdfPages");
  var maxScrollExtent$ = dart.privateName(pdf_scrollable, "PdfScrollable.maxScrollExtent");
  var scrollDirection$2 = dart.privateName(pdf_scrollable, "PdfScrollable.scrollDirection");
  var totalImageSize$0 = dart.privateName(pdf_scrollable, "PdfScrollable.totalImageSize");
  var isBookmarkViewOpen$2 = dart.privateName(pdf_scrollable, "PdfScrollable.isBookmarkViewOpen");
  pdf_scrollable.PdfScrollable = class PdfScrollable extends framework.StatefulWidget {
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$1];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$1];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$4];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$3];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get isPanEnabled() {
      return this[isPanEnabled$0];
    }
    set isPanEnabled(value) {
      super.isPanEnabled = value;
    }
    get interactionMode() {
      return this[interactionMode$2];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get canShowScrollStatus() {
      return this[canShowScrollStatus$1];
    }
    set canShowScrollStatus(value) {
      super.canShowScrollStatus = value;
    }
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    get maxScale() {
      return this[maxScale$0];
    }
    set maxScale(value) {
      super.maxScale = value;
    }
    get minScale() {
      return this[minScale$0];
    }
    set minScale(value) {
      super.minScale = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$1];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get pdfDimension() {
      return this[pdfDimension$0];
    }
    set pdfDimension(value) {
      super.pdfDimension = value;
    }
    get viewportDimension() {
      return this[viewportDimension$1];
    }
    set viewportDimension(value) {
      super.viewportDimension = value;
    }
    get maxPdfPageWidth() {
      return this[maxPdfPageWidth$0];
    }
    set maxPdfPageWidth(value) {
      super.maxPdfPageWidth = value;
    }
    get onPdfOffsetChanged() {
      return this[onPdfOffsetChanged$1];
    }
    set onPdfOffsetChanged(value) {
      super.onPdfOffsetChanged = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$0];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get scaleEnabled() {
      return this[scaleEnabled$1];
    }
    set scaleEnabled(value) {
      super.scaleEnabled = value;
    }
    get pdfPages() {
      return this[pdfPages$2];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get maxScrollExtent() {
      return this[maxScrollExtent$];
    }
    set maxScrollExtent(value) {
      super.maxScrollExtent = value;
    }
    get scrollDirection() {
      return this[scrollDirection$2];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get totalImageSize() {
      return this[totalImageSize$0];
    }
    set totalImageSize(value) {
      super.totalImageSize = value;
    }
    get isBookmarkViewOpen() {
      return this[isBookmarkViewOpen$2];
    }
    set isBookmarkViewOpen(value) {
      super.isBookmarkViewOpen = value;
    }
    createState() {
      return new pdf_scrollable.PdfScrollableState.new();
    }
  };
  (pdf_scrollable.PdfScrollable.new = function(canShowPaginationDialog, canShowScrollStatus, canShowScrollHead, pdfViewerController, isMobileWebView, pdfDimension, totalImageSize, viewportDimension, onPdfOffsetChanged, isPanEnabled, maxScale, minScale, enableDoubleTapZooming, interactionMode, maxPdfPageWidth, scaleEnabled, maxScrollExtent, pdfPages, scrollDirection, isBookmarkViewOpen, child, opts) {
    if (canShowPaginationDialog == null) dart.nullFailed(I[14], 20, 12, "canShowPaginationDialog");
    if (canShowScrollStatus == null) dart.nullFailed(I[14], 21, 12, "canShowScrollStatus");
    if (canShowScrollHead == null) dart.nullFailed(I[14], 22, 12, "canShowScrollHead");
    if (pdfViewerController == null) dart.nullFailed(I[14], 23, 12, "pdfViewerController");
    if (isMobileWebView == null) dart.nullFailed(I[14], 24, 12, "isMobileWebView");
    if (pdfDimension == null) dart.nullFailed(I[14], 25, 12, "pdfDimension");
    if (totalImageSize == null) dart.nullFailed(I[14], 26, 12, "totalImageSize");
    if (viewportDimension == null) dart.nullFailed(I[14], 27, 12, "viewportDimension");
    if (isPanEnabled == null) dart.nullFailed(I[14], 29, 12, "isPanEnabled");
    if (maxScale == null) dart.nullFailed(I[14], 30, 12, "maxScale");
    if (minScale == null) dart.nullFailed(I[14], 31, 12, "minScale");
    if (enableDoubleTapZooming == null) dart.nullFailed(I[14], 32, 12, "enableDoubleTapZooming");
    if (interactionMode == null) dart.nullFailed(I[14], 33, 12, "interactionMode");
    if (maxPdfPageWidth == null) dart.nullFailed(I[14], 34, 12, "maxPdfPageWidth");
    if (scaleEnabled == null) dart.nullFailed(I[14], 35, 12, "scaleEnabled");
    if (maxScrollExtent == null) dart.nullFailed(I[14], 36, 12, "maxScrollExtent");
    if (pdfPages == null) dart.nullFailed(I[14], 37, 12, "pdfPages");
    if (scrollDirection == null) dart.nullFailed(I[14], 38, 12, "scrollDirection");
    if (isBookmarkViewOpen == null) dart.nullFailed(I[14], 39, 12, "isBookmarkViewOpen");
    if (child == null) dart.nullFailed(I[14], 40, 12, "child");
    let key = opts && 'key' in opts ? opts.key : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowPaginationDialog$1] = canShowPaginationDialog;
    this[canShowScrollStatus$1] = canShowScrollStatus;
    this[canShowScrollHead$1] = canShowScrollHead;
    this[pdfViewerController$4] = pdfViewerController;
    this[isMobileWebView$3] = isMobileWebView;
    this[pdfDimension$0] = pdfDimension;
    this[totalImageSize$0] = totalImageSize;
    this[viewportDimension$1] = viewportDimension;
    this[onPdfOffsetChanged$1] = onPdfOffsetChanged;
    this[isPanEnabled$0] = isPanEnabled;
    this[maxScale$0] = maxScale;
    this[minScale$0] = minScale;
    this[enableDoubleTapZooming$1] = enableDoubleTapZooming;
    this[interactionMode$2] = interactionMode;
    this[maxPdfPageWidth$0] = maxPdfPageWidth;
    this[scaleEnabled$1] = scaleEnabled;
    this[maxScrollExtent$] = maxScrollExtent;
    this[pdfPages$2] = pdfPages;
    this[scrollDirection$2] = scrollDirection;
    this[isBookmarkViewOpen$2] = isBookmarkViewOpen;
    this[child$0] = child;
    this[onDoubleTap$0] = onDoubleTap;
    pdf_scrollable.PdfScrollable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdf_scrollable.PdfScrollable.prototype;
  dart.addTypeTests(pdf_scrollable.PdfScrollable);
  dart.addTypeCaches(pdf_scrollable.PdfScrollable);
  dart.setMethodSignature(pdf_scrollable.PdfScrollable, () => ({
    __proto__: dart.getMethods(pdf_scrollable.PdfScrollable.__proto__),
    createState: dart.fnType(pdf_scrollable.PdfScrollableState, [])
  }));
  dart.setLibraryUri(pdf_scrollable.PdfScrollable, I[15]);
  dart.setFieldSignature(pdf_scrollable.PdfScrollable, () => ({
    __proto__: dart.getFields(pdf_scrollable.PdfScrollable.__proto__),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    canShowScrollHead: dart.finalFieldType(core.bool),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isMobileWebView: dart.finalFieldType(core.bool),
    isPanEnabled: dart.finalFieldType(core.bool),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    canShowScrollStatus: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget),
    maxScale: dart.finalFieldType(core.double),
    minScale: dart.finalFieldType(core.double),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    pdfDimension: dart.finalFieldType(ui.Size),
    viewportDimension: dart.finalFieldType(ui.Size),
    maxPdfPageWidth: dart.finalFieldType(core.double),
    onPdfOffsetChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [ui.Offset]))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    scaleEnabled: dart.finalFieldType(core.bool),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    maxScrollExtent: dart.finalFieldType(core.double),
    scrollDirection: dart.finalFieldType(enums.PdfScrollDirection),
    totalImageSize: dart.finalFieldType(ui.Size),
    isBookmarkViewOpen: dart.finalFieldType(core.bool)
  }));
  var previousZoomLevel$ = dart.privateName(pdf_scrollable, "PdfScrollableState.previousZoomLevel");
  var paddingWidthScale = dart.privateName(pdf_scrollable, "PdfScrollableState.paddingWidthScale");
  var paddingHeightScale = dart.privateName(pdf_scrollable, "PdfScrollableState.paddingHeightScale");
  var __PdfScrollableState__transformationController = dart.privateName(pdf_scrollable, "_#PdfScrollableState#_transformationController");
  var __PdfScrollableState__transformationController_isSet = dart.privateName(pdf_scrollable, "_#PdfScrollableState#_transformationController#isSet");
  var _currentScale = dart.privateName(pdf_scrollable, "_currentScale");
  var _setZoomLevel$ = dart.privateName(pdf_scrollable, "_setZoomLevel");
  var _isOverFlowed$ = dart.privateName(pdf_scrollable, "_isOverFlowed");
  var __PdfScrollableState_currentOffset = dart.privateName(pdf_scrollable, "_#PdfScrollableState#currentOffset");
  var __PdfScrollableState_currentOffset_isSet = dart.privateName(pdf_scrollable, "_#PdfScrollableState#currentOffset#isSet");
  var __PdfScrollableState_currentZoomLevel = dart.privateName(pdf_scrollable, "_#PdfScrollableState#currentZoomLevel");
  var __PdfScrollableState_currentZoomLevel_isSet = dart.privateName(pdf_scrollable, "_#PdfScrollableState#currentZoomLevel#isSet");
  var _transformationController$ = dart.privateName(pdf_scrollable, "_transformationController");
  var _onDoubleTapZoomInvoked$0 = dart.privateName(pdf_scrollable, "_onDoubleTapZoomInvoked");
  var _handleInteractionStart$ = dart.privateName(pdf_scrollable, "_handleInteractionStart");
  var _handleInteractionUpdate = dart.privateName(pdf_scrollable, "_handleInteractionUpdate");
  var _handleInteractionEnd$ = dart.privateName(pdf_scrollable, "_handleInteractionEnd");
  var _handlePdfOffsetChanged$ = dart.privateName(pdf_scrollable, "_handlePdfOffsetChanged");
  var _setPixel$ = dart.privateName(pdf_scrollable, "_setPixel");
  pdf_scrollable.PdfScrollableState = class PdfScrollableState extends framework.State$(pdf_scrollable.PdfScrollable) {
    get previousZoomLevel() {
      return this[previousZoomLevel$];
    }
    set previousZoomLevel(value) {
      this[previousZoomLevel$] = value;
    }
    get paddingWidthScale() {
      return this[paddingWidthScale];
    }
    set paddingWidthScale(value) {
      this[paddingWidthScale] = value;
    }
    get paddingHeightScale() {
      return this[paddingHeightScale];
    }
    set paddingHeightScale(value) {
      this[paddingHeightScale] = value;
    }
    get [_transformationController$]() {
      let t38;
      return dart.test(this[__PdfScrollableState__transformationController_isSet]) ? (t38 = this[__PdfScrollableState__transformationController], t38) : dart.throw(new _internal.LateError.fieldNI("_transformationController"));
    }
    set [_transformationController$](t38) {
      if (t38 == null) dart.nullFailed(I[14], 118, 33, "null");
      this[__PdfScrollableState__transformationController_isSet] = true;
      this[__PdfScrollableState__transformationController] = t38;
    }
    get currentOffset() {
      let t39;
      return dart.test(this[__PdfScrollableState_currentOffset_isSet]) ? (t39 = this[__PdfScrollableState_currentOffset], t39) : dart.throw(new _internal.LateError.fieldNI("currentOffset"));
    }
    set currentOffset(t39) {
      if (t39 == null) dart.nullFailed(I[14], 124, 15, "null");
      this[__PdfScrollableState_currentOffset_isSet] = true;
      this[__PdfScrollableState_currentOffset] = t39;
    }
    get currentZoomLevel() {
      let t40;
      return dart.test(this[__PdfScrollableState_currentZoomLevel_isSet]) ? (t40 = this[__PdfScrollableState_currentZoomLevel], t40) : dart.throw(new _internal.LateError.fieldNI("currentZoomLevel"));
    }
    set currentZoomLevel(t40) {
      if (t40 == null) dart.nullFailed(I[14], 127, 15, "null");
      this[__PdfScrollableState_currentZoomLevel_isSet] = true;
      this[__PdfScrollableState_currentZoomLevel] = t40;
    }
    initState() {
      super.initState();
      this[_transformationController$] = new interactive_viewer.TransformationController.new();
      this.currentOffset = ui.Offset.zero;
      this.currentZoomLevel = 1.0;
      if (dart.notNull(this.widget.pdfViewerController.zoomLevel) > 1) {
        this.scaleTo(this.widget.pdfViewerController.zoomLevel, {isZoomed: false});
      }
    }
    dispose() {
      this[_transformationController$].dispose();
      super.dispose();
    }
    reset() {
      this.scaleTo(1.0, {isZoomed: false});
    }
    build(context) {
      if (context == null) dart.nullFailed(I[14], 161, 29, "context");
      this.currentOffset = this[_transformationController$].toScene(ui.Offset.zero);
      this.currentZoomLevel = this[_transformationController$].value.getMaxScaleOnAxis();
      return new scroll_head_overlay.ScrollHeadOverlay.new(this.widget.canShowPaginationDialog, this.widget.canShowScrollStatus, this.widget.canShowScrollHead, this.widget.pdfViewerController, this.widget.isMobileWebView, this.widget.pdfDimension, this.widget.totalImageSize, this.widget.viewportDimension, this.currentOffset, this.widget.maxScale, this.widget.minScale, dart.bind(this, _onDoubleTapZoomInvoked$0), this.widget.enableDoubleTapZooming, this.widget.interactionMode, this.widget.scaleEnabled, this.widget.maxPdfPageWidth, this.widget.pdfPages, this.widget.scrollDirection, this.widget.isBookmarkViewOpen, this.widget.child, {isPanEnabled: this.widget.isPanEnabled, onInteractionStart: dart.bind(this, _handleInteractionStart$), onInteractionUpdate: dart.bind(this, _handleInteractionUpdate), onInteractionEnd: dart.bind(this, _handleInteractionEnd$), transformationController: this[_transformationController$], onPdfOffsetChanged: dart.bind(this, _handlePdfOffsetChanged$), $creationLocationd_0dea112b090073317d4: C[419] || CT.C419});
    }
    [_handleInteractionStart$](details) {
      if (details == null) dart.nullFailed(I[14], 195, 50, "details");
      if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.scaleEnabled)) {
        this.previousZoomLevel = this.widget.pdfViewerController.zoomLevel;
      }
      this.paddingWidthScale = 0.0;
      this.paddingHeightScale = 0.0;
    }
    [_onDoubleTapZoomInvoked$0](scale) {
      let t41;
      if (scale == null) dart.nullFailed(I[14], 205, 39, "scale");
      t41 = this.widget.onDoubleTap;
      t41 == null ? null : t41();
      this.previousZoomLevel = scale;
    }
    [_handleInteractionUpdate](details) {
      if (details == null) dart.nullFailed(I[14], 211, 52, "details");
      this.currentOffset = this[_transformationController$].toScene(ui.Offset.zero);
      this[_currentScale] = this[_transformationController$].value.getMaxScaleOnAxis();
      dart.nullCheck(this.widget.onPdfOffsetChanged)(this.currentOffset);
      if (dart.notNull(details.scale) <= 1) {
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
          if (this.widget.viewportDimension.width[$round]() === (dart.notNull(this.widget.pdfDimension.width) * dart.nullCheck(this[_currentScale]))[$round]()) {
            this.setState(dart.fn(() => {
              this.paddingWidthScale = dart.notNull(details.scale) * dart.nullCheck(this[_currentScale]);
            }, T.VoidTovoid()));
          }
        } else {
          if (this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && this.widget.viewportDimension.width[$round]() === (dart.notNull(this.widget.pdfDimension.width) * dart.nullCheck(this[_currentScale]))[$round]()) {
            this.setState(dart.fn(() => {
              this.paddingWidthScale = dart.notNull(details.scale) * dart.nullCheck(this[_currentScale]);
            }, T.VoidTovoid()));
          } else if (this.widget.viewportDimension.height[$round]() === (dart.notNull(this.widget.pdfDimension.height) * dart.nullCheck(this[_currentScale]))[$round]()) {
            this.setState(dart.fn(() => {
              this.paddingHeightScale = dart.notNull(details.scale) * dart.nullCheck(this[_currentScale]);
            }, T.VoidTovoid()));
          }
        }
      }
      if (details.scale === 1.0) {
        this[_currentScale] = 0.0;
      }
    }
    [_handleInteractionEnd$](details) {
      if (details == null) dart.nullFailed(I[14], 244, 46, "details");
      this.paddingWidthScale = 0.0;
      this.paddingHeightScale = 0.0;
      let totalPdfPageWidth = dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageCount)).pageOffset) + dart.notNull(dart.nullCheck(this.widget.pdfPages[$_get](this.widget.pdfViewerController.pageCount)).pageSize.width);
      if (this[_currentScale] != this.widget.pdfViewerController.zoomLevel && this[_currentScale] != null && this[_currentScale] !== 0.0 && (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.isMobileWebView) || dart.test(pdfviewer_helper.kIsDesktop) && dart.test(this.widget.scaleEnabled))) {
        this.widget.pdfViewerController.zoomLevel = dart.nullCheck(this[_currentScale]);
      }
      if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView) && this.widget.scrollDirection == enums.PdfScrollDirection.vertical && dart.notNull(this.widget.maxPdfPageWidth) * dart.notNull(this.widget.pdfViewerController.zoomLevel) < dart.notNull(this.widget.viewportDimension.width) || this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && this.widget.viewportDimension.width[$round]() > (totalPdfPageWidth * dart.notNull(this.widget.pdfViewerController.zoomLevel))[$round]()) {
        this[_transformationController$].value.translate(this.currentOffset.dx);
        this[_isOverFlowed$] = false;
      } else {
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView) && this.widget.scrollDirection == enums.PdfScrollDirection.vertical || this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && totalPdfPageWidth < dart.notNull(this.widget.viewportDimension.width)) {
          if (this[_isOverFlowed$] === false) {
            this[_transformationController$].value.translate(this.currentOffset.dx);
            this[_isOverFlowed$] = true;
          }
        }
      }
    }
    receivedPointerSignal(event) {
      if (event == null) dart.nullFailed(I[14], 285, 49, "event");
      if (events.PointerScrollEvent.is(event)) {
        this.jumpTo({xOffset: dart.notNull(this.currentOffset.dx) + dart.notNull(event.scrollDelta.dx), yOffset: dart.notNull(this.currentOffset.dy) + dart.notNull(event.scrollDelta.dy)});
      }
    }
    receivedPointerMove(event) {
      if (event == null) dart.nullFailed(I[14], 294, 45, "event");
      if (event.kind == ui.PointerDeviceKind.touch) {
        this.currentOffset = this[_transformationController$].toScene(ui.Offset.zero);
      }
    }
    jumpTo(opts) {
      let xOffset = opts && 'xOffset' in opts ? opts.xOffset : null;
      let yOffset = opts && 'yOffset' in opts ? opts.yOffset : null;
      xOffset == null ? xOffset = this.currentOffset.dx : null;
      yOffset == null ? yOffset = this.currentOffset.dy : null;
      this[_handlePdfOffsetChanged$](new ui.Offset.new(xOffset, yOffset));
    }
    [_handlePdfOffsetChanged$](offset) {
      if (offset == null) dart.nullFailed(I[14], 308, 39, "offset");
      if (this.widget.pdfDimension.height !== 0) {
        if (dart.notNull(this.widget.viewportDimension.width) > dart.notNull(this.widget.pdfDimension.width) * dart.notNull(this.widget.pdfViewerController.zoomLevel) && (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(this.widget.isMobileWebView))) {
          offset = new ui.Offset.new(this.currentOffset.dx, offset.dy);
        }
        if (this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && dart.notNull(this.widget.viewportDimension.height) > dart.notNull(this.widget.pdfDimension.height) * dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
          offset = new ui.Offset.new(offset.dx, 0.0);
        }
        let widthFactor = dart.notNull(this.widget.pdfDimension.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this.widget.pdfViewerController.zoomLevel);
        offset = new ui.Offset.new(offset.dx[$clamp](this[_setZoomLevel$] === true ? -widthFactor : 0.0, widthFactor[$abs]()), offset.dy[$clamp](0.0, (dart.notNull(this.widget.pdfDimension.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this.widget.pdfViewerController.zoomLevel))[$abs]()));
        this[_setZoomLevel$] = false;
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
          if (dart.notNull(this.widget.viewportDimension.width) > dart.notNull(this.widget.pdfDimension.width) * dart.notNull(this.widget.pdfViewerController.zoomLevel)) {
            offset = new ui.Offset.new(0.0, offset.dy);
          } else {
            offset = new ui.Offset.new(offset.dx, offset.dy);
          }
        }
        let previousOffset = this[_transformationController$].toScene(ui.Offset.zero);
        this[_transformationController$].value.translate(dart.notNull(previousOffset.dx) - dart.notNull(offset.dx), dart.notNull(previousOffset.dy) - dart.notNull(offset.dy));
        dart.nullCheck(this.widget.onPdfOffsetChanged)(this[_transformationController$].toScene(ui.Offset.zero));
      }
    }
    [_setPixel$](offset) {
      if (offset == null) dart.nullFailed(I[14], 354, 25, "offset");
      let widthFactor = dart.notNull(this.widget.pdfDimension.width) - dart.notNull(this.widget.viewportDimension.width) / dart.notNull(this.widget.pdfViewerController.zoomLevel);
      offset = new ui.Offset.new(offset.dx[$clamp](-widthFactor, widthFactor[$abs]()), offset.dy[$clamp](0.0, (dart.notNull(this.widget.pdfDimension.height) - dart.notNull(this.widget.viewportDimension.height) / dart.notNull(this.widget.pdfViewerController.zoomLevel))[$abs]()));
      let previousOffset = this[_transformationController$].toScene(ui.Offset.zero);
      this[_transformationController$].value.translate(dart.notNull(previousOffset.dx) - dart.notNull(offset.dx), dart.notNull(previousOffset.dy) - dart.notNull(offset.dy));
      dart.nullCheck(this.widget.onPdfOffsetChanged)(this[_transformationController$].toScene(ui.Offset.zero));
    }
    forcePixels(offset, opts) {
      let t41;
      if (offset == null) dart.nullFailed(I[14], 375, 27, "offset");
      let isZoomInitiated = opts && 'isZoomInitiated' in opts ? opts.isZoomInitiated : null;
      if (isZoomInitiated === true) {
        this[_setPixel$](offset);
      } else {
        t41 = binding.WidgetsBinding.instance;
        t41 == null ? null : t41.addPostFrameCallback(dart.fn(timeStamp => {
          if (timeStamp == null) dart.nullFailed(I[14], 381, 63, "timeStamp");
          this[_setPixel$](offset);
        }, T.DurationTovoid()));
      }
    }
    scaleTo(zoomLevel, opts) {
      if (zoomLevel == null) dart.nullFailed(I[14], 388, 25, "zoomLevel");
      let isZoomed = opts && 'isZoomed' in opts ? opts.isZoomed : true;
      if (isZoomed == null) dart.nullFailed(I[14], 388, 42, "isZoomed");
      this.currentZoomLevel = this[_transformationController$].value.getMaxScaleOnAxis();
      if (this.currentZoomLevel != zoomLevel) {
        this.previousZoomLevel = this.currentZoomLevel;
        this[_setZoomLevel$] = true;
        let zoomChangeFactor = dart.notNull(zoomLevel) / dart.notNull(this.currentZoomLevel);
        let previousOffset = this[_transformationController$].toScene(ui.Offset.zero);
        this[_transformationController$].value.scale(zoomChangeFactor, zoomChangeFactor);
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView) && dart.notNull(this.widget.maxPdfPageWidth) * dart.notNull(zoomLevel) < dart.notNull(this.widget.viewportDimension.width)) {
          this[_isOverFlowed$] = false;
        }
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
          this.jumpTo({xOffset: previousOffset.dx, yOffset: previousOffset.dy});
        } else {
          this.forcePixels(previousOffset, {isZoomInitiated: isZoomed});
        }
      }
      return zoomLevel;
    }
    getPageNumber(offset) {
      if (offset == null) dart.nullFailed(I[14], 412, 28, "offset");
      let pageNumber = 0;
      for (let i = 1; i <= dart.notNull(this.widget.pdfViewerController.pageCount); i = i + 1) {
        if (i === this.widget.pdfViewerController.pageCount || offset[$round]() >= this.widget.maxScrollExtent[$round]()) {
          pageNumber = this.widget.pdfViewerController.pageCount;
          break;
        } else if (offset[$round]() >= dart.nullCheck(this.widget.pdfPages[$_get](i)).pageOffset[$round]() && offset[$round]() < dart.nullCheck(this.widget.pdfPages[$_get](i + 1)).pageOffset[$round]()) {
          pageNumber = i;
          break;
        } else {
          continue;
        }
      }
      return pageNumber;
    }
  };
  (pdf_scrollable.PdfScrollableState.new = function() {
    this[__PdfScrollableState__transformationController] = null;
    this[__PdfScrollableState__transformationController_isSet] = false;
    this[_currentScale] = null;
    this[_setZoomLevel$] = null;
    this[_isOverFlowed$] = false;
    this[__PdfScrollableState_currentOffset] = null;
    this[__PdfScrollableState_currentOffset_isSet] = false;
    this[__PdfScrollableState_currentZoomLevel] = null;
    this[__PdfScrollableState_currentZoomLevel_isSet] = false;
    this[previousZoomLevel$] = 1.0;
    this[paddingWidthScale] = 0.0;
    this[paddingHeightScale] = 0.0;
    pdf_scrollable.PdfScrollableState.__proto__.new.call(this);
    ;
  }).prototype = pdf_scrollable.PdfScrollableState.prototype;
  dart.addTypeTests(pdf_scrollable.PdfScrollableState);
  dart.addTypeCaches(pdf_scrollable.PdfScrollableState);
  dart.setMethodSignature(pdf_scrollable.PdfScrollableState, () => ({
    __proto__: dart.getMethods(pdf_scrollable.PdfScrollableState.__proto__),
    reset: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_handleInteractionStart$]: dart.fnType(dart.void, [scale.ScaleStartDetails]),
    [_onDoubleTapZoomInvoked$0]: dart.fnType(dart.void, [core.double]),
    [_handleInteractionUpdate]: dart.fnType(dart.void, [scale.ScaleUpdateDetails]),
    [_handleInteractionEnd$]: dart.fnType(dart.void, [scale.ScaleEndDetails]),
    receivedPointerSignal: dart.fnType(dart.void, [events.PointerSignalEvent]),
    receivedPointerMove: dart.fnType(dart.void, [events.PointerMoveEvent]),
    jumpTo: dart.fnType(dart.void, [], {xOffset: dart.nullable(core.double), yOffset: dart.nullable(core.double)}, {}),
    [_handlePdfOffsetChanged$]: dart.fnType(dart.void, [ui.Offset]),
    [_setPixel$]: dart.fnType(dart.void, [ui.Offset]),
    forcePixels: dart.fnType(dart.void, [ui.Offset], {isZoomInitiated: dart.nullable(core.bool)}, {}),
    scaleTo: dart.fnType(core.double, [core.double], {isZoomed: core.bool}, {}),
    getPageNumber: dart.fnType(core.int, [core.double])
  }));
  dart.setGetterSignature(pdf_scrollable.PdfScrollableState, () => ({
    __proto__: dart.getGetters(pdf_scrollable.PdfScrollableState.__proto__),
    [_transformationController$]: interactive_viewer.TransformationController,
    currentOffset: ui.Offset,
    currentZoomLevel: core.double
  }));
  dart.setSetterSignature(pdf_scrollable.PdfScrollableState, () => ({
    __proto__: dart.getSetters(pdf_scrollable.PdfScrollableState.__proto__),
    [_transformationController$]: interactive_viewer.TransformationController,
    currentOffset: ui.Offset,
    currentZoomLevel: core.double
  }));
  dart.setLibraryUri(pdf_scrollable.PdfScrollableState, I[15]);
  dart.setFieldSignature(pdf_scrollable.PdfScrollableState, () => ({
    __proto__: dart.getFields(pdf_scrollable.PdfScrollableState.__proto__),
    [__PdfScrollableState__transformationController]: dart.fieldType(dart.nullable(interactive_viewer.TransformationController)),
    [__PdfScrollableState__transformationController_isSet]: dart.fieldType(core.bool),
    [_currentScale]: dart.fieldType(dart.nullable(core.double)),
    [_setZoomLevel$]: dart.fieldType(dart.nullable(core.bool)),
    [_isOverFlowed$]: dart.fieldType(core.bool),
    [__PdfScrollableState_currentOffset]: dart.fieldType(dart.nullable(ui.Offset)),
    [__PdfScrollableState_currentOffset_isSet]: dart.fieldType(core.bool),
    [__PdfScrollableState_currentZoomLevel]: dart.fieldType(dart.nullable(core.double)),
    [__PdfScrollableState_currentZoomLevel_isSet]: dart.fieldType(core.bool),
    previousZoomLevel: dart.fieldType(core.double),
    paddingWidthScale: dart.fieldType(core.double),
    paddingHeightScale: dart.fieldType(core.double)
  }));
  var imageStream$ = dart.privateName(pdf_page_view, "PdfPageView.imageStream");
  var width$0 = dart.privateName(pdf_page_view, "PdfPageView.width");
  var height$0 = dart.privateName(pdf_page_view, "PdfPageView.height");
  var pageSpacing$ = dart.privateName(pdf_page_view, "PdfPageView.pageSpacing");
  var pdfDocument$1 = dart.privateName(pdf_page_view, "PdfPageView.pdfDocument");
  var viewportGlobalRect$0 = dart.privateName(pdf_page_view, "PdfPageView.viewportGlobalRect");
  var parentViewport$ = dart.privateName(pdf_page_view, "PdfPageView.parentViewport");
  var enableDocumentLinkAnnotation$ = dart.privateName(pdf_page_view, "PdfPageView.enableDocumentLinkAnnotation");
  var pageIndex$0 = dart.privateName(pdf_page_view, "PdfPageView.pageIndex");
  var pdfPages$3 = dart.privateName(pdf_page_view, "PdfPageView.pdfPages");
  var interactionMode$3 = dart.privateName(pdf_page_view, "PdfPageView.interactionMode");
  var pdfViewerController$5 = dart.privateName(pdf_page_view, "PdfPageView.pdfViewerController");
  var enableTextSelection$0 = dart.privateName(pdf_page_view, "PdfPageView.enableTextSelection");
  var onTextSelectionChanged$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionChanged");
  var onTextSelectionDragStarted$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionDragStarted");
  var onTextSelectionDragEnded$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionDragEnded");
  var searchTextHighlightColor$0 = dart.privateName(pdf_page_view, "PdfPageView.searchTextHighlightColor");
  var textCollection$0 = dart.privateName(pdf_page_view, "PdfPageView.textCollection");
  var pdfTextSearchResult$0 = dart.privateName(pdf_page_view, "PdfPageView.pdfTextSearchResult");
  var isMobileWebView$4 = dart.privateName(pdf_page_view, "PdfPageView.isMobileWebView");
  var pdfScrollableStateKey$1 = dart.privateName(pdf_page_view, "PdfPageView.pdfScrollableStateKey");
  var singlePageViewStateKey$1 = dart.privateName(pdf_page_view, "PdfPageView.singlePageViewStateKey");
  var scrollDirection$3 = dart.privateName(pdf_page_view, "PdfPageView.scrollDirection");
  var onPdfPagePointerDown$ = dart.privateName(pdf_page_view, "PdfPageView.onPdfPagePointerDown");
  var onPdfPagePointerMove$ = dart.privateName(pdf_page_view, "PdfPageView.onPdfPagePointerMove");
  var onPdfPagePointerUp$ = dart.privateName(pdf_page_view, "PdfPageView.onPdfPagePointerUp");
  var semanticLabel$ = dart.privateName(pdf_page_view, "PdfPageView.semanticLabel");
  var isSinglePageView$1 = dart.privateName(pdf_page_view, "PdfPageView.isSinglePageView");
  pdf_page_view.PdfPageView = class PdfPageView extends framework.StatefulWidget {
    get imageStream() {
      return this[imageStream$];
    }
    set imageStream(value) {
      super.imageStream = value;
    }
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get pageSpacing() {
      return this[pageSpacing$];
    }
    set pageSpacing(value) {
      super.pageSpacing = value;
    }
    get pdfDocument() {
      return this[pdfDocument$1];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    get viewportGlobalRect() {
      return this[viewportGlobalRect$0];
    }
    set viewportGlobalRect(value) {
      super.viewportGlobalRect = value;
    }
    get parentViewport() {
      return this[parentViewport$];
    }
    set parentViewport(value) {
      super.parentViewport = value;
    }
    get enableDocumentLinkAnnotation() {
      return this[enableDocumentLinkAnnotation$];
    }
    set enableDocumentLinkAnnotation(value) {
      super.enableDocumentLinkAnnotation = value;
    }
    get pageIndex() {
      return this[pageIndex$0];
    }
    set pageIndex(value) {
      super.pageIndex = value;
    }
    get pdfPages() {
      return this[pdfPages$3];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get interactionMode() {
      return this[interactionMode$3];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$5];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$0];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$0];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get onTextSelectionDragStarted() {
      return this[onTextSelectionDragStarted$0];
    }
    set onTextSelectionDragStarted(value) {
      super.onTextSelectionDragStarted = value;
    }
    get onTextSelectionDragEnded() {
      return this[onTextSelectionDragEnded$0];
    }
    set onTextSelectionDragEnded(value) {
      super.onTextSelectionDragEnded = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$0];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get textCollection() {
      return this[textCollection$0];
    }
    set textCollection(value) {
      super.textCollection = value;
    }
    get pdfTextSearchResult() {
      return this[pdfTextSearchResult$0];
    }
    set pdfTextSearchResult(value) {
      super.pdfTextSearchResult = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$4];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get pdfScrollableStateKey() {
      return this[pdfScrollableStateKey$1];
    }
    set pdfScrollableStateKey(value) {
      super.pdfScrollableStateKey = value;
    }
    get singlePageViewStateKey() {
      return this[singlePageViewStateKey$1];
    }
    set singlePageViewStateKey(value) {
      super.singlePageViewStateKey = value;
    }
    get scrollDirection() {
      return this[scrollDirection$3];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get onPdfPagePointerDown() {
      return this[onPdfPagePointerDown$];
    }
    set onPdfPagePointerDown(value) {
      super.onPdfPagePointerDown = value;
    }
    get onPdfPagePointerMove() {
      return this[onPdfPagePointerMove$];
    }
    set onPdfPagePointerMove(value) {
      super.onPdfPagePointerMove = value;
    }
    get onPdfPagePointerUp() {
      return this[onPdfPagePointerUp$];
    }
    set onPdfPagePointerUp(value) {
      super.onPdfPagePointerUp = value;
    }
    get semanticLabel() {
      return this[semanticLabel$];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get isSinglePageView() {
      return this[isSinglePageView$1];
    }
    set isSinglePageView(value) {
      super.isSinglePageView = value;
    }
    createState() {
      return new pdf_page_view.PdfPageViewState.new();
    }
  };
  (pdf_page_view.PdfPageView.new = function(key, imageStream, viewportGlobalRect, parentViewport, interactionMode, width, height, pageSpacing, pdfDocument, pdfPages, pageIndex, pdfViewerController, enableDocumentLinkAnnotation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, searchTextHighlightColor, textCollection, isMobileWebView, pdfTextSearchResult, pdfScrollableStateKey, singlePageViewStateKey, scrollDirection, onPdfPagePointerDown, onPdfPagePointerMove, onPdfPagePointerUp, semanticLabel, isSinglePageView, opts) {
    if (key == null) dart.nullFailed(I[16], 22, 9, "key");
    if (parentViewport == null) dart.nullFailed(I[16], 25, 10, "parentViewport");
    if (interactionMode == null) dart.nullFailed(I[16], 26, 10, "interactionMode");
    if (width == null) dart.nullFailed(I[16], 27, 10, "width");
    if (height == null) dart.nullFailed(I[16], 28, 10, "height");
    if (pageSpacing == null) dart.nullFailed(I[16], 29, 10, "pageSpacing");
    if (pdfPages == null) dart.nullFailed(I[16], 31, 10, "pdfPages");
    if (pageIndex == null) dart.nullFailed(I[16], 32, 10, "pageIndex");
    if (pdfViewerController == null) dart.nullFailed(I[16], 33, 10, "pdfViewerController");
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[16], 34, 10, "enableDocumentLinkAnnotation");
    if (enableTextSelection == null) dart.nullFailed(I[16], 35, 10, "enableTextSelection");
    if (onTextSelectionDragStarted == null) dart.nullFailed(I[16], 37, 10, "onTextSelectionDragStarted");
    if (onTextSelectionDragEnded == null) dart.nullFailed(I[16], 38, 10, "onTextSelectionDragEnded");
    if (searchTextHighlightColor == null) dart.nullFailed(I[16], 39, 10, "searchTextHighlightColor");
    if (isMobileWebView == null) dart.nullFailed(I[16], 41, 10, "isMobileWebView");
    if (pdfTextSearchResult == null) dart.nullFailed(I[16], 42, 10, "pdfTextSearchResult");
    if (pdfScrollableStateKey == null) dart.nullFailed(I[16], 43, 10, "pdfScrollableStateKey");
    if (singlePageViewStateKey == null) dart.nullFailed(I[16], 44, 10, "singlePageViewStateKey");
    if (scrollDirection == null) dart.nullFailed(I[16], 45, 10, "scrollDirection");
    if (onPdfPagePointerDown == null) dart.nullFailed(I[16], 46, 10, "onPdfPagePointerDown");
    if (onPdfPagePointerMove == null) dart.nullFailed(I[16], 47, 10, "onPdfPagePointerMove");
    if (onPdfPagePointerUp == null) dart.nullFailed(I[16], 48, 10, "onPdfPagePointerUp");
    if (isSinglePageView == null) dart.nullFailed(I[16], 50, 10, "isSinglePageView");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[imageStream$] = imageStream;
    this[viewportGlobalRect$0] = viewportGlobalRect;
    this[parentViewport$] = parentViewport;
    this[interactionMode$3] = interactionMode;
    this[width$0] = width;
    this[height$0] = height;
    this[pageSpacing$] = pageSpacing;
    this[pdfDocument$1] = pdfDocument;
    this[pdfPages$3] = pdfPages;
    this[pageIndex$0] = pageIndex;
    this[pdfViewerController$5] = pdfViewerController;
    this[enableDocumentLinkAnnotation$] = enableDocumentLinkAnnotation;
    this[enableTextSelection$0] = enableTextSelection;
    this[onTextSelectionChanged$0] = onTextSelectionChanged;
    this[onTextSelectionDragStarted$0] = onTextSelectionDragStarted;
    this[onTextSelectionDragEnded$0] = onTextSelectionDragEnded;
    this[searchTextHighlightColor$0] = searchTextHighlightColor;
    this[textCollection$0] = textCollection;
    this[isMobileWebView$4] = isMobileWebView;
    this[pdfTextSearchResult$0] = pdfTextSearchResult;
    this[pdfScrollableStateKey$1] = pdfScrollableStateKey;
    this[singlePageViewStateKey$1] = singlePageViewStateKey;
    this[scrollDirection$3] = scrollDirection;
    this[onPdfPagePointerDown$] = onPdfPagePointerDown;
    this[onPdfPagePointerMove$] = onPdfPagePointerMove;
    this[onPdfPagePointerUp$] = onPdfPagePointerUp;
    this[semanticLabel$] = semanticLabel;
    this[isSinglePageView$1] = isSinglePageView;
    pdf_page_view.PdfPageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdf_page_view.PdfPageView.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageView);
  dart.addTypeCaches(pdf_page_view.PdfPageView);
  dart.setMethodSignature(pdf_page_view.PdfPageView, () => ({
    __proto__: dart.getMethods(pdf_page_view.PdfPageView.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(pdf_page_view.PdfPageView, I[17]);
  dart.setFieldSignature(pdf_page_view.PdfPageView, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageView.__proto__),
    imageStream: dart.finalFieldType(dart.nullable(typed_data.Uint8List)),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    pageSpacing: dart.finalFieldType(core.double),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument)),
    viewportGlobalRect: dart.finalFieldType(dart.nullable(ui.Rect)),
    parentViewport: dart.finalFieldType(ui.Size),
    enableDocumentLinkAnnotation: dart.finalFieldType(core.bool),
    pageIndex: dart.finalFieldType(core.int),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    enableTextSelection: dart.finalFieldType(core.bool),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    onTextSelectionDragStarted: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionDragEnded: dart.finalFieldType(dart.fnType(dart.void, [])),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    textCollection: dart.finalFieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    pdfTextSearchResult: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    isMobileWebView: dart.finalFieldType(core.bool),
    pdfScrollableStateKey: dart.finalFieldType(framework.GlobalKey$(pdf_scrollable.PdfScrollableState)),
    singlePageViewStateKey: dart.finalFieldType(framework.GlobalKey$(single_page_view.SinglePageViewState)),
    scrollDirection: dart.finalFieldType(enums.PdfScrollDirection),
    onPdfPagePointerDown: dart.finalFieldType(dart.fnType(dart.void, [events.PointerDownEvent])),
    onPdfPagePointerMove: dart.finalFieldType(dart.fnType(dart.void, [events.PointerMoveEvent])),
    onPdfPagePointerUp: dart.finalFieldType(dart.fnType(dart.void, [events.PointerUpEvent])),
    semanticLabel: dart.finalFieldType(dart.nullable(core.String)),
    isSinglePageView: dart.finalFieldType(core.bool)
  }));
  var focusNode = dart.privateName(pdf_page_view, "PdfPageViewState.focusNode");
  var _pdfViewerThemeData$3 = dart.privateName(pdf_page_view, "_pdfViewerThemeData");
  var _canvasKey = dart.privateName(pdf_page_view, "_canvasKey");
  var _lastTap = dart.privateName(pdf_page_view, "_lastTap");
  var _consecutiveTaps = dart.privateName(pdf_page_view, "_consecutiveTaps");
  var _jumpOffset$ = dart.privateName(pdf_page_view, "_jumpOffset");
  var _cursor = dart.privateName(pdf_page_view, "_cursor");
  pdf_page_view.PdfPageViewState = class PdfPageViewState extends framework.State$(pdf_page_view.PdfPageView) {
    get focusNode() {
      return this[focusNode];
    }
    set focusNode(value) {
      this[focusNode] = value;
    }
    get canvasRenderBox() {
      let t41, t41$;
      return (t41 = this[_canvasKey].currentContext, t41 == null ? null : t41.findRenderObject()) != null ? pdfviewer_canvas.CanvasRenderBox.as((t41$ = this[_canvasKey].currentContext, t41$ == null ? null : dart.nullCheck(t41$.findRenderObject()))) : null;
    }
    initState() {
      if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
        web_helper.preventDefaultMenu();
        this.focusNode.addListener(dart.fn(() => {
          web_helper.hasPrimaryFocus = this.focusNode.hasFocus;
        }, T.VoidTovoid()));
      }
      super.initState();
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$3] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      let t42, t41, t42$, t41$;
      t41 = binding$.PaintingBinding.instance;
      t41 == null ? null : (t42 = t41.imageCache, t42 == null ? null : t42.clear());
      t41$ = binding$.PaintingBinding.instance;
      t41$ == null ? null : (t42$ = t41$.imageCache, t42$ == null ? null : t42$.clearLiveImages());
      this[_pdfViewerThemeData$3] = null;
      super.dispose();
    }
    build(context) {
      let t42, t41, t42$, t41$;
      if (context == null) dart.nullFailed(I[16], 191, 29, "context");
      if (!dart.test(pdfviewer_helper.kIsDesktop)) {
        t41 = binding$.PaintingBinding.instance;
        t41 == null ? null : (t42 = t41.imageCache, t42 == null ? null : t42.clear());
        t41$ = binding$.PaintingBinding.instance;
        t41$ == null ? null : (t42$ = t41$.imageCache, t42$ == null ? null : t42$.clearLiveImages());
      }
      let pageSpacing = this.widget.pageIndex === dart.notNull(this.widget.pdfViewerController.pageCount) - 1 ? 0.0 : this.widget.pageSpacing;
      let heightSpacing = this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? 0.0 : pageSpacing;
      let widthSpacing = this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && !dart.test(this.widget.isSinglePageView) ? pageSpacing : 0.0;
      if (this.widget.imageStream != null) {
        let rotatedAngle = dart.nullCheck(this.widget.pdfDocument).pages._get(this.widget.pageIndex).rotation;
        let image = new image$.Image.memory(dart.nullCheck(this.widget.imageStream), {width: this.widget.width, height: this.widget.height, fit: box_fit.BoxFit.fitWidth, semanticLabel: this.widget.semanticLabel, alignment: alignment$.Alignment.center, $creationLocationd_0dea112b090073317d4: C[447] || CT.C447});
        let pdfPage = new container.Container.new({height: dart.notNull(this.widget.height) + dart.notNull(heightSpacing), width: dart.notNull(this.widget.width) + dart.notNull(widthSpacing), color: colors.Colors.white, alignment: alignment$.Alignment.topCenter, child: this.widget.scrollDirection == enums.PdfScrollDirection.vertical ? new basic.Column.new({children: T.JSArrayOfWidget().of([image, new container.Container.new({height: pageSpacing, color: dart.nullCheck(this[_pdfViewerThemeData$3]).backgroundColor, $creationLocationd_0dea112b090073317d4: C[455] || CT.C455})]), $creationLocationd_0dea112b090073317d4: C[459] || CT.C459}) : new basic.Row.new({children: T.JSArrayOfWidget().of([image, new container.Container.new({width: dart.test(this.widget.isSinglePageView) ? 0.0 : pageSpacing, color: dart.nullCheck(this[_pdfViewerThemeData$3]).backgroundColor, $creationLocationd_0dea112b090073317d4: C[462] || CT.C462})]), $creationLocationd_0dea112b090073317d4: C[466] || CT.C466}), $creationLocationd_0dea112b090073317d4: C[469] || CT.C469});
        let quarterTurns = 0;
        if (rotatedAngle == pdf.PdfPageRotateAngle.rotateAngle90) {
          quarterTurns = 1;
        } else if (rotatedAngle == pdf.PdfPageRotateAngle.rotateAngle180) {
          quarterTurns = 2;
        } else if (rotatedAngle == pdf.PdfPageRotateAngle.rotateAngle270) {
          quarterTurns = 3;
        }
        let isRotatedTo90or270 = rotatedAngle == pdf.PdfPageRotateAngle.rotateAngle90 || rotatedAngle == pdf.PdfPageRotateAngle.rotateAngle270;
        let canvasContainer = new container.Container.new({height: isRotatedTo90or270 ? this.widget.width : this.widget.height, width: isRotatedTo90or270 ? this.widget.height : this.widget.width, alignment: alignment$.Alignment.topCenter, child: new pdfviewer_canvas.PdfViewerCanvas.new(this[_canvasKey], isRotatedTo90or270 ? this.widget.width : this.widget.height, isRotatedTo90or270 ? this.widget.height : this.widget.width, this.widget.pdfDocument, this.widget.pageIndex, this.widget.pdfPages, this.widget.interactionMode, this.widget.pdfViewerController, this.widget.enableDocumentLinkAnnotation, this.widget.enableTextSelection, this.widget.onTextSelectionChanged, this.widget.onTextSelectionDragStarted, this.widget.onTextSelectionDragEnded, this.widget.textCollection, this.widget.searchTextHighlightColor, this.widget.pdfTextSearchResult, this.widget.isMobileWebView, this.widget.pdfScrollableStateKey, this.widget.singlePageViewStateKey, this.widget.viewportGlobalRect, this.widget.scrollDirection, this.widget.isSinglePageView, {$creationLocationd_0dea112b090073317d4: C[476] || CT.C476}), $creationLocationd_0dea112b090073317d4: C[500] || CT.C500});
        let canvas = dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView) && this.canvasRenderBox != null ? new basic.RotatedBox.new({quarterTurns: quarterTurns, child: new basic.Listener.new({onPointerSignal: dart.fn(details => {
              let t41;
              if (details == null) dart.nullFailed(I[16], 285, 54, "details");
              if (dart.test(this.widget.isSinglePageView) && events.PointerScrollEvent.is(details)) {
                t41 = this.widget.singlePageViewStateKey.currentState;
                t41 == null ? null : t41.jumpTo({yOffset: dart.notNull(this.widget.pdfViewerController.scrollOffset.dy) + dart.notNull(details.scrollDelta.dy[$isNegative] ? -dart.notNull(this[_jumpOffset$]) : this[_jumpOffset$])});
              }
              dart.nullCheck(this.canvasRenderBox).updateContextMenuPosition();
            }, T.PointerSignalEventTovoid()), onPointerDown: dart.fn(details => {
              let t42, t41;
              if (details == null) dart.nullFailed(I[16], 296, 50, "details");
              t41 = this.widget;
              t42 = details;
              t41.onPdfPagePointerDown(t42);
              if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this.widget.isMobileWebView)) {
                let now = new core.DateTime.now().millisecondsSinceEpoch;
                if (dart.notNull(now) - dart.notNull(this[_lastTap]) <= 500) {
                  this[_consecutiveTaps] = dart.notNull(this[_consecutiveTaps]) + 1;
                  if (this[_consecutiveTaps] === 2 && details.buttons !== 2) {
                    this.focusNode.requestFocus();
                    dart.nullCheck(this.canvasRenderBox).handleDoubleTapDown(details);
                  }
                  if (this[_consecutiveTaps] === 3 && details.buttons !== 2) {
                    this.focusNode.requestFocus();
                    dart.nullCheck(this.canvasRenderBox).handleTripleTapDown(details);
                  }
                } else {
                  this[_consecutiveTaps] = 1;
                }
                this[_lastTap] = now;
              }
            }, T.PointerDownEventTovoid()), onPointerMove: dart.fn(details => {
              let t42, t41;
              if (details == null) dart.nullFailed(I[16], 318, 50, "details");
              this.focusNode.requestFocus();
              t41 = this.widget;
              t42 = details;
              t41.onPdfPagePointerMove(t42);
              if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
                this[_cursor] = mouse_cursor.SystemMouseCursors.grabbing;
              }
            }, T.PointerMoveEventTovoid()), onPointerUp: dart.fn(details => {
              let t42, t41;
              if (details == null) dart.nullFailed(I[16], 325, 46, "details");
              t41 = this.widget;
              t42 = details;
              t41.onPdfPagePointerUp(t42);
              if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
                this[_cursor] = mouse_cursor.SystemMouseCursors.grab;
              }
            }, T.PointerUpEventTovoid()), child: new raw_keyboard_listener.RawKeyboardListener.new({focusNode: this.focusNode, onKey: dart.fn(event => {
                let t41;
                if (event == null) dart.nullFailed(I[16], 333, 39, "event");
                let isPrimaryKeyPressed = dart.test(pdfviewer_helper.kIsMacOS) ? event.isMetaPressed : event.isControlPressed;
                if ((dart.test(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().mouseSelectionEnabled) || dart.test(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().selectionEnabled)) && dart.test(isPrimaryKeyPressed) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.keyC)) {
                  clipboard.Clipboard.setData(new clipboard.ClipboardData.new({text: (t41 = dart.nullCheck(this.canvasRenderBox).getSelectionDetails().copiedText, t41 == null ? "" : t41)}));
                }
                if (dart.test(isPrimaryKeyPressed) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.digit0)) {
                  this.widget.pdfViewerController.zoomLevel = 1.0;
                }
                if (dart.test(isPrimaryKeyPressed) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.minus)) {
                  if (dart.toString(dart.runtimeType(event)) === "RawKeyDownEvent") {
                    let zoomLevel = this.widget.pdfViewerController.zoomLevel;
                    if (dart.notNull(zoomLevel) >= 1.0 && dart.notNull(zoomLevel) <= 1.25) {
                      zoomLevel = 1.0;
                    } else if (dart.notNull(zoomLevel) > 1.25 && dart.notNull(zoomLevel) <= 1.5) {
                      zoomLevel = 1.25;
                    } else if (dart.notNull(zoomLevel) > 1.5 && dart.notNull(zoomLevel) <= 2.0) {
                      zoomLevel = 1.5;
                    } else {
                      zoomLevel = 2.0;
                    }
                    this.widget.pdfViewerController.zoomLevel = zoomLevel;
                  }
                }
                if (dart.test(isPrimaryKeyPressed) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.equal)) {
                  if (dart.toString(dart.runtimeType(event)) === "RawKeyDownEvent") {
                    let zoomLevel = this.widget.pdfViewerController.zoomLevel;
                    if (dart.notNull(zoomLevel) >= 1.0 && dart.notNull(zoomLevel) < 1.25) {
                      zoomLevel = 1.25;
                    } else if (dart.notNull(zoomLevel) >= 1.25 && dart.notNull(zoomLevel) < 1.5) {
                      zoomLevel = 1.5;
                    } else if (dart.notNull(zoomLevel) >= 1.5 && dart.notNull(zoomLevel) < 2.0) {
                      zoomLevel = 2.0;
                    } else {
                      zoomLevel = 3.0;
                    }
                    this.widget.pdfViewerController.zoomLevel = zoomLevel;
                  }
                }
                if (dart.toString(dart.runtimeType(event)) === "RawKeyDownEvent") {
                  if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.home) || dart.test(pdfviewer_helper.kIsMacOS) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.fn) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowLeft)) {
                    this.widget.pdfViewerController.jumpToPage(1);
                  } else if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.end) || dart.test(pdfviewer_helper.kIsMacOS) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.fn) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowRight)) {
                    this.widget.pdfViewerController.jumpToPage(this.widget.pdfViewerController.pageCount);
                  } else if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowRight)) {
                    this.widget.pdfViewerController.nextPage();
                  } else if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowLeft)) {
                    this.widget.pdfViewerController.previousPage();
                  }
                }
                if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowUp)) {
                  dart.nullCheck(this.canvasRenderBox).scroll(true, false);
                }
                if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowDown)) {
                  dart.nullCheck(this.canvasRenderBox).scroll(false, false);
                }
              }, T.RawKeyEventTovoid()), child: new basic.MouseRegion.new({cursor: this[_cursor], onHover: dart.fn(details => {
                  if (details == null) dart.nullFailed(I[16], 417, 49, "details");
                  this.setState(dart.fn(() => {
                    if (this.canvasRenderBox != null) {
                      if (this.widget.interactionMode == enums.PdfInteractionMode.selection) {
                        let isText = dart.nullCheck(this.canvasRenderBox).findTextWhileHover(details.localPosition) != null;
                        let isTOC = dart.nullCheck(this.canvasRenderBox).findTOC(details.localPosition);
                        if (dart.test(isTOC)) {
                          this[_cursor] = mouse_cursor.SystemMouseCursors.click;
                        } else if (isText && !dart.test(isTOC)) {
                          if (isRotatedTo90or270) {
                            this[_cursor] = mouse_cursor.SystemMouseCursors.verticalText;
                          } else {
                            this[_cursor] = mouse_cursor.SystemMouseCursors.text;
                          }
                        } else {
                          this[_cursor] = mouse_cursor.SystemMouseCursors.basic;
                        }
                      } else {
                        let isTOC = dart.nullCheck(this.canvasRenderBox).findTOC(details.localPosition);
                        if (dart.test(isTOC)) {
                          this[_cursor] = mouse_cursor.SystemMouseCursors.click;
                        } else if (!dart.equals(this[_cursor], mouse_cursor.SystemMouseCursors.grab)) {
                          this[_cursor] = mouse_cursor.SystemMouseCursors.grab;
                        }
                      }
                    }
                  }, T.VoidTovoid()));
                }, T.PointerHoverEventTovoid()), child: canvasContainer, $creationLocationd_0dea112b090073317d4: C[506] || CT.C506}), $creationLocationd_0dea112b090073317d4: C[511] || CT.C511}), $creationLocationd_0dea112b090073317d4: C[516] || CT.C516}), $creationLocationd_0dea112b090073317d4: C[523] || CT.C523}) : new basic.RotatedBox.new({quarterTurns: quarterTurns, child: new basic.Listener.new({onPointerDown: dart.fn(details => {
              let t42, t41;
              if (details == null) dart.nullFailed(I[16], 459, 52, "details");
              t41 = this.widget;
              t42 = details;
              t41.onPdfPagePointerDown(t42);
            }, T.PointerDownEventTovoid()), child: canvasContainer, $creationLocationd_0dea112b090073317d4: C[527] || CT.C527}), $creationLocationd_0dea112b090073317d4: C[531] || CT.C531});
        return new basic.Stack.new({children: T.JSArrayOfWidget().of([pdfPage, canvas]), $creationLocationd_0dea112b090073317d4: C[535] || CT.C535});
      } else {
        let borderSide = new borders.BorderSide.new({width: dart.test(this.widget.isSinglePageView) ? dart.notNull(pageSpacing) / 2 : pageSpacing, color: dart.nullCheck(this[_pdfViewerThemeData$3]).backgroundColor});
        let child = new container.Container.new({height: dart.notNull(this.widget.height) + dart.notNull(heightSpacing), width: dart.notNull(this.widget.width) + dart.notNull(widthSpacing), color: colors.Colors.white, foregroundDecoration: new box_decoration.BoxDecoration.new({border: dart.test(this.widget.isSinglePageView) ? new box_border.Border.new({left: borderSide, right: borderSide}) : this.widget.scrollDirection == enums.PdfScrollDirection.horizontal ? new box_border.Border.new({right: borderSide}) : new box_border.Border.new({bottom: borderSide})}), $creationLocationd_0dea112b090073317d4: C[538] || CT.C538});
        return child;
      }
    }
  };
  (pdf_page_view.PdfPageViewState.new = function() {
    this[_pdfViewerThemeData$3] = null;
    this[_canvasKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_lastTap] = new core.DateTime.now().millisecondsSinceEpoch;
    this[_consecutiveTaps] = 1;
    this[_jumpOffset$] = 10.0;
    this[_cursor] = mouse_cursor.SystemMouseCursors.basic;
    this[focusNode] = new focus_manager.FocusNode.new();
    pdf_page_view.PdfPageViewState.__proto__.new.call(this);
    ;
  }).prototype = pdf_page_view.PdfPageViewState.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageViewState);
  dart.addTypeCaches(pdf_page_view.PdfPageViewState);
  dart.setMethodSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getMethods(pdf_page_view.PdfPageViewState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getGetters(pdf_page_view.PdfPageViewState.__proto__),
    canvasRenderBox: dart.nullable(pdfviewer_canvas.CanvasRenderBox)
  }));
  dart.setLibraryUri(pdf_page_view.PdfPageViewState, I[17]);
  dart.setFieldSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageViewState.__proto__),
    [_pdfViewerThemeData$3]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_canvasKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_lastTap]: dart.fieldType(core.int),
    [_consecutiveTaps]: dart.fieldType(core.int),
    [_jumpOffset$]: dart.finalFieldType(core.double),
    [_cursor]: dart.fieldType(mouse_cursor.SystemMouseCursor),
    focusNode: dart.fieldType(focus_manager.FocusNode)
  }));
  var pageOffset$ = dart.privateName(pdf_page_view, "PdfPageInfo.pageOffset");
  var pageSize$ = dart.privateName(pdf_page_view, "PdfPageInfo.pageSize");
  pdf_page_view.PdfPageInfo = class PdfPageInfo extends core.Object {
    get pageOffset() {
      return this[pageOffset$];
    }
    set pageOffset(value) {
      super.pageOffset = value;
    }
    get pageSize() {
      return this[pageSize$];
    }
    set pageSize(value) {
      super.pageSize = value;
    }
  };
  (pdf_page_view.PdfPageInfo.new = function(pageOffset, pageSize) {
    if (pageOffset == null) dart.nullFailed(I[16], 491, 20, "pageOffset");
    if (pageSize == null) dart.nullFailed(I[16], 491, 37, "pageSize");
    this[pageOffset$] = pageOffset;
    this[pageSize$] = pageSize;
    ;
  }).prototype = pdf_page_view.PdfPageInfo.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageInfo);
  dart.addTypeCaches(pdf_page_view.PdfPageInfo);
  dart.setLibraryUri(pdf_page_view.PdfPageInfo, I[17]);
  dart.setFieldSignature(pdf_page_view.PdfPageInfo, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageInfo.__proto__),
    pageOffset: dart.finalFieldType(core.double),
    pageSize: dart.finalFieldType(ui.Size)
  }));
  var interactionMode$4 = dart.privateName(pdfviewer, "SfPdfViewer.interactionMode");
  var initialZoomLevel$ = dart.privateName(pdfviewer, "SfPdfViewer.initialZoomLevel");
  var initialScrollOffset$ = dart.privateName(pdfviewer, "SfPdfViewer.initialScrollOffset");
  var enableDocumentLinkAnnotation$0 = dart.privateName(pdfviewer, "SfPdfViewer.enableDocumentLinkAnnotation");
  var pageSpacing$0 = dart.privateName(pdfviewer, "SfPdfViewer.pageSpacing");
  var controller$0 = dart.privateName(pdfviewer, "SfPdfViewer.controller");
  var canShowScrollHead$2 = dart.privateName(pdfviewer, "SfPdfViewer.canShowScrollHead");
  var canShowScrollStatus$2 = dart.privateName(pdfviewer, "SfPdfViewer.canShowScrollStatus");
  var canShowPaginationDialog$2 = dart.privateName(pdfviewer, "SfPdfViewer.canShowPaginationDialog");
  var enableDoubleTapZooming$2 = dart.privateName(pdfviewer, "SfPdfViewer.enableDoubleTapZooming");
  var enableTextSelection$1 = dart.privateName(pdfviewer, "SfPdfViewer.enableTextSelection");
  var searchTextHighlightColor$1 = dart.privateName(pdfviewer, "SfPdfViewer.searchTextHighlightColor");
  var onDocumentLoaded$ = dart.privateName(pdfviewer, "SfPdfViewer.onDocumentLoaded");
  var onDocumentLoadFailed$ = dart.privateName(pdfviewer, "SfPdfViewer.onDocumentLoadFailed");
  var onZoomLevelChanged$0 = dart.privateName(pdfviewer, "SfPdfViewer.onZoomLevelChanged");
  var onTextSelectionChanged$1 = dart.privateName(pdfviewer, "SfPdfViewer.onTextSelectionChanged");
  var onPageChanged$0 = dart.privateName(pdfviewer, "SfPdfViewer.onPageChanged");
  var scrollDirection$4 = dart.privateName(pdfviewer, "SfPdfViewer.scrollDirection");
  var pageLayoutMode$0 = dart.privateName(pdfviewer, "SfPdfViewer.pageLayoutMode");
  var _name$1 = dart.privateName(enums, "_name");
  var _provider = dart.privateName(pdfviewer, "_provider");
  pdfviewer.SfPdfViewer = class SfPdfViewer extends framework.StatefulWidget {
    get interactionMode() {
      return this[interactionMode$4];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get initialZoomLevel() {
      return this[initialZoomLevel$];
    }
    set initialZoomLevel(value) {
      super.initialZoomLevel = value;
    }
    get initialScrollOffset() {
      return this[initialScrollOffset$];
    }
    set initialScrollOffset(value) {
      super.initialScrollOffset = value;
    }
    get enableDocumentLinkAnnotation() {
      return this[enableDocumentLinkAnnotation$0];
    }
    set enableDocumentLinkAnnotation(value) {
      super.enableDocumentLinkAnnotation = value;
    }
    get pageSpacing() {
      return this[pageSpacing$0];
    }
    set pageSpacing(value) {
      super.pageSpacing = value;
    }
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$2];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get canShowScrollStatus() {
      return this[canShowScrollStatus$2];
    }
    set canShowScrollStatus(value) {
      super.canShowScrollStatus = value;
    }
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$2];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$2];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$1];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$1];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get onDocumentLoaded() {
      return this[onDocumentLoaded$];
    }
    set onDocumentLoaded(value) {
      super.onDocumentLoaded = value;
    }
    get onDocumentLoadFailed() {
      return this[onDocumentLoadFailed$];
    }
    set onDocumentLoadFailed(value) {
      super.onDocumentLoadFailed = value;
    }
    get onZoomLevelChanged() {
      return this[onZoomLevelChanged$0];
    }
    set onZoomLevelChanged(value) {
      super.onZoomLevelChanged = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$1];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get onPageChanged() {
      return this[onPageChanged$0];
    }
    set onPageChanged(value) {
      super.onPageChanged = value;
    }
    get scrollDirection() {
      return this[scrollDirection$4];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get pageLayoutMode() {
      return this[pageLayoutMode$0];
    }
    set pageLayoutMode(value) {
      super.pageLayoutMode = value;
    }
    createState() {
      return new pdfviewer.SfPdfViewerState.new();
    }
  };
  (pdfviewer.SfPdfViewer.asset = function(name, opts) {
    if (name == null) dart.nullFailed(I[18], 120, 28, "name");
    let key = opts && 'key' in opts ? opts.key : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    if (canShowScrollHead == null) dart.nullFailed(I[18], 123, 12, "canShowScrollHead");
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    if (pageSpacing == null) dart.nullFailed(I[18], 124, 12, "pageSpacing");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    if (canShowScrollStatus == null) dart.nullFailed(I[18], 127, 12, "canShowScrollStatus");
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    if (enableDoubleTapZooming == null) dart.nullFailed(I[18], 130, 12, "enableDoubleTapZooming");
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    if (enableTextSelection == null) dart.nullFailed(I[18], 131, 12, "enableTextSelection");
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[18], 134, 12, "enableDocumentLinkAnnotation");
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    if (canShowPaginationDialog == null) dart.nullFailed(I[18], 135, 12, "canShowPaginationDialog");
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[210] || CT.C210;
    if (initialScrollOffset == null) dart.nullFailed(I[18], 136, 12, "initialScrollOffset");
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    if (initialZoomLevel == null) dart.nullFailed(I[18], 137, 12, "initialZoomLevel");
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[544] || CT.C544;
    if (interactionMode == null) dart.nullFailed(I[18], 138, 12, "interactionMode");
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[545] || CT.C545;
    if (scrollDirection == null) dart.nullFailed(I[18], 139, 12, "scrollDirection");
    let pageLayoutMode = opts && 'pageLayoutMode' in opts ? opts.pageLayoutMode : C[546] || CT.C546;
    if (pageLayoutMode == null) dart.nullFailed(I[18], 140, 12, "pageLayoutMode");
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[547] || CT.C547;
    if (searchTextHighlightColor == null) dart.nullFailed(I[18], 141, 12, "searchTextHighlightColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$2] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$0] = onZoomLevelChanged;
    this[canShowScrollStatus$2] = canShowScrollStatus;
    this[onPageChanged$0] = onPageChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[enableDoubleTapZooming$2] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$2] = canShowPaginationDialog;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[interactionMode$4] = interactionMode;
    this[scrollDirection$4] = scrollDirection;
    this[pageLayoutMode$0] = pageLayoutMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.AssetPdf.new(name, bundle);
    if (!(dart.notNull(pageSpacing) >= 0)) dart.assertFailed(null, I[18], 143, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.network = function(src, opts) {
    if (src == null) dart.nullFailed(I[18], 168, 30, "src");
    let key = opts && 'key' in opts ? opts.key : null;
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    if (canShowScrollHead == null) dart.nullFailed(I[18], 171, 12, "canShowScrollHead");
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    if (pageSpacing == null) dart.nullFailed(I[18], 172, 12, "pageSpacing");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    if (canShowScrollStatus == null) dart.nullFailed(I[18], 175, 12, "canShowScrollStatus");
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    if (enableDoubleTapZooming == null) dart.nullFailed(I[18], 177, 12, "enableDoubleTapZooming");
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    if (enableTextSelection == null) dart.nullFailed(I[18], 178, 12, "enableTextSelection");
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[18], 182, 12, "enableDocumentLinkAnnotation");
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    if (canShowPaginationDialog == null) dart.nullFailed(I[18], 183, 12, "canShowPaginationDialog");
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[210] || CT.C210;
    if (initialScrollOffset == null) dart.nullFailed(I[18], 184, 12, "initialScrollOffset");
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    if (initialZoomLevel == null) dart.nullFailed(I[18], 185, 12, "initialZoomLevel");
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[544] || CT.C544;
    if (interactionMode == null) dart.nullFailed(I[18], 186, 12, "interactionMode");
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[545] || CT.C545;
    if (scrollDirection == null) dart.nullFailed(I[18], 187, 12, "scrollDirection");
    let pageLayoutMode = opts && 'pageLayoutMode' in opts ? opts.pageLayoutMode : C[546] || CT.C546;
    if (pageLayoutMode == null) dart.nullFailed(I[18], 188, 12, "pageLayoutMode");
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[547] || CT.C547;
    if (searchTextHighlightColor == null) dart.nullFailed(I[18], 189, 12, "searchTextHighlightColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$2] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$0] = onZoomLevelChanged;
    this[canShowScrollStatus$2] = canShowScrollStatus;
    this[onPageChanged$0] = onPageChanged;
    this[enableDoubleTapZooming$2] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$2] = canShowPaginationDialog;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[interactionMode$4] = interactionMode;
    this[scrollDirection$4] = scrollDirection;
    this[pageLayoutMode$0] = pageLayoutMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.NetworkPdf.new(src, headers);
    if (!(dart.notNull(pageSpacing) >= 0)) dart.assertFailed(null, I[18], 191, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.memory = function(bytes, opts) {
    if (bytes == null) dart.nullFailed(I[18], 215, 32, "bytes");
    let key = opts && 'key' in opts ? opts.key : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    if (canShowScrollHead == null) dart.nullFailed(I[18], 217, 12, "canShowScrollHead");
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    if (pageSpacing == null) dart.nullFailed(I[18], 218, 12, "pageSpacing");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    if (canShowScrollStatus == null) dart.nullFailed(I[18], 221, 12, "canShowScrollStatus");
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    if (enableDoubleTapZooming == null) dart.nullFailed(I[18], 223, 12, "enableDoubleTapZooming");
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    if (enableTextSelection == null) dart.nullFailed(I[18], 224, 12, "enableTextSelection");
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[18], 228, 12, "enableDocumentLinkAnnotation");
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    if (canShowPaginationDialog == null) dart.nullFailed(I[18], 229, 12, "canShowPaginationDialog");
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[210] || CT.C210;
    if (initialScrollOffset == null) dart.nullFailed(I[18], 230, 12, "initialScrollOffset");
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    if (initialZoomLevel == null) dart.nullFailed(I[18], 231, 12, "initialZoomLevel");
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[544] || CT.C544;
    if (interactionMode == null) dart.nullFailed(I[18], 232, 12, "interactionMode");
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[545] || CT.C545;
    if (scrollDirection == null) dart.nullFailed(I[18], 233, 12, "scrollDirection");
    let pageLayoutMode = opts && 'pageLayoutMode' in opts ? opts.pageLayoutMode : C[546] || CT.C546;
    if (pageLayoutMode == null) dart.nullFailed(I[18], 234, 12, "pageLayoutMode");
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[547] || CT.C547;
    if (searchTextHighlightColor == null) dart.nullFailed(I[18], 235, 12, "searchTextHighlightColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$2] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$0] = onZoomLevelChanged;
    this[canShowScrollStatus$2] = canShowScrollStatus;
    this[onPageChanged$0] = onPageChanged;
    this[enableDoubleTapZooming$2] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$2] = canShowPaginationDialog;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[interactionMode$4] = interactionMode;
    this[scrollDirection$4] = scrollDirection;
    this[pageLayoutMode$0] = pageLayoutMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.MemoryPdf.new(bytes);
    if (!(dart.notNull(pageSpacing) >= 0)) dart.assertFailed(null, I[18], 237, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.file = function(file, opts) {
    if (file == null) dart.nullFailed(I[18], 266, 10, "file");
    let key = opts && 'key' in opts ? opts.key : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    if (canShowScrollHead == null) dart.nullFailed(I[18], 268, 10, "canShowScrollHead");
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    if (pageSpacing == null) dart.nullFailed(I[18], 269, 10, "pageSpacing");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    if (canShowScrollStatus == null) dart.nullFailed(I[18], 272, 10, "canShowScrollStatus");
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    if (enableDoubleTapZooming == null) dart.nullFailed(I[18], 274, 10, "enableDoubleTapZooming");
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    if (enableTextSelection == null) dart.nullFailed(I[18], 275, 10, "enableTextSelection");
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[18], 279, 10, "enableDocumentLinkAnnotation");
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    if (canShowPaginationDialog == null) dart.nullFailed(I[18], 280, 10, "canShowPaginationDialog");
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[210] || CT.C210;
    if (initialScrollOffset == null) dart.nullFailed(I[18], 281, 10, "initialScrollOffset");
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    if (initialZoomLevel == null) dart.nullFailed(I[18], 282, 10, "initialZoomLevel");
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[544] || CT.C544;
    if (interactionMode == null) dart.nullFailed(I[18], 283, 10, "interactionMode");
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[545] || CT.C545;
    if (scrollDirection == null) dart.nullFailed(I[18], 284, 10, "scrollDirection");
    let pageLayoutMode = opts && 'pageLayoutMode' in opts ? opts.pageLayoutMode : C[546] || CT.C546;
    if (pageLayoutMode == null) dart.nullFailed(I[18], 285, 10, "pageLayoutMode");
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[547] || CT.C547;
    if (searchTextHighlightColor == null) dart.nullFailed(I[18], 286, 10, "searchTextHighlightColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$2] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$0] = onZoomLevelChanged;
    this[canShowScrollStatus$2] = canShowScrollStatus;
    this[onPageChanged$0] = onPageChanged;
    this[enableDoubleTapZooming$2] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$2] = canShowPaginationDialog;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[interactionMode$4] = interactionMode;
    this[scrollDirection$4] = scrollDirection;
    this[pageLayoutMode$0] = pageLayoutMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.FilePdf.new(file);
    if (!(dart.notNull(pageSpacing) >= 0)) dart.assertFailed(null, I[18], 288, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  dart.addTypeTests(pdfviewer.SfPdfViewer);
  dart.addTypeCaches(pdfviewer.SfPdfViewer);
  dart.setMethodSignature(pdfviewer.SfPdfViewer, () => ({
    __proto__: dart.getMethods(pdfviewer.SfPdfViewer.__proto__),
    createState: dart.fnType(pdfviewer.SfPdfViewerState, [])
  }));
  dart.setLibraryUri(pdfviewer.SfPdfViewer, I[19]);
  dart.setFieldSignature(pdfviewer.SfPdfViewer, () => ({
    __proto__: dart.getFields(pdfviewer.SfPdfViewer.__proto__),
    [_provider]: dart.finalFieldType(pdf_provider.PdfProvider),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    initialZoomLevel: dart.finalFieldType(core.double),
    initialScrollOffset: dart.finalFieldType(ui.Offset),
    enableDocumentLinkAnnotation: dart.finalFieldType(core.bool),
    pageSpacing: dart.finalFieldType(core.double),
    controller: dart.finalFieldType(dart.nullable(pdfviewer.PdfViewerController)),
    canShowScrollHead: dart.finalFieldType(core.bool),
    canShowScrollStatus: dart.finalFieldType(core.bool),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    enableTextSelection: dart.finalFieldType(core.bool),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    onDocumentLoaded: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfDocumentLoadedDetails]))),
    onDocumentLoadFailed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfDocumentLoadFailedDetails]))),
    onZoomLevelChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfZoomDetails]))),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    onPageChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfPageChangedDetails]))),
    scrollDirection: dart.finalFieldType(enums.PdfScrollDirection),
    pageLayoutMode: dart.finalFieldType(enums.PdfPageLayoutMode)
  }));
  var __SfPdfViewerState__plugin = dart.privateName(pdfviewer, "_#SfPdfViewerState#_plugin");
  var __SfPdfViewerState__plugin_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_plugin#isSet");
  var __SfPdfViewerState__pdfViewerController = dart.privateName(pdfviewer, "_#SfPdfViewerState#_pdfViewerController");
  var __SfPdfViewerState__pdfViewerController_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_pdfViewerController#isSet");
  var _getPdfFileCancellableOperation = dart.privateName(pdfviewer, "_getPdfFileCancellableOperation");
  var _pdfDocumentLoadCancellableOperation = dart.privateName(pdfviewer, "_pdfDocumentLoadCancellableOperation");
  var _getHeightCancellableOperation = dart.privateName(pdfviewer, "_getHeightCancellableOperation");
  var _getWidthCancellableOperation = dart.privateName(pdfviewer, "_getWidthCancellableOperation");
  var _originalHeight = dart.privateName(pdfviewer, "_originalHeight");
  var _originalWidth = dart.privateName(pdfviewer, "_originalWidth");
  var _viewportHeightInLandscape = dart.privateName(pdfviewer, "_viewportHeightInLandscape");
  var _otherContextHeight = dart.privateName(pdfviewer, "_otherContextHeight");
  var _maxPdfPageWidth = dart.privateName(pdfviewer, "_maxPdfPageWidth");
  var _minScale = dart.privateName(pdfviewer, "_minScale");
  var _maxScale = dart.privateName(pdfviewer, "_maxScale");
  var _isScaleEnabled = dart.privateName(pdfviewer, "_isScaleEnabled");
  var _isPdfPageTapped = dart.privateName(pdfviewer, "_isPdfPageTapped");
  var _isDocumentLoadInitiated = dart.privateName(pdfviewer, "_isDocumentLoadInitiated");
  var _deviceOrientation = dart.privateName(pdfviewer, "_deviceOrientation");
  var _viewportWidth = dart.privateName(pdfviewer, "_viewportWidth");
  var _offsetBeforeOrientationChange = dart.privateName(pdfviewer, "_offsetBeforeOrientationChange");
  var __SfPdfViewerState__viewportConstraints = dart.privateName(pdfviewer, "_#SfPdfViewerState#_viewportConstraints");
  var __SfPdfViewerState__viewportConstraints_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_viewportConstraints#isSet");
  var _previousPageNumber = dart.privateName(pdfviewer, "_previousPageNumber");
  var _document = dart.privateName(pdfviewer, "_document");
  var _hasError = dart.privateName(pdfviewer, "_hasError");
  var _panEnabled = dart.privateName(pdfviewer, "_panEnabled");
  var _isMobile = dart.privateName(pdfviewer, "_isMobile");
  var _isSearchStarted = dart.privateName(pdfviewer, "_isSearchStarted");
  var _isKeyPadRaised = dart.privateName(pdfviewer, "_isKeyPadRaised");
  var _isTextSelectionCleared = dart.privateName(pdfviewer, "_isTextSelectionCleared");
  var _pdfPages = dart.privateName(pdfviewer, "_pdfPages");
  var _childKey$ = dart.privateName(pdfviewer, "_childKey");
  var _singlePageViewKey = dart.privateName(pdfviewer, "_singlePageViewKey");
  var _bookmarkKey = dart.privateName(pdfviewer, "_bookmarkKey");
  var _pdfScrollableStateKey = dart.privateName(pdfviewer, "_pdfScrollableStateKey");
  var _pdfPagesKey = dart.privateName(pdfviewer, "_pdfPagesKey");
  var _cursor$ = dart.privateName(pdfviewer, "_cursor");
  var _textCollection = dart.privateName(pdfviewer, "_textCollection");
  var _pdfTextExtractor = dart.privateName(pdfviewer, "_pdfTextExtractor");
  var _maxScrollExtent = dart.privateName(pdfviewer, "_maxScrollExtent");
  var _pdfDimension = dart.privateName(pdfviewer, "_pdfDimension");
  var _isPageChanged = dart.privateName(pdfviewer, "_isPageChanged");
  var _isSinglePageViewPageChanged = dart.privateName(pdfviewer, "_isSinglePageViewPageChanged");
  var _isSearchInitiated = dart.privateName(pdfviewer, "_isSearchInitiated");
  var _isOverflowed = dart.privateName(pdfviewer, "_isOverflowed");
  var _startPage = dart.privateName(pdfviewer, "_startPage");
  var _endPage = dart.privateName(pdfviewer, "_endPage");
  var _bufferCount = dart.privateName(pdfviewer, "_bufferCount");
  var _renderedImages = dart.privateName(pdfviewer, "_renderedImages");
  var _pageTextExtractor = dart.privateName(pdfviewer, "_pageTextExtractor");
  var _totalImageSize = dart.privateName(pdfviewer, "_totalImageSize");
  var __SfPdfViewerState__scrollDirection = dart.privateName(pdfviewer, "_#SfPdfViewerState#_scrollDirection");
  var __SfPdfViewerState__scrollDirection_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_scrollDirection#isSet");
  var __SfPdfViewerState__tempScrollDirection = dart.privateName(pdfviewer, "_#SfPdfViewerState#_tempScrollDirection");
  var __SfPdfViewerState__tempScrollDirection_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_tempScrollDirection#isSet");
  var __SfPdfViewerState__pageLayoutMode = dart.privateName(pdfviewer, "_#SfPdfViewerState#_pageLayoutMode");
  var __SfPdfViewerState__pageLayoutMode_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_pageLayoutMode#isSet");
  var _pageOffsetBeforeScrollDirectionChange = dart.privateName(pdfviewer, "_pageOffsetBeforeScrollDirectionChange");
  var _pageSizeBeforeScrollDirectionChange = dart.privateName(pdfviewer, "_pageSizeBeforeScrollDirectionChange");
  var _scrollDirectionSwitchOffset = dart.privateName(pdfviewer, "_scrollDirectionSwitchOffset");
  var _isScrollDirectionChange = dart.privateName(pdfviewer, "_isScrollDirectionChange");
  var _pageController = dart.privateName(pdfviewer, "_pageController");
  var _previousHorizontalOffset = dart.privateName(pdfviewer, "_previousHorizontalOffset");
  var _viewportHeight = dart.privateName(pdfviewer, "_viewportHeight");
  var _iskeypadClosed = dart.privateName(pdfviewer, "_iskeypadClosed");
  var _layoutChangeOffset = dart.privateName(pdfviewer, "_layoutChangeOffset");
  var _previousSinglePage = dart.privateName(pdfviewer, "_previousSinglePage");
  var _pdfViewerThemeData$4 = dart.privateName(pdfviewer, "_pdfViewerThemeData");
  var _plugin = dart.privateName(pdfviewer, "_plugin");
  var _pdfViewerController = dart.privateName(pdfviewer, "_pdfViewerController");
  var _viewportConstraints = dart.privateName(pdfviewer, "_viewportConstraints");
  var _scrollDirection = dart.privateName(pdfviewer, "_scrollDirection");
  var _tempScrollDirection = dart.privateName(pdfviewer, "_tempScrollDirection");
  var _pageLayoutMode = dart.privateName(pdfviewer, "_pageLayoutMode");
  var _handleControllerValueChange = dart.privateName(pdfviewer, "_handleControllerValueChange");
  var _setInitialScrollOffset = dart.privateName(pdfviewer, "_setInitialScrollOffset");
  var _loadPdfDocument = dart.privateName(pdfviewer, "_loadPdfDocument");
  var _reset = dart.privateName(pdfviewer, "_reset");
  var _compareDocument = dart.privateName(pdfviewer, "_compareDocument");
  var _updateOffsetOnLayoutChange = dart.privateName(pdfviewer, "_updateOffsetOnLayoutChange");
  var _verticalOffset = dart.privateName(pdfviewer, "_verticalOffset");
  var _horizontalOffset = dart.privateName(pdfviewer, "_horizontalOffset");
  var _disposeCollection = dart.privateName(pdfviewer, "_disposeCollection");
  var _checkMount = dart.privateName(pdfviewer, "_checkMount");
  var _getPdfFile = dart.privateName(pdfviewer, "_getPdfFile");
  var _pageCount = dart.privateName(pdfviewer, "_pageCount");
  var _pageNumber = dart.privateName(pdfviewer, "_pageNumber");
  var _isPdfPagesLoaded = dart.privateName(pdfviewer, "_isPdfPagesLoaded");
  var _isDocumentLoaded = dart.privateName(pdfviewer, "_isDocumentLoaded");
  var _searchText = dart.privateName(pdfviewer, "_searchText");
  var _findDevice$ = dart.privateName(pdfviewer, "_findDevice");
  var _getViewportGlobalRect = dart.privateName(pdfviewer, "_getViewportGlobalRect");
  var _handlePointerSignal = dart.privateName(pdfviewer, "_handlePointerSignal");
  var _handlePointerDown = dart.privateName(pdfviewer, "_handlePointerDown");
  var _handlePointerMove = dart.privateName(pdfviewer, "_handlePointerMove");
  var _handlePointerUp = dart.privateName(pdfviewer, "_handlePointerUp");
  var _getImages = dart.privateName(pdfviewer, "_getImages");
  var _calculateSize = dart.privateName(pdfviewer, "_calculateSize");
  var _handleTextSelectionDragStarted = dart.privateName(pdfviewer, "_handleTextSelectionDragStarted");
  var _handleTextSelectionDragEnded = dart.privateName(pdfviewer, "_handleTextSelectionDragEnded");
  var _pdfTextSearchResult = dart.privateName(pdfviewer, "_pdfTextSearchResult");
  var _handlePdfPagePointerDown = dart.privateName(pdfviewer, "_handlePdfPagePointerDown");
  var _handlePdfPagePointerMove = dart.privateName(pdfviewer, "_handlePdfPagePointerMove");
  var _handlePdfPagePointerUp = dart.privateName(pdfviewer, "_handlePdfPagePointerUp");
  var _updateScrollDirectionChange = dart.privateName(pdfviewer, "_updateScrollDirectionChange");
  var _updateOffsetOnOrientationChange = dart.privateName(pdfviewer, "_updateOffsetOnOrientationChange");
  var _clearSelection$0 = dart.privateName(pdfviewer, "_clearSelection");
  var _handleSinglePageViewPageChanged = dart.privateName(pdfviewer, "_handleSinglePageViewPageChanged");
  var _interactionUpdate = dart.privateName(pdfviewer, "_interactionUpdate");
  var _handleSinglePageViewZoomLevelChanged = dart.privateName(pdfviewer, "_handleSinglePageViewZoomLevelChanged");
  var _handleDoubleTap = dart.privateName(pdfviewer, "_handleDoubleTap");
  var _handlePdfOffsetChanged$0 = dart.privateName(pdfviewer, "_handlePdfOffsetChanged");
  var _scrollPositionX = dart.privateName(pdfviewer, "_scrollPositionX");
  var _getChildSize$ = dart.privateName(pdfviewer, "_getChildSize");
  var _handleBookmarkViewChanged = dart.privateName(pdfviewer, "_handleBookmarkViewChanged");
  var _zoomLevel = dart.privateName(pdfviewer, "_zoomLevel");
  var _pageChanged = dart.privateName(pdfviewer, "_pageChanged");
  var _findStartOrEndPage = dart.privateName(pdfviewer, "_findStartOrEndPage");
  var _currentOccurrenceIndex = dart.privateName(pdfviewer, "_currentOccurrenceIndex");
  var _getInstanceInPage = dart.privateName(pdfviewer, "_getInstanceInPage");
  var _updateSearchInstance = dart.privateName(pdfviewer, "_updateSearchInstance");
  var _updateCurrentPageNumber = dart.privateName(pdfviewer, "_updateCurrentPageNumber");
  var _jumpToPage = dart.privateName(pdfviewer, "_jumpToPage");
  var _jumpToBookmark = dart.privateName(pdfviewer, "_jumpToBookmark");
  var _getPageIndex = dart.privateName(pdfviewer, "_getPageIndex");
  var _pdfBookmark = dart.privateName(pdfviewer, "_pdfBookmark");
  var _clearTextSelection = dart.privateName(pdfviewer, "_clearTextSelection");
  var _pageNavigator = dart.privateName(pdfviewer, "_pageNavigator");
  var _name$2 = dart.privateName(pdfviewer_helper, "_name");
  var _handleTextSearch = dart.privateName(pdfviewer, "_handleTextSearch");
  var _textSearchOption = dart.privateName(pdfviewer, "_textSearchOption");
  var _totalSearchTextCount = dart.privateName(pdfviewer, "_totalSearchTextCount");
  var _updateResult = dart.privateName(pdfviewer, "_updateResult");
  var _jumpToSearchInstance = dart.privateName(pdfviewer, "_jumpToSearchInstance");
  var _jumpToNextInstance = dart.privateName(pdfviewer, "_jumpToNextInstance");
  var _jumpToPreviousInstance = dart.privateName(pdfviewer, "_jumpToPreviousInstance");
  var _totalInstanceCount = dart.privateName(pdfviewer, "_totalInstanceCount");
  var _scrollPositionY = dart.privateName(pdfviewer, "_scrollPositionY");
  const State_WidgetsBindingObserver$36 = class State_WidgetsBindingObserver extends framework.State$(pdfviewer.SfPdfViewer) {};
  (State_WidgetsBindingObserver$36.new = function() {
    State_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
  pdfviewer.SfPdfViewerState = class SfPdfViewerState extends State_WidgetsBindingObserver$36 {
    get [_plugin]() {
      let t41;
      return dart.test(this[__SfPdfViewerState__plugin_isSet]) ? (t41 = this[__SfPdfViewerState__plugin], t41) : dart.throw(new _internal.LateError.fieldNI("_plugin"));
    }
    set [_plugin](t41) {
      if (t41 == null) dart.nullFailed(I[18], 746, 24, "null");
      this[__SfPdfViewerState__plugin_isSet] = true;
      this[__SfPdfViewerState__plugin] = t41;
    }
    get [_pdfViewerController]() {
      let t42;
      return dart.test(this[__SfPdfViewerState__pdfViewerController_isSet]) ? (t42 = this[__SfPdfViewerState__pdfViewerController], t42) : dart.throw(new _internal.LateError.fieldNI("_pdfViewerController"));
    }
    set [_pdfViewerController](t42) {
      if (t42 == null) dart.nullFailed(I[18], 747, 28, "null");
      this[__SfPdfViewerState__pdfViewerController_isSet] = true;
      this[__SfPdfViewerState__pdfViewerController] = t42;
    }
    get [_viewportConstraints]() {
      let t43;
      return dart.test(this[__SfPdfViewerState__viewportConstraints_isSet]) ? (t43 = this[__SfPdfViewerState__viewportConstraints], t43) : dart.throw(new _internal.LateError.fieldNI("_viewportConstraints"));
    }
    set [_viewportConstraints](t43) {
      if (t43 == null) dart.nullFailed(I[18], 765, 23, "null");
      this[__SfPdfViewerState__viewportConstraints_isSet] = true;
      this[__SfPdfViewerState__viewportConstraints] = t43;
    }
    get [_scrollDirection]() {
      let t44;
      return dart.test(this[__SfPdfViewerState__scrollDirection_isSet]) ? (t44 = this[__SfPdfViewerState__scrollDirection], t44) : dart.throw(new _internal.LateError.fieldNI("_scrollDirection"));
    }
    set [_scrollDirection](t44) {
      if (t44 == null) dart.nullFailed(I[18], 794, 27, "null");
      this[__SfPdfViewerState__scrollDirection_isSet] = true;
      this[__SfPdfViewerState__scrollDirection] = t44;
    }
    get [_tempScrollDirection]() {
      let t45;
      return dart.test(this[__SfPdfViewerState__tempScrollDirection_isSet]) ? (t45 = this[__SfPdfViewerState__tempScrollDirection], t45) : dart.throw(new _internal.LateError.fieldNI("_tempScrollDirection"));
    }
    set [_tempScrollDirection](t45) {
      if (t45 == null) dart.nullFailed(I[18], 795, 27, "null");
      this[__SfPdfViewerState__tempScrollDirection_isSet] = true;
      this[__SfPdfViewerState__tempScrollDirection] = t45;
    }
    get [_pageLayoutMode]() {
      let t46;
      return dart.test(this[__SfPdfViewerState__pageLayoutMode_isSet]) ? (t46 = this[__SfPdfViewerState__pageLayoutMode], t46) : dart.throw(new _internal.LateError.fieldNI("_pageLayoutMode"));
    }
    set [_pageLayoutMode](t46) {
      if (t46 == null) dart.nullFailed(I[18], 796, 26, "null");
      this[__SfPdfViewerState__pageLayoutMode_isSet] = true;
      this[__SfPdfViewerState__pageLayoutMode] = t46;
    }
    get isBookmarkViewOpen() {
      let t47, t47$;
      t47$ = (t47 = this[_bookmarkKey].currentState, t47 == null ? null : t47.showBookmark);
      return t47$ == null ? false : t47$;
    }
    initState() {
      let t47, t47$;
      super.initState();
      this[_plugin] = new pdfviewer_plugin.PdfViewerPlugin.new();
      this[_scrollDirection] = this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single ? enums.PdfScrollDirection.horizontal : this.widget.scrollDirection;
      this[_tempScrollDirection] = this[_scrollDirection];
      this[_pageLayoutMode] = this.widget.pageLayoutMode;
      this[_pdfViewerController] = (t47 = this.widget.controller, t47 == null ? new pdfviewer.PdfViewerController.new() : t47);
      this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
      this[_setInitialScrollOffset]();
      this[_offsetBeforeOrientationChange] = ui.Offset.zero;
      this[_hasError] = false;
      this[_panEnabled] = true;
      this[_isTextSelectionCleared] = false;
      this[_loadPdfDocument](false);
      this[_previousPageNumber] = 1;
      this[_maxPdfPageWidth] = 0.0;
      t47$ = binding.WidgetsBinding.instance;
      t47$ == null ? null : t47$.addObserver(this);
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_pdfViewerThemeData$4] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
    }
    didUpdateWidget(oldWidget) {
      pdfviewer.SfPdfViewer.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[18], 847, 36, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (oldWidget.controller == null) {
        if (this.widget.controller != null) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController][_reset]();
          this[_pdfViewerController] = dart.nullCheck(this.widget.controller);
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        }
      } else {
        if (this.widget.controller == null) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController] = new pdfviewer.PdfViewerController.new();
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        } else if (!dart.equals(this.widget.controller, oldWidget.controller)) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController] = dart.nullCheck(this.widget.controller);
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        }
      }
      this[_scrollDirection] = this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single ? enums.PdfScrollDirection.horizontal : this.widget.scrollDirection;
      this[_compareDocument](oldWidget[_provider].getPdfBytes(this.context), this.widget[_provider].getPdfBytes(this.context));
      if (oldWidget.pageLayoutMode != this.widget.pageLayoutMode) {
        this[_updateOffsetOnLayoutChange](dart.nullCheck(oldWidget.controller).zoomLevel, dart.nullCheck(oldWidget.controller).scrollOffset, oldWidget.pageLayoutMode);
      }
    }
    [_setInitialScrollOffset]() {
      let t47;
      if (page_storage.PageStorageKey.is(this.widget.key) && page_storage.PageStorage.of(this.context) != null) {
        let offset = dart.nullCheck(page_storage.PageStorage.of(this.context)).readState(this.context);
        this[_pdfViewerController][_verticalOffset] = core.double.as(dart.dload(offset, 'dy'));
        this[_pdfViewerController][_horizontalOffset] = core.double.as(dart.dload(offset, 'dx'));
        let zoomLevel = (t47 = page_storage.PageStorage.of(this.context), t47 == null ? null : t47.readState(this.context, {identifier: "zoomLevel_" + dart.notNull(dart.toString(this.widget.key))}));
        this[_pdfViewerController].zoomLevel = core.double.as(zoomLevel);
      } else {
        this[_pdfViewerController][_verticalOffset] = this.widget.initialScrollOffset.dy;
        this[_pdfViewerController][_horizontalOffset] = this.widget.initialScrollOffset.dx;
      }
      this[_isDocumentLoadInitiated] = false;
    }
    [_compareDocument](oldBytesData, newBytesData) {
      if (oldBytesData == null) dart.nullFailed(I[18], 899, 25, "oldBytesData");
      if (newBytesData == null) dart.nullFailed(I[18], 899, 57, "newBytesData");
      return async.async(dart.void, (function* _compareDocument() {
        let oldBytes = (yield oldBytesData);
        let newBytes = (yield newBytesData);
        if (!dart.test(collections.listEquals(core.int, oldBytes, newBytes))) {
          this[_pdfViewerController].clearSelection();
          yield this[_loadPdfDocument](true);
        }
      }).bind(this));
    }
    dispose() {
      let t47, t47$, t47$0, t47$1, t47$2, t47$3, t49, t48, t47$4, t47$5;
      t47 = this[_getPdfFileCancellableOperation];
      t47 == null ? null : t47.cancel();
      t47$ = this[_pdfDocumentLoadCancellableOperation];
      t47$ == null ? null : t47$.cancel();
      t47$0 = this[_getHeightCancellableOperation];
      t47$0 == null ? null : t47$0.cancel();
      t47$1 = this[_getWidthCancellableOperation];
      t47$1 == null ? null : t47$1.cancel();
      this[_pdfViewerThemeData$4] = null;
      t47$2 = binding$.imageCache;
      t47$2 == null ? null : t47$2.clear();
      this[_plugin].closeDocument();
      this[_disposeCollection](this[_originalHeight]);
      this[_disposeCollection](this[_originalWidth]);
      this[_renderedImages][$clear]();
      this[_pageTextExtractor][$clear]();
      this[_pdfPages][$clear]();
      this[_pdfPagesKey][$clear]();
      t47$3 = this[_document];
      t47$3 == null ? null : t47$3.dispose();
      this[_document] = null;
      t47$4 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t47$4 == null ? null : (t48 = t47$4.currentState, t48 == null ? null : (t49 = t48.canvasRenderBox, t49 == null ? null : t49.disposeSelection()));
      if (this.widget.onTextSelectionChanged != null) {
        dart.nullCheck(this.widget.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
      this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
      t47$5 = binding.WidgetsBinding.instance;
      t47$5 == null ? null : t47$5.removeObserver(this);
      super.dispose();
    }
    [_disposeCollection](list) {
      if (list != null) {
        list = null;
      }
    }
    [_reset]() {
      let t49, t48, t47, t47$, t47$0, t47$1;
      t47 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t47 == null ? null : (t48 = t47.currentState, t48 == null ? null : (t49 = t48.canvasRenderBox, t49 == null ? null : t49.disposeMouseSelection()));
      this[_isTextSelectionCleared] = false;
      t47$ = this[_pdfScrollableStateKey].currentState;
      t47$ == null ? null : t47$.reset();
      this[_offsetBeforeOrientationChange] = ui.Offset.zero;
      this[_previousPageNumber] = 1;
      this[_pdfViewerController][_reset]();
      this[_pdfPages][$clear]();
      this[_plugin].closeDocument();
      this[_pageTextExtractor][$clear]();
      t47$0 = this[_document];
      t47$0 == null ? null : t47$0.dispose();
      this[_document] = null;
      t47$1 = binding$.imageCache;
      t47$1 == null ? null : t47$1.clear();
      this[_startPage] = 0;
      this[_endPage] = 0;
      this[_bufferCount] = 0;
      this[_isSearchInitiated] = false;
      this[_renderedImages][$clear]();
      this[_hasError] = false;
      this[_isDocumentLoadInitiated] = false;
      this[_pdfPagesKey][$clear]();
      this[_maxPdfPageWidth] = 0.0;
      this[_maxScrollExtent] = 0.0;
      this[_pdfDimension] = ui.Size.zero;
      this[_isPageChanged] = false;
      this[_isSinglePageViewPageChanged] = false;
    }
    [_loadPdfDocument](isPdfChanged) {
      if (isPdfChanged == null) dart.nullFailed(I[18], 979, 38, "isPdfChanged");
      return async.async(dart.void, (function* _loadPdfDocument() {
        let t47, t47$, t47$0, t47$1;
        try {
          this[_getPdfFileCancellableOperation] = T.CancelableOperationOfUint8List().fromFuture(this.widget[_provider].getPdfBytes(this.context));
          let pdfBytes = dart.nullCheck(yield (t47 = this[_getPdfFileCancellableOperation], t47 == null ? null : t47.value));
          if (dart.test(isPdfChanged)) {
            this[_reset]();
            this[_plugin] = new pdfviewer_plugin.PdfViewerPlugin.new();
            this[_checkMount]();
          }
          this[_pdfDocumentLoadCancellableOperation] = T.CancelableOperationOfPdfDocumentN().fromFuture(this[_getPdfFile](pdfBytes));
          this[_document] = (yield (t47$ = this[_pdfDocumentLoadCancellableOperation], t47$ == null ? null : t47$.value));
          if (this[_document] != null) {
            this[_pdfTextExtractor] = new pdf.PdfTextExtractor.new(dart.nullCheck(this[_document]));
          }
          let pageCount = (yield this[_plugin].initializePdfRenderer(pdfBytes));
          this[_pdfViewerController][_pageCount] = pageCount;
          if (dart.notNull(pageCount) > 0) {
            this[_pdfViewerController][_pageNumber] = 1;
          }
          this[_pdfViewerController].zoomLevel = this.widget.initialZoomLevel;
          this[_setInitialScrollOffset]();
          if (this[_document] != null && this.widget.onDocumentLoaded != null) {
            this[_isDocumentLoadInitiated] = false;
            dart.nullCheck(this.widget.onDocumentLoaded)(new pdfviewer_callback_details.PdfDocumentLoadedDetails.new(dart.nullCheck(this[_document])));
          }
          this[_getHeightCancellableOperation] = T.CancelableOperationOfListN().fromFuture(this[_plugin].getPagesHeight());
          this[_originalHeight] = (yield (t47$0 = this[_getHeightCancellableOperation], t47$0 == null ? null : t47$0.value));
          this[_getWidthCancellableOperation] = T.CancelableOperationOfListN().fromFuture(this[_plugin].getPagesWidth());
          this[_originalWidth] = (yield (t47$1 = this[_getWidthCancellableOperation], t47$1 == null ? null : t47$1.value));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            this[_pdfViewerController][_reset]();
            this[_hasError] = true;
            let errorMessage = dart.toString(e);
            if (errorMessage[$contains]("Invalid cross reference table") || errorMessage[$contains]("FormatException: Invalid radix-10 number") || errorMessage[$contains]("RangeError (index): Index out of range") || errorMessage[$contains]("RangeError (end): Invalid value: Not in inclusive range")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Format Error", "This document cannot be opened because it is corrupted or not a PDF."));
              }
            } else if (errorMessage[$contains]("Cannot open an encrypted document.")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Encrypted PDF", "This document cannot be opened because it is encrypted."));
              }
            } else if (errorMessage[$contains]("Unable to load asset") || errorMessage[$contains]("FileSystemException: Cannot open file")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("File Not Found", "The document cannot be opened because the provided path or link is invalid."));
              }
            } else {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Error", "There was an error opening this document."));
              }
            }
          } else
            throw e$;
        } finally {
          this[_checkMount]();
        }
      }).bind(this));
    }
    [_getPdfFile](value) {
      return async.async(T.PdfDocumentN(), function* _getPdfFile() {
        if (value != null) {
          return new pdf.PdfDocument.new({inputBytes: value});
        }
        return null;
      });
    }
    [_isDocumentLoaded]() {
      if (dart.test(this[_pdfPages][$isNotEmpty]) && !dart.test(this[_isDocumentLoadInitiated]) && (!dart.test(this[_pdfDimension].isEmpty) && this[_pdfScrollableStateKey].currentState != null || this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single && dart.test(this[_pageController].hasClients))) {
        this[_isDocumentLoadInitiated] = true;
        this[_previousHorizontalOffset] = 0.0;
        this[_isPdfPagesLoaded]();
      } else if (!dart.equals(this[_layoutChangeOffset], ui.Offset.zero) && !dart.test(this[_pdfDimension].isEmpty) && this[_pdfScrollableStateKey].currentState != null) {
        let xOffset = this.widget.scrollDirection != enums.PdfScrollDirection.vertical ? dart.nullCheck(this[_pdfPages][$_get](this[_previousSinglePage])).pageOffset : 0.0;
        let yOffset = this.widget.scrollDirection == enums.PdfScrollDirection.vertical ? dart.nullCheck(this[_pdfPages][$_get](this[_previousSinglePage])).pageOffset : 0.0;
        dart.nullCheck(this[_pdfScrollableStateKey].currentState).jumpTo({xOffset: dart.notNull(xOffset) + dart.notNull(this[_layoutChangeOffset].dx), yOffset: dart.notNull(yOffset) + dart.notNull(this[_layoutChangeOffset].dy)});
        this[_layoutChangeOffset] = ui.Offset.zero;
        this[_previousSinglePage] = 1;
      }
    }
    [_isPdfPagesLoaded]() {
      if (dart.test(this[_isDocumentLoadInitiated])) {
        if (dart.equals(this.widget.initialScrollOffset, ui.Offset.zero) || this[_pdfViewerController][_verticalOffset] !== 0.0 || this[_pdfViewerController][_horizontalOffset] !== 0.0) {
          this[_pdfViewerController].jumpTo({xOffset: this[_pdfViewerController][_horizontalOffset], yOffset: this[_pdfViewerController][_verticalOffset]});
        }
        this[_pdfViewerController].notifyPropertyChangedListeners({property: "pageNavigate"});
        this[_pdfViewerController].notifyPropertyChangedListeners({property: "jumpToBookmark"});
        if (this[_pdfViewerController][_searchText][$isNotEmpty]) {
          this[_isSearchInitiated] = true;
          this[_pdfViewerController].notifyPropertyChangedListeners({property: "searchText"});
        }
        if (dart.notNull(this[_pdfViewerController].zoomLevel) > 1 && this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
          dart.nullCheck(this[_singlePageViewKey].currentState).scaleTo(this[_pdfViewerController].zoomLevel);
        }
      }
    }
    [_findDevice$](context) {
      if (context == null) dart.nullFailed(I[18], 1123, 33, "context");
      let size = media_query.MediaQuery.of(context).size;
      let diagonal = math.sqrt(dart.notNull(size.width) * dart.notNull(size.width) + dart.notNull(size.height) * dart.notNull(size.height));
      this[_isMobile] = diagonal < 1100;
    }
    [_getViewportGlobalRect]() {
      let viewportGlobalRect = null;
      if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile]) && (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single && this[_singlePageViewKey].currentContext != null || this[_pdfScrollableStateKey].currentContext != null && this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous)) {
        let viewportRenderBox = null;
        if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
          viewportRenderBox = box.RenderBox.as(dart.nullCheck(dart.nullCheck(this[_singlePageViewKey].currentContext).findRenderObject()));
        } else {
          viewportRenderBox = box.RenderBox.as(dart.nullCheck(dart.nullCheck(this[_pdfScrollableStateKey].currentContext).findRenderObject()));
        }
        let position = viewportRenderBox.localToGlobal(ui.Offset.zero);
        let containerSize = viewportRenderBox.size;
        viewportGlobalRect = new ui.Rect.fromLTWH(position.dx, position.dy, containerSize.width, containerSize.height);
      }
      return viewportGlobalRect;
    }
    build(context) {
      let t48, t49, t48$, t48$0;
      if (context == null) dart.nullFailed(I[18], 1162, 29, "context");
      let emptyContainer = new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData$4]).backgroundColor, $creationLocationd_0dea112b090073317d4: C[548] || CT.C548});
      let emptyLinearProgressView = new basic.Stack.new({children: T.JSArrayOfWidget().of([emptyContainer, new progress_indicator.LinearProgressIndicator.new({valueColor: new (T.AlwaysStoppedAnimationOfColor()).new((t48 = dart.nullCheck(this[_pdfViewerThemeData$4]).progressBarColor, t48 == null ? theme$.Theme.of(context).primaryColor : t48)), backgroundColor: dart.nullCheck(this[_pdfViewerThemeData$4]).progressBarColor == null ? theme$.Theme.of(context).primaryColor.withOpacity(0.2) : dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$4]).progressBarColor).withOpacity(0.2), $creationLocationd_0dea112b090073317d4: C[551] || CT.C551})]), $creationLocationd_0dea112b090073317d4: C[555] || CT.C555});
      this[_isDocumentLoaded]();
      this[_findDevice$](context);
      let isPdfLoaded = dart.notNull(this[_pdfViewerController].pageCount) > 0 && this[_originalWidth] != null && this[_originalHeight] != null;
      this[_pdfDimension] = (t48$0 = (t48$ = this[_childKey$].currentContext, t48$ == null ? null : (t49 = t48$.findRenderObject(), t49 == null ? null : t49.paintBounds.size)), t48$0 == null ? ui.Size.zero : t48$0);
      return isPdfLoaded ? new basic.Listener.new({onPointerSignal: dart.bind(this, _handlePointerSignal), onPointerDown: dart.bind(this, _handlePointerDown), onPointerMove: dart.bind(this, _handlePointerMove), onPointerUp: dart.bind(this, _handlePointerUp), child: new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData$4]).backgroundColor, child: new (T.FutureBuilderOfMapNOfint$List()).new({future: this[_getImages](), builder: dart.fn((context, snapshot) => {
              let t48, t48$;
              if (context == null) dart.nullFailed(I[18], 1204, 37, "context");
              if (snapshot == null) dart.nullFailed(I[18], 1204, 69, "snapshot");
              if (dart.test(snapshot.hasData)) {
                let _pdfImages = snapshot.data;
                this[_renderedImages][$clear]();
                this[_viewportConstraints] = box.BoxConstraints.as(dart.nullCheck(context.findRenderObject()).constraints);
                let totalHeight = 0.0;
                this[_isKeyPadRaised] = (t48 = binding.WidgetsBinding.instance, t48 == null ? null : t48.window.viewInsets.bottom) !== 0.0;
                let viewportDimension = this[_viewportConstraints].biggest;
                if (dart.test(this[_isKeyPadRaised])) {
                  this[_iskeypadClosed] = true;
                  let keyPadHeight = new edge_insets.EdgeInsets.fromWindowPadding(dart.nullCheck(binding.WidgetsBinding.instance).window.viewInsets, dart.nullCheck(binding.WidgetsBinding.instance).window.devicePixelRatio).bottom;
                  if ((this.widget.scrollDirection == enums.PdfScrollDirection.horizontal || this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) && dart.notNull(keyPadHeight) > 0) {
                    if (dart.notNull(viewportDimension.height) + dart.notNull(keyPadHeight) !== this[_viewportHeight]) {
                      keyPadHeight = dart.notNull(this[_viewportHeight]) - dart.notNull(viewportDimension.height);
                    } else {
                      this[_viewportHeight] = dart.notNull(viewportDimension.height) + dart.notNull(keyPadHeight);
                    }
                  }
                  viewportDimension = new ui.Size.new(viewportDimension.width, dart.notNull(viewportDimension.height) + dart.notNull(keyPadHeight));
                } else {
                  if (dart.test(this[_iskeypadClosed])) {
                    viewportDimension = new ui.Size.new(viewportDimension.width, this[_viewportHeight]);
                    this[_iskeypadClosed] = false;
                  } else {
                    this[_viewportHeight] = viewportDimension.height;
                  }
                }
                if (!dart.test(this.isBookmarkViewOpen)) {
                  this[_otherContextHeight] == null ? this[_otherContextHeight] = dart.notNull(media_query.MediaQuery.of(context).size.height) - dart.notNull(this[_viewportConstraints].maxHeight) : null;
                }
                if (this[_deviceOrientation] == media_query.Orientation.landscape) {
                  this[_viewportHeightInLandscape] == null ? this[_viewportHeightInLandscape] = dart.notNull(media_query.MediaQuery.of(context).size.height) - dart.nullCheck(this[_otherContextHeight]) : null;
                }
                if (!dart.test(this[_pdfDimension].isEmpty)) {
                  if (this[_scrollDirection] == enums.PdfScrollDirection.vertical) {
                    this[_maxScrollExtent] = dart.notNull(this[_pdfDimension].height) - dart.notNull(viewportDimension.height) / dart.notNull(this[_pdfViewerController].zoomLevel);
                  } else {
                    this[_maxScrollExtent] = dart.notNull(this[_pdfDimension].width) - dart.notNull(viewportDimension.width) / dart.notNull(this[_pdfViewerController].zoomLevel);
                  }
                }
                let child = null;
                let children = T.ListOfWidget().generate(this[_pdfViewerController].pageCount, dart.fn(index => {
                  let t49, t48;
                  if (index == null) dart.nullFailed(I[18], 1273, 64, "index");
                  if (index === 0) {
                    totalHeight = 0.0;
                  }
                  if (dart.nullCheck(this[_originalWidth])[$length] != this[_pdfViewerController].pageCount) {
                    return emptyContainer;
                  }
                  let pageIndex = dart.notNull(index) + 1;
                  let calculatedSize = this[_calculateSize](new box.BoxConstraints.new({maxWidth: this[_viewportConstraints].maxWidth, maxHeight: 1 / 0}), core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index)), core.double.as(dart.nullCheck(this[_originalHeight])[$_get](index)), this[_viewportConstraints].maxWidth, viewportDimension.height);
                  if (!dart.test(this[_pdfPagesKey][$containsKey](pageIndex))) {
                    this[_pdfPagesKey][$_set](pageIndex, T.GlobalKeyOfPdfPageViewState().new());
                  }
                  this[_isOverflowed] = core.bool.as(dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](index), '>', [this[_viewportConstraints].maxWidth]));
                  if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile])) {
                    if (dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](index), '>', [this[_maxPdfPageWidth]]) != null) {
                      this[_maxPdfPageWidth] = core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index));
                    }
                  }
                  if (dart.dsend(_pdfImages, '_get', [pageIndex]) != null) {
                    if (dart.test(this[_pageTextExtractor][$isEmpty]) || !dart.test(this[_pageTextExtractor][$containsKey](index))) {
                      this[_pageTextExtractor][$_set](index, dart.nullCheck(this[_pdfTextExtractor]).extractText({startPageIndex: index}));
                    }
                  }
                  let viewportGlobalRect = null;
                  if (dart.test(this[_isTextSelectionCleared])) {
                    viewportGlobalRect = this[_getViewportGlobalRect]();
                  }
                  let page = new pdf_page_view.PdfPageView.new(dart.nullCheck(this[_pdfPagesKey][$_get](pageIndex)), T.Uint8ListN().as(dart.dsend(_pdfImages, '_get', [pageIndex])), viewportGlobalRect, viewportDimension, this.widget.interactionMode, core.double.as(dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile]) && !dart.test(this[_isOverflowed]) && this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous ? dart.nullCheck(this[_originalWidth])[$_get](index) : calculatedSize.width), core.double.as(dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile]) && !dart.test(this[_isOverflowed]) && this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous ? dart.nullCheck(this[_originalHeight])[$_get](index) : calculatedSize.height), this.widget.pageSpacing, this[_document], this[_pdfPages], index, this[_pdfViewerController], this.widget.enableDocumentLinkAnnotation, this.widget.enableTextSelection, this.widget.onTextSelectionChanged, dart.bind(this, _handleTextSelectionDragStarted), dart.bind(this, _handleTextSelectionDragEnded), this.widget.searchTextHighlightColor, this[_textCollection], this[_isMobile], this[_pdfViewerController][_pdfTextSearchResult], this[_pdfScrollableStateKey], this[_singlePageViewKey], this[_scrollDirection], dart.bind(this, _handlePdfPagePointerDown), dart.bind(this, _handlePdfPagePointerMove), dart.bind(this, _handlePdfPagePointerUp), dart.test(this.isBookmarkViewOpen) ? "" : this[_pageTextExtractor][$_get](index), this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single, {$creationLocationd_0dea112b090073317d4: C[558] || CT.C558});
                  let pageSpacing = index === dart.notNull(this[_pdfViewerController].pageCount) - 1 ? 0.0 : this.widget.pageSpacing;
                  if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile]) && !dart.test(this[_isOverflowed])) {
                    this[_pdfPages][$_set](pageIndex, new pdf_page_view.PdfPageInfo.new(totalHeight, new ui.Size.new(core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index)), core.double.as(dart.nullCheck(this[_originalHeight])[$_get](index)))));
                    if (this[_scrollDirection] == enums.PdfScrollDirection.vertical && this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
                      totalHeight = totalHeight + dart.notNull(core.num.as(dart.dsend(dart.nullCheck(this[_originalHeight])[$_get](index), '+', [pageSpacing])));
                    } else {
                      if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous) {
                        totalHeight = totalHeight + dart.notNull(core.num.as(dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](index), '+', [pageSpacing])));
                      } else {
                        this[_pdfPages][$_set](pageIndex, new pdf_page_view.PdfPageInfo.new(totalHeight, calculatedSize));
                        totalHeight = totalHeight + (dart.notNull(calculatedSize.height) + dart.notNull(pageSpacing));
                      }
                    }
                  } else {
                    this[_pdfPages][$_set](pageIndex, new pdf_page_view.PdfPageInfo.new(totalHeight, calculatedSize));
                    if (this[_scrollDirection] == enums.PdfScrollDirection.vertical && this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
                      totalHeight = totalHeight + (dart.notNull(calculatedSize.height) + dart.notNull(pageSpacing));
                    } else {
                      totalHeight = totalHeight + (dart.notNull(calculatedSize.width) + dart.notNull(pageSpacing));
                    }
                  }
                  this[_updateScrollDirectionChange](this[_offsetBeforeOrientationChange], pageIndex, totalHeight);
                  this[_updateOffsetOnOrientationChange](this[_offsetBeforeOrientationChange], pageIndex, totalHeight);
                  if ((t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : t49.canvasRenderBox)) != null && !dart.test(this[_isTextSelectionCleared])) {
                    this[_isTextSelectionCleared] = true;
                    async.Future.delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
                      let t50, t49, t48, t49$, t48$;
                      this[_clearSelection$0]();
                      t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                      t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : (t50 = t49.canvasRenderBox, t50 == null ? null : t50.disposeMouseSelection()));
                      t48$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                      t48$ == null ? null : (t49$ = t48$.currentState, t49$ == null ? null : t49$.focusNode.requestFocus());
                    }).bind(this)), T.VoidToFutureOfNull()));
                  }
                  if (page.imageStream != null) {
                    this[_renderedImages][$add](pageIndex);
                  }
                  return page;
                }, T.intToWidget()));
                let pdfContainer = null;
                if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
                  this[_pageController] = new page_view.PageController.new({initialPage: dart.notNull(this[_pdfViewerController].pageNumber) - 1});
                  pdfContainer = new basic.MouseRegion.new({cursor: this[_cursor$], onHover: dart.fn(details => {
                      if (details == null) dart.nullFailed(I[18], 1431, 55, "details");
                      this.setState(dart.fn(() => {
                        if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
                          this[_cursor$] = mouse_cursor.SystemMouseCursors.grab;
                        } else {
                          this[_cursor$] = mouse_cursor.SystemMouseCursors.basic;
                        }
                      }, T.VoidTovoid()));
                    }, T.PointerHoverEventTovoid()), child: new single_page_view.SinglePageView.new(this[_singlePageViewKey], this[_pdfViewerController], this[_pageController], dart.bind(this, _handleSinglePageViewPageChanged), dart.bind(this, _interactionUpdate), viewportDimension, this.widget.canShowPaginationDialog, this.widget.canShowScrollHead, this.widget.canShowScrollStatus, this[_pdfPages], this[_isMobile], this.widget.enableDoubleTapZooming, this.widget.interactionMode, this[_isScaleEnabled], dart.bind(this, _handleSinglePageViewZoomLevelChanged), dart.bind(this, _handleDoubleTap), dart.bind(this, _handlePdfOffsetChanged$0), this.isBookmarkViewOpen, children, {$creationLocationd_0dea112b090073317d4: C[589] || CT.C589}), $creationLocationd_0dea112b090073317d4: C[610] || CT.C610});
                  if (dart.test(this[_isSinglePageViewPageChanged]) && dart.test(this[_renderedImages][$contains](this[_pdfViewerController].pageNumber))) {
                    async.Future.delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
                      let t49, t48, t50, t49$, t48$;
                      if (dart.test(this[_pageController].hasClients)) {
                        this[_pdfViewerController][_scrollPositionX] = this[_pageController].offset;
                      }
                      if (!dart.test(this[_isSearchStarted])) {
                        t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                        t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : t49.focusNode.requestFocus());
                      }
                      if (dart.test(this.getSelectedTextLines()[$isNotEmpty]) && dart.notNull(this.getSelectedTextLines()[$first].pageNumber) + 1 === this[_pdfViewerController].pageNumber) {
                        t48$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                        t48$ == null ? null : (t49$ = t48$.currentState, t49$ == null ? null : (t50 = t49$.canvasRenderBox, t50 == null ? null : t50.updateContextMenuPosition()));
                      }
                      this[_isSinglePageViewPageChanged] = false;
                    }).bind(this)), T.VoidToFutureOfNull()));
                  }
                } else {
                  let childSize = this[_getChildSize$](viewportDimension);
                  if (this[_scrollDirection] == enums.PdfScrollDirection.horizontal) {
                    child = new basic.Row.new({key: this[_childKey$], mainAxisAlignment: flex.MainAxisAlignment.center, children: children, $creationLocationd_0dea112b090073317d4: C[615] || CT.C615});
                  } else {
                    child = new basic.Column.new({key: this[_childKey$], mainAxisAlignment: flex.MainAxisAlignment.center, children: children, $creationLocationd_0dea112b090073317d4: C[620] || CT.C620});
                  }
                  child = new basic.MouseRegion.new({cursor: this[_cursor$], onHover: dart.fn(details => {
                      if (details == null) dart.nullFailed(I[18], 1502, 55, "details");
                      this.setState(dart.fn(() => {
                        if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
                          this[_cursor$] = mouse_cursor.SystemMouseCursors.grab;
                        } else {
                          this[_cursor$] = mouse_cursor.SystemMouseCursors.basic;
                        }
                      }, T.VoidTovoid()));
                    }, T.PointerHoverEventTovoid()), child: new container.Container.new({height: childSize.height, width: childSize.width, child: child, $creationLocationd_0dea112b090073317d4: C[625] || CT.C625}), $creationLocationd_0dea112b090073317d4: C[630] || CT.C630});
                  pdfContainer = new pdf_scrollable.PdfScrollable.new(this.widget.canShowPaginationDialog, this.widget.canShowScrollStatus, this.widget.canShowScrollHead, this[_pdfViewerController], this[_isMobile], this[_pdfDimension], this[_totalImageSize], viewportDimension, dart.bind(this, _handlePdfOffsetChanged$0), this[_panEnabled], this[_maxScale], this[_minScale], this.widget.enableDoubleTapZooming, this.widget.interactionMode, this[_maxPdfPageWidth], this[_isScaleEnabled], this[_maxScrollExtent], this[_pdfPages], this[_scrollDirection], this.isBookmarkViewOpen, child, {key: this[_pdfScrollableStateKey], onDoubleTap: dart.bind(this, _handleDoubleTap), $creationLocationd_0dea112b090073317d4: C[635] || CT.C635});
                  if (dart.test(this[_isScrollDirectionChange])) {
                    t48$ = this[_pdfScrollableStateKey].currentState;
                    t48$ == null ? null : t48$.forcePixels(this[_scrollDirectionSwitchOffset]);
                    this[_isScrollDirectionChange] = false;
                  }
                }
                return new basic.Stack.new({children: T.JSArrayOfWidget().of([pdfContainer, new bookmark_view.BookmarkView.new(this[_bookmarkKey], this[_document], this[_pdfViewerController], dart.bind(this, _handleBookmarkViewChanged), {$creationLocationd_0dea112b090073317d4: C[660] || CT.C660})]), $creationLocationd_0dea112b090073317d4: C[666] || CT.C666});
              } else if (dart.test(snapshot.hasError)) {
                return emptyContainer;
              } else {
                return emptyLinearProgressView;
              }
            }, T.BuildContextAndAsyncSnapshotToWidget()), $creationLocationd_0dea112b090073317d4: C[669] || CT.C669}), $creationLocationd_0dea112b090073317d4: C[673] || CT.C673}), $creationLocationd_0dea112b090073317d4: C[677] || CT.C677}) : dart.test(this[_hasError]) ? emptyContainer : emptyLinearProgressView;
    }
    [_handleSinglePageViewPageChanged](newPage) {
      if (newPage == null) dart.nullFailed(I[18], 1567, 45, "newPage");
      this[_pdfViewerController][_pageNumber] = dart.notNull(newPage) + 1;
      this[_pdfViewerController][_zoomLevel] = 1.0;
      if (this[_singlePageViewKey].currentState != null) {
        dart.nullCheck(this[_singlePageViewKey].currentState).previousZoomLevel = 1.0;
        this[_pdfViewerController].notifyPropertyChangedListeners({property: "zoomLevel"});
      }
      this[_previousHorizontalOffset] = 0.0;
      this[_pageChanged]();
      this[_checkMount]();
      this[_isSinglePageViewPageChanged] = true;
      if (this.widget.onTextSelectionChanged != null) {
        dart.nullCheck(this.widget.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
    }
    [_interactionUpdate](zoomLevel) {
      if (zoomLevel == null) dart.nullFailed(I[18], 1585, 34, "zoomLevel");
      this[_pdfViewerController][_zoomLevel] = zoomLevel;
    }
    [_handleSinglePageViewZoomLevelChanged](zoomLevel) {
      if (zoomLevel == null) dart.nullFailed(I[18], 1589, 53, "zoomLevel");
      if (this[_singlePageViewKey].currentState != null) {
        let previousScale = dart.nullCheck(this[_singlePageViewKey].currentState).previousZoomLevel;
        if (previousScale != this[_pdfViewerController][_zoomLevel]) {
          this[_pdfViewerController].notifyPropertyChangedListeners({property: "zoomLevel"});
        }
      }
    }
    [_getChildSize$](viewportDimension) {
      if (viewportDimension == null) dart.nullFailed(I[18], 1600, 27, "viewportDimension");
      let widthFactor = 1.0;
      let heightFactor = 1.0;
      let childHeight = 0.0;
      let childWidth = 0.0;
      if (this[_pdfScrollableStateKey].currentState != null) {
        widthFactor = dart.nullCheck(this[_pdfScrollableStateKey].currentState).paddingWidthScale === 0 ? this[_pdfViewerController].zoomLevel : dart.nullCheck(this[_pdfScrollableStateKey].currentState).paddingWidthScale;
        heightFactor = dart.nullCheck(this[_pdfScrollableStateKey].currentState).paddingHeightScale === 0 ? this[_pdfViewerController].zoomLevel : dart.nullCheck(this[_pdfScrollableStateKey].currentState).paddingHeightScale;
      }
      if (this[_pdfPages][$_get](this[_pdfViewerController].pageCount) != null) {
        let lastPageInfo = dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageCount));
        let zoomLevel = this[_pdfViewerController].zoomLevel;
        let currentPageSize = dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize;
        let totalImageWidth = (dart.notNull(lastPageInfo.pageOffset) + dart.notNull(lastPageInfo.pageSize.width)) * dart.notNull(zoomLevel);
        if (this[_scrollDirection] == enums.PdfScrollDirection.vertical) {
          totalImageWidth = dart.notNull(currentPageSize.width) * dart.notNull(zoomLevel);
        }
        childWidth = dart.notNull(viewportDimension.width) > totalImageWidth ? dart.notNull(viewportDimension.width) / widthFactor[$clamp](1, 3) : totalImageWidth / widthFactor[$clamp](1, 3);
        let totalImageHeight = dart.notNull(currentPageSize.height) * dart.notNull(zoomLevel);
        if (this[_scrollDirection] == enums.PdfScrollDirection.vertical) {
          totalImageHeight = (dart.notNull(lastPageInfo.pageOffset) + dart.notNull(lastPageInfo.pageSize.height)) * dart.notNull(zoomLevel);
        }
        childHeight = dart.notNull(viewportDimension.height) > totalImageHeight ? dart.notNull(viewportDimension.height) / heightFactor[$clamp](1, 3) : totalImageHeight / heightFactor[$clamp](1, 3);
        this[_totalImageSize] = new ui.Size.new(totalImageWidth / dart.notNull(zoomLevel), totalImageHeight / dart.notNull(zoomLevel));
        if (dart.test(this[_isMobile]) && !dart.test(this[_isKeyPadRaised]) && dart.notNull(childHeight) > dart.notNull(this[_viewportConstraints].maxHeight) && (totalImageHeight / dart.notNull(zoomLevel))[$floor]() <= this[_viewportConstraints].maxHeight[$floor]()) {
          childHeight = this[_viewportConstraints].maxHeight;
        }
        if (dart.test(this[_isMobile]) && dart.notNull(childWidth) > dart.notNull(this[_viewportConstraints].maxWidth) && totalImageWidth / dart.notNull(zoomLevel) <= dart.notNull(this[_viewportConstraints].maxWidth)) {
          childWidth = this[_viewportConstraints].maxWidth;
        }
      }
      return new ui.Size.new(childWidth, childHeight);
    }
    [_handlePdfPagePointerDown](details) {
      if (details == null) dart.nullFailed(I[18], 1655, 51, "details");
      this[_isPdfPageTapped] = true;
    }
    [_handlePdfPagePointerMove](details) {
      if (details == null) dart.nullFailed(I[18], 1659, 51, "details");
      if (details.kind == ui.PointerDeviceKind.touch && dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile])) {
        this.setState(dart.fn(() => {
          this[_isScaleEnabled] = true;
        }, T.VoidTovoid()));
      }
    }
    [_handlePdfPagePointerUp](details) {
      if (details == null) dart.nullFailed(I[18], 1667, 47, "details");
      if (details.kind == ui.PointerDeviceKind.touch && dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile])) {
        this.setState(dart.fn(() => {
          this[_isScaleEnabled] = false;
        }, T.VoidTovoid()));
      }
    }
    [_handlePointerSignal](event) {
      let t48;
      if (event == null) dart.nullFailed(I[18], 1675, 48, "event");
      if (!dart.test(this.isBookmarkViewOpen)) {
        t48 = this[_pdfScrollableStateKey].currentState;
        t48 == null ? null : t48.receivedPointerSignal(event);
      }
    }
    [_handlePointerDown](event) {
      let t50, t49, t48, t49$, t48$;
      if (event == null) dart.nullFailed(I[18], 1681, 44, "event");
      if (!dart.test(this[_isPdfPageTapped])) {
        t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : (t50 = t49.canvasRenderBox, t50 == null ? null : t50.clearSelection()));
      }
      t48$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t48$ == null ? null : (t49$ = t48$.currentState, t49$ == null ? null : t49$.focusNode.requestFocus());
    }
    [_handlePointerMove](event) {
      let t50, t49, t48;
      if (event == null) dart.nullFailed(I[18], 1694, 44, "event");
      if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
        this[_cursor$] = mouse_cursor.SystemMouseCursors.grabbing;
      }
      if (!dart.test(this[_isScaleEnabled]) && event.kind == ui.PointerDeviceKind.touch && (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(this[_isMobile]))) {
        this.setState(dart.fn(() => {
          this[_isScaleEnabled] = true;
        }, T.VoidTovoid()));
      }
      t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : (t50 = t49.canvasRenderBox, t50 == null ? null : t50.scrollStarted()));
    }
    [_handlePointerUp](details) {
      let t50, t49, t48;
      if (details == null) dart.nullFailed(I[18], 1711, 40, "details");
      this[_isPdfPageTapped] = false;
      if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
        this[_cursor$] = mouse_cursor.SystemMouseCursors.grab;
      }
      t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : (t50 = t49.canvasRenderBox, t50 == null ? null : t50.scrollEnded()));
    }
    [_handleDoubleTap]() {
      let t50, t49, t48;
      this[_checkMount]();
      if (!dart.test(pdfviewer_helper.kIsDesktop) || dart.test(this[_isMobile])) {
        t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : (t50 = t49.canvasRenderBox, t50 == null ? null : t50.updateContextMenuPosition()));
      }
    }
    [_handleBookmarkViewChanged](hasBookmark) {
      if (hasBookmark == null) dart.nullFailed(I[18], 1732, 40, "hasBookmark");
      if (!true || true && dart.test(this[_isMobile])) {
        this[_checkMount]();
      }
    }
    openBookmarkView() {
      let t48;
      t48 = this[_bookmarkKey].currentState;
      t48 == null ? null : t48.open();
    }
    getSelectedTextLines() {
      let t50, t49, t48, t48$;
      let selectedTextLines = (t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : (t50 = t49.canvasRenderBox, t50 == null ? null : t50.getSelectedTextLines())));
      t48$ = selectedTextLines;
      return t48$ == null ? T.JSArrayOfPdfTextLine().of([]) : t48$;
    }
    [_findStartOrEndPage](pageIndex, isLastPage) {
      let t48, t48$;
      if (pageIndex == null) dart.nullFailed(I[18], 1823, 31, "pageIndex");
      if (isLastPage == null) dart.nullFailed(I[18], 1823, 47, "isLastPage");
      let pageSize = 0.0;
      for (let start = dart.test(isLastPage) ? this[_pdfViewerController].pageCount : this[_pdfViewerController].pageNumber; dart.test(isLastPage) ? dart.notNull(start) >= 1 : dart.notNull(start) <= dart.notNull(this[_pdfViewerController].pageCount); dart.test(isLastPage) ? (t48 = start, start = dart.notNull(t48) - 1, t48) : (t48$ = start, start = dart.notNull(t48$) + 1, t48$)) {
        pageSize = pageSize + dart.notNull(this[_scrollDirection] == enums.PdfScrollDirection.vertical ? dart.nullCheck(this[_pdfPages][$_get](start)).pageSize.height : dart.nullCheck(this[_pdfPages][$_get](start)).pageSize.width);
        if (!dart.test(isLastPage) && start == this[_pdfViewerController].pageCount || dart.test(isLastPage) && start === 1) {
          pageIndex = start;
          break;
        } else {
          pageIndex = dart.test(isLastPage) ? dart.notNull(start) - 1 : dart.notNull(start) + 1;
        }
        let isPageIndexFound = this[_scrollDirection] == enums.PdfScrollDirection.vertical ? pageSize > dart.notNull(this[_viewportConstraints].biggest.height) : pageSize > dart.notNull(this[_viewportConstraints].biggest.width);
        if (isPageIndexFound) {
          break;
        }
      }
      return pageIndex;
    }
    [_getImages]() {
      if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
        let renderedPages = null;
        let startPage = dart.notNull(this[_pdfViewerController].pageNumber) - 1 !== 0 ? dart.notNull(this[_pdfViewerController].pageNumber) - 1 : this[_pdfViewerController].pageNumber;
        let endPage = dart.notNull(this[_pdfViewerController].pageNumber) + 1 < dart.notNull(this[_pdfViewerController].pageCount) ? dart.notNull(this[_pdfViewerController].pageNumber) + 1 : this[_pdfViewerController].pageCount;
        renderedPages = this[_plugin].getSpecificPages(startPage, endPage).then(T.MapNOfint$List(), dart.fn(value => value, T.MapNOfint$ListToMapNOfint$List()));
        if (!dart.test(this[_renderedImages][$contains](this[_pdfViewerController].pageNumber))) {
          renderedPages.whenComplete(dart.bind(this, _checkMount));
        }
        return renderedPages;
      } else {
        let startPage = this[_pdfViewerController].pageNumber;
        let endPage = 1;
        let renderedPages = null;
        if (dart.test(this[_pdfPages][$isNotEmpty]) && !dart.test(this[_pdfDimension].isEmpty)) {
          if (this[_pdfViewerController].pageCount === 1) {
            endPage = this[_pdfViewerController].pageCount;
          } else {
            if (startPage == this[_pdfViewerController].pageCount) {
              startPage = this[_findStartOrEndPage](startPage, true);
              endPage = this[_pdfViewerController].pageCount;
            } else {
              endPage = this[_findStartOrEndPage](endPage, false);
            }
          }
        }
        renderedPages = this[_plugin].getSpecificPages(startPage, endPage).then(T.MapNOfint$List(), dart.fn(value => {
          if (dart.test(this[_pdfPages][$isNotEmpty]) && !dart.test(this[_pdfDimension].isEmpty)) {
            for (let i = startPage; dart.notNull(i) <= dart.notNull(endPage); i = dart.notNull(i) + 1) {
              if (!dart.test(this[_renderedImages][$contains](i))) {
                this[_checkMount]();
                break;
              }
            }
          }
          return value;
        }, T.MapNOfint$ListToMapNOfint$List()));
        if (this[_startPage] != startPage && this[_endPage] != endPage || dart.notNull(this[_bufferCount]) > 0 && dart.notNull(this[_bufferCount]) <= dart.notNull(endPage) - dart.notNull(startPage) + 1) {
          renderedPages.whenComplete(dart.bind(this, _checkMount));
          this[_startPage] = startPage;
          this[_endPage] = endPage;
          this[_bufferCount] = dart.notNull(this[_bufferCount]) + 1;
        } else {
          this[_bufferCount] = 0;
        }
        return renderedPages;
      }
    }
    [_checkMount]() {
      if (dart.test(super.mounted)) {
        this.setState(dart.fn(() => {
        }, T.VoidTovoid()));
      }
    }
    [_pageChanged]() {
      if (this[_pdfViewerController].pageNumber != this[_previousPageNumber]) {
        if (this.widget.onPageChanged != null) {
          dart.nullCheck(this.widget.onPageChanged)(new pdfviewer_callback_details.PdfPageChangedDetails.new(this[_pdfViewerController].pageNumber, this[_previousPageNumber], this[_pdfViewerController].pageNumber === 1, this[_pdfViewerController].pageNumber == this[_pdfViewerController].pageCount));
        }
        this[_previousPageNumber] = this[_pdfViewerController].pageNumber;
        this[_isPageChanged] = true;
      }
    }
    [_updateSearchInstance](opts) {
      let isNext = opts && 'isNext' in opts ? opts.isNext : true;
      if (isNext == null) dart.nullFailed(I[18], 1938, 36, "isNext");
      if (this[_textCollection] != null && dart.test(this[_pdfViewerController][_pdfTextSearchResult].hasResult) && this[_pdfViewerController].pageNumber !== dart.notNull(dart.nullCheck(this[_textCollection])[$_get](dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1).pageIndex) + 1) {
        this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = this[_getInstanceInPage](this[_pdfViewerController].pageNumber, {lookForFirst: isNext});
      }
    }
    [_updateOffsetOnOrientationChange](initialOffset, pageIndex, totalHeight) {
      let t48, t48$, t48$0;
      if (initialOffset == null) dart.nullFailed(I[18], 1956, 14, "initialOffset");
      if (pageIndex == null) dart.nullFailed(I[18], 1956, 33, "pageIndex");
      if (totalHeight == null) dart.nullFailed(I[18], 1956, 51, "totalHeight");
      if (this[_viewportWidth] != this[_viewportConstraints].maxWidth && this[_deviceOrientation] != media_query.MediaQuery.of(this.context).orientation) {
        t48 = binding.WidgetsBinding.instance;
        t48 == null ? null : t48.addPostFrameCallback(dart.fn(timeStamp => {
          if (timeStamp == null) dart.nullFailed(I[18], 1959, 63, "timeStamp");
          this[_checkMount]();
        }, T.DurationTovoid()));
        if (pageIndex === 1 && !dart.test(this[_viewportConstraints].biggest.isEmpty) && this[_pdfScrollableStateKey].currentState != null) {
          this[_offsetBeforeOrientationChange] = new ui.Offset.new(dart.notNull(dart.nullCheck(this[_pdfScrollableStateKey].currentState).currentOffset.dx) / dart.notNull(this[_pdfDimension].width), dart.notNull(dart.nullCheck(this[_pdfScrollableStateKey].currentState).currentOffset.dy) / dart.notNull(this[_pdfDimension].height));
          if (this[_pdfViewerController].pageCount === 1 && this[_pdfScrollableStateKey].currentState != null) {
            if (this[_viewportWidth] !== 0) {
              let targetOffset = dart.notNull(initialOffset.dy) * dart.notNull(totalHeight);
              t48$ = binding.WidgetsBinding.instance;
              t48$ == null ? null : t48$.addPostFrameCallback(dart.fn(timeStamp => {
                let t51, t50, t49, t49$;
                if (timeStamp == null) dart.nullFailed(I[18], 1974, 69, "timeStamp");
                t49 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                t49 == null ? null : (t50 = t49.currentState, t50 == null ? null : (t51 = t50.canvasRenderBox, t51 == null ? null : t51.updateContextMenuPosition()));
                t49$ = this[_pdfScrollableStateKey].currentState;
                t49$ == null ? null : t49$.forcePixels(new ui.Offset.new(dart.notNull(initialOffset.dx) * dart.notNull(this[_viewportConstraints].biggest.width), targetOffset));
              }, T.DurationTovoid()));
            }
            this[_viewportWidth] = this[_viewportConstraints].maxWidth;
            this[_deviceOrientation] = media_query.MediaQuery.of(this.context).orientation;
          }
        } else if (pageIndex == this[_pdfViewerController].pageCount) {
          if (this[_viewportWidth] !== 0) {
            let targetOffset = null;
            if (this[_scrollDirection] == enums.PdfScrollDirection.vertical && this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
              targetOffset = dart.notNull(initialOffset.dy) * dart.notNull(totalHeight);
            } else {
              targetOffset = dart.notNull(initialOffset.dx) * dart.notNull(totalHeight);
            }
            t48$0 = binding.WidgetsBinding.instance;
            t48$0 == null ? null : t48$0.addPostFrameCallback(dart.fn(timeStamp => {
              let t51, t50, t49, t49$, t49$0;
              if (timeStamp == null) dart.nullFailed(I[18], 1998, 67, "timeStamp");
              t49 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
              t49 == null ? null : (t50 = t49.currentState, t50 == null ? null : (t51 = t50.canvasRenderBox, t51 == null ? null : t51.updateContextMenuPosition()));
              if (this[_scrollDirection] == enums.PdfScrollDirection.vertical && this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
                t49$ = this[_pdfScrollableStateKey].currentState;
                t49$ == null ? null : t49$.forcePixels(new ui.Offset.new(dart.notNull(initialOffset.dx) * dart.notNull(this[_viewportConstraints].biggest.width), targetOffset));
              } else {
                t49$0 = this[_pdfScrollableStateKey].currentState;
                t49$0 == null ? null : t49$0.forcePixels(new ui.Offset.new(targetOffset, dart.notNull(initialOffset.dy) * dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.height)));
              }
            }, T.DurationTovoid()));
          }
          this[_viewportWidth] = this[_viewportConstraints].maxWidth;
          this[_deviceOrientation] = media_query.MediaQuery.of(this.context).orientation;
        }
      }
    }
    [_updateOffsetOnLayoutChange](zoomLevel, scrollOffset, oldLayoutMode) {
      let t48, t48$, t48$0, t48$1;
      if (zoomLevel == null) dart.nullFailed(I[18], 2027, 14, "zoomLevel");
      if (scrollOffset == null) dart.nullFailed(I[18], 2027, 32, "scrollOffset");
      if (oldLayoutMode == null) dart.nullFailed(I[18], 2027, 64, "oldLayoutMode");
      if (oldLayoutMode != this.widget.pageLayoutMode && oldLayoutMode == enums.PdfPageLayoutMode.single) {
        this[_previousSinglePage] = this[_pdfViewerController].pageNumber;
        let greyArea = dart.notNull((t48$ = (t48 = this[_singlePageViewKey].currentState, t48 == null ? null : t48.greyAreaSize), t48$ == null ? 0.0 : t48$)) / 2;
        let heightPercentage = 1.0;
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile])) {
          heightPercentage = dart.notNull(dart.nullCheck(this[_document]).pages._get(dart.notNull(this[_pdfViewerController].pageNumber) - 1).size.height) / dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.height);
        }
        let singleOffset = (t48$1 = (t48$0 = this[_singlePageViewKey].currentState, t48$0 == null ? null : t48$0.currentOffset), t48$1 == null ? ui.Offset.zero : t48$1);
        singleOffset = new ui.Offset.new(dart.notNull(singleOffset.dx) * heightPercentage, (dart.notNull(singleOffset.dy) - greyArea) * heightPercentage);
        this[_layoutChangeOffset] = singleOffset;
      } else {
        let xPosition = scrollOffset.dx;
        let yPosition = scrollOffset.dy;
        if (dart.notNull(this[_pdfViewerController].pageNumber) > 1 && this.widget.scrollDirection == enums.PdfScrollDirection.vertical) {
          yPosition = dart.notNull(scrollOffset.dy) - dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageOffset);
        }
        if (dart.notNull(this[_pdfViewerController].pageNumber) > 1 && this.widget.scrollDirection == enums.PdfScrollDirection.horizontal) {
          xPosition = dart.notNull(scrollOffset.dx) - dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageOffset);
        }
        async.Future.delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
          if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
            this[_pdfViewerController].zoomLevel = 1.0;
          }
          this[_pdfViewerController].zoomLevel = zoomLevel;
          let heightPercentage = 1.0;
          if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile])) {
            heightPercentage = dart.notNull(dart.nullCheck(this[_document]).pages._get(dart.notNull(this[_pdfViewerController].pageNumber) - 1).size.height) / dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.height);
          }
          if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single && this[_singlePageViewKey].currentState != null) {
            let greyAreaHeight = dart.notNull(dart.nullCheck(this[_singlePageViewKey].currentState).greyAreaSize) / 2;
            if (dart.notNull(this[_viewportConstraints].maxHeight) > dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.height) * dart.notNull(this[_pdfViewerController].zoomLevel)) {
              dart.nullCheck(this[_singlePageViewKey].currentState).jumpOnZoomedDocument(this[_pdfViewerController].pageNumber, new ui.Offset.new(dart.notNull(xPosition) / heightPercentage, dart.notNull(yPosition) / heightPercentage));
            } else {
              dart.nullCheck(this[_singlePageViewKey].currentState).jumpOnZoomedDocument(this[_pdfViewerController].pageNumber, new ui.Offset.new(dart.notNull(xPosition) / heightPercentage, (dart.notNull(yPosition) + greyAreaHeight) / heightPercentage));
            }
          }
        }).bind(this)), T.VoidToFutureOfNull()));
      }
    }
    [_updateScrollDirectionChange](initialOffset, pageIndex, totalHeight) {
      let t48, t48$;
      if (initialOffset == null) dart.nullFailed(I[18], 2093, 14, "initialOffset");
      if (pageIndex == null) dart.nullFailed(I[18], 2093, 33, "pageIndex");
      if (totalHeight == null) dart.nullFailed(I[18], 2093, 51, "totalHeight");
      if (this[_scrollDirection] != this[_tempScrollDirection] || this[_pageLayoutMode] != this.widget.pageLayoutMode) {
        t48 = binding.WidgetsBinding.instance;
        t48 == null ? null : t48.addPostFrameCallback(dart.fn(timeStamp => {
          if (timeStamp == null) dart.nullFailed(I[18], 2096, 63, "timeStamp");
          this[_checkMount]();
        }, T.DurationTovoid()));
        if (pageIndex === 1 && !dart.test(this[_viewportConstraints].biggest.isEmpty) && this[_pdfScrollableStateKey].currentState != null) {
          this[_offsetBeforeOrientationChange] = new ui.Offset.new(dart.notNull(dart.nullCheck(this[_pdfScrollableStateKey].currentState).currentOffset.dx) / dart.notNull(this[_pdfDimension].width), dart.notNull(dart.nullCheck(this[_pdfScrollableStateKey].currentState).currentOffset.dy) / dart.notNull(this[_pdfDimension].height));
        } else if (pageIndex == this[_pdfViewerController].pageCount && this[_pdfScrollableStateKey].currentState != null) {
          if (this[_viewportWidth] !== 0) {
            t48$ = binding.WidgetsBinding.instance;
            t48$ == null ? null : t48$.addPostFrameCallback(dart.fn(timeStamp => {
              if (timeStamp == null) dart.nullFailed(I[18], 2111, 48, "timeStamp");
              return async.async(dart.void, (function*() {
                let t51, t50, t49;
                t49 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                t49 == null ? null : (t50 = t49.currentState, t50 == null ? null : (t51 = t50.canvasRenderBox, t51 == null ? null : t51.updateContextMenuPosition()));
                if (dart.notNull(this[_pdfViewerController].zoomLevel) <= 1) {
                  if (this[_scrollDirection] == enums.PdfScrollDirection.vertical && this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
                    let pageOffset = dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageOffset;
                    this[_scrollDirectionSwitchOffset] = new ui.Offset.new(0.0, core.double.as(pageOffset));
                  } else {
                    let pageOffset = dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageOffset;
                    this[_scrollDirectionSwitchOffset] = new ui.Offset.new(core.double.as(pageOffset), 0.0);
                  }
                } else if (this[_pdfScrollableStateKey].currentState != null) {
                  if (this[_scrollDirection] == enums.PdfScrollDirection.vertical && this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
                    let pageOffset = dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageOffset;
                    let calculatedOffsetY = dart.dsend(pageOffset, '+', [dart.notNull(initialOffset.dy) * dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.height)]);
                    let calculatedOffsetX = (dart.notNull(dart.nullCheck(this[_pdfScrollableStateKey].currentState).currentOffset.dx) - dart.notNull(this[_pageOffsetBeforeScrollDirectionChange])) * (dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.width) / dart.notNull(this[_pageSizeBeforeScrollDirectionChange].width));
                    this[_scrollDirectionSwitchOffset] = new ui.Offset.new(core.double.as(calculatedOffsetX), core.double.as(calculatedOffsetY));
                  } else {
                    let pageOffset = dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageOffset;
                    let calculatedOffsetX = dart.dsend(pageOffset, '+', [dart.notNull(initialOffset.dx) * dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.width)]);
                    let calculatedOffsetY = (dart.notNull(dart.nullCheck(this[_pdfScrollableStateKey].currentState).currentOffset.dy) - dart.notNull(this[_pageOffsetBeforeScrollDirectionChange])) / (dart.notNull(this[_pageSizeBeforeScrollDirectionChange].height) / dart.notNull(dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize.height));
                    this[_scrollDirectionSwitchOffset] = new ui.Offset.new(core.double.as(calculatedOffsetX), core.double.as(calculatedOffsetY));
                  }
                }
                this[_isScrollDirectionChange] = true && dart.equals(this[_layoutChangeOffset], ui.Offset.zero);
              }).bind(this));
            }, T.DurationToFutureOfvoid()));
          }
          this[_tempScrollDirection] = this[_scrollDirection];
          this[_pageLayoutMode] = this.widget.pageLayoutMode;
        }
      } else if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous || this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
        this[_pageOffsetBeforeScrollDirectionChange] = dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageOffset;
        this[_pageSizeBeforeScrollDirectionChange] = dart.nullCheck(this[_pdfPages][$_get](this[_pdfViewerController].pageNumber)).pageSize;
      }
    }
    [_calculateSize](constraints, originalWidth, originalHeight, newWidth, newHeight) {
      if (constraints == null) dart.nullFailed(I[18], 2184, 38, "constraints");
      if (originalWidth == null) dart.nullFailed(I[18], 2184, 58, "originalWidth");
      if (originalHeight == null) dart.nullFailed(I[18], 2185, 14, "originalHeight");
      if (newWidth == null) dart.nullFailed(I[18], 2185, 37, "newWidth");
      if (newHeight == null) dart.nullFailed(I[18], 2185, 54, "newHeight");
      if (dart.notNull(this[_viewportConstraints].maxWidth) > dart.notNull(newHeight) && !dart.test(pdfviewer_helper.kIsDesktop) && this[_scrollDirection] == enums.PdfScrollDirection.horizontal && this.widget.pageLayoutMode != enums.PdfPageLayoutMode.single) {
        constraints = new box.BoxConstraints.tightFor({width: null, height: this[_viewportHeightInLandscape]}).enforce(constraints);
      } else {
        if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single && (!dart.test(this[_isMobile]) || dart.notNull(this[_viewportConstraints].maxWidth) > dart.notNull(newHeight))) {
          constraints = new box.BoxConstraints.tightFor({width: null, height: newHeight}).enforce(constraints);
        } else {
          constraints = new box.BoxConstraints.tightFor({width: newWidth, height: null}).enforce(constraints);
        }
      }
      let newSize = constraints.constrainSizeAndAttemptToPreserveAspectRatio(new ui.Size.new(originalWidth, originalHeight));
      if ((this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single || this.widget.scrollDirection == enums.PdfScrollDirection.horizontal && media_query.Orientation.portrait == media_query.MediaQuery.of(this.context).orientation) && dart.notNull(newSize.height) > dart.notNull(newHeight)) {
        let newConstraints = new box.BoxConstraints.new({maxWidth: this[_viewportConstraints].maxWidth, maxHeight: newHeight});
        newConstraints = new box.BoxConstraints.tightFor({width: null, height: newHeight}).enforce(newConstraints);
        newSize = newConstraints.constrainSizeAndAttemptToPreserveAspectRatio(new ui.Size.new(originalWidth, originalHeight));
      }
      return newSize;
    }
    [_updateCurrentPageNumber](opts) {
      let t48, t48$;
      let currentOffset = opts && 'currentOffset' in opts ? opts.currentOffset : 0;
      if (currentOffset == null) dart.nullFailed(I[18], 2230, 41, "currentOffset");
      if (dart.notNull(currentOffset) > 0) {
        this[_pdfViewerController][_pageNumber] = (t48$ = (t48 = this[_pdfScrollableStateKey].currentState, t48 == null ? null : t48.getPageNumber(currentOffset)), t48$ == null ? 0 : t48$);
      } else {
        dart.notNull(this[_pdfViewerController].pageCount) > 0 ? this[_pdfViewerController][_pageNumber] = 1 : this[_pdfViewerController][_pageNumber] = 0;
      }
      this[_pageChanged]();
      this[_checkMount]();
    }
    [_handleTextSelectionDragStarted]() {
      this.setState(dart.fn(() => {
        this[_panEnabled] = false;
      }, T.VoidTovoid()));
    }
    [_handleTextSelectionDragEnded]() {
      this.setState(dart.fn(() => {
        this[_panEnabled] = true;
      }, T.VoidTovoid()));
    }
    [_jumpToPage](pageNumber) {
      let t48, t48$;
      if (pageNumber == null) dart.nullFailed(I[18], 2259, 24, "pageNumber");
      if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
        if (dart.test(this[_pageController].hasClients)) {
          this[_pageController].jumpToPage(dart.notNull(pageNumber) - 1);
        }
      } else if (this[_scrollDirection] == enums.PdfScrollDirection.horizontal) {
        t48 = this[_pdfScrollableStateKey].currentState;
        t48 == null ? null : t48.jumpTo({xOffset: dart.nullCheck(this[_pdfPages][$_get](pageNumber)).pageOffset});
      } else {
        t48$ = this[_pdfScrollableStateKey].currentState;
        t48$ == null ? null : t48$.jumpTo({yOffset: dart.nullCheck(this[_pdfPages][$_get](pageNumber)).pageOffset});
      }
    }
    [_jumpToBookmark](bookmark) {
      let t48;
      if (bookmark != null && this[_document] != null) {
        this[_clearSelection$0]();
        let heightPercentage = null;
        let widthPercentage = null;
        let bookmarkOffset = null;
        let pdfPage = null;
        if (bookmark.namedDestination != null) {
          pdfPage = dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).page;
        } else {
          pdfPage = dart.nullCheck(bookmark.destination).page;
        }
        let index = dart.notNull(dart.nullCheck(this[_document]).pages.indexOf(pdfPage)) + 1;
        let revealedOffset = dart.nullCheck(this[_pdfPages][$_get](index)).pageSize;
        let yOffset = dart.nullCheck(this[_pdfPages][$_get](index)).pageOffset;
        let isRotatedTo90or270 = pdfPage.rotation == pdf.PdfPageRotateAngle.rotateAngle90 || pdfPage.rotation == pdf.PdfPageRotateAngle.rotateAngle270;
        if (bookmark.namedDestination != null) {
          heightPercentage = dart.notNull(dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).page.size.height) / dart.notNull(isRotatedTo90or270 ? revealedOffset.width : revealedOffset.height);
          widthPercentage = dart.notNull(dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).page.size.width) / dart.notNull(isRotatedTo90or270 ? revealedOffset.height : revealedOffset.width);
          bookmarkOffset = dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).location;
        } else {
          heightPercentage = dart.notNull(dart.nullCheck(bookmark.destination).page.size.height) / dart.notNull(isRotatedTo90or270 ? revealedOffset.width : revealedOffset.height);
          widthPercentage = dart.notNull(dart.nullCheck(bookmark.destination).page.size.width) / dart.notNull(isRotatedTo90or270 ? revealedOffset.height : revealedOffset.width);
          bookmarkOffset = dart.nullCheck(bookmark.destination).location;
        }
        if (dart.nullCheck(this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber)).currentState != null) {
          bookmarkOffset = dart.nullCheck(dart.nullCheck(dart.nullCheck(this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber)).currentState).canvasRenderBox).getRotatedOffset(bookmarkOffset, index - 1, pdfPage.rotation);
        }
        if (dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile]) && this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous) {
          heightPercentage = 1.0;
        }
        yOffset = dart.notNull(yOffset) + dart.notNull(bookmarkOffset.dy) / dart.notNull(heightPercentage);
        let xOffset = dart.notNull(bookmarkOffset.dx) / dart.notNull(widthPercentage);
        if (this[_scrollDirection] == enums.PdfScrollDirection.horizontal) {
          if (this[_pdfViewerController].zoomLevel === 1) {
            xOffset = dart.nullCheck(this[_pdfPages][$_get](index)).pageOffset;
            yOffset = dart.notNull(bookmarkOffset.dy) / dart.notNull(heightPercentage);
          } else {
            xOffset = dart.notNull(dart.nullCheck(this[_pdfPages][$_get](index)).pageOffset) + dart.notNull(bookmarkOffset.dx) / dart.notNull(widthPercentage);
            yOffset = dart.notNull(bookmarkOffset.dy) / dart.notNull(heightPercentage);
          }
        }
        if (dart.notNull(yOffset) > dart.notNull(this[_maxScrollExtent])) {
          yOffset = this[_maxScrollExtent];
        }
        if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
          xOffset = dart.notNull(bookmarkOffset.dx) / dart.notNull(widthPercentage);
          yOffset = dart.notNull(bookmarkOffset.dy) / dart.notNull(heightPercentage);
          dart.nullCheck(this[_singlePageViewKey].currentState).jumpOnZoomedDocument(index, new ui.Offset.new(xOffset, yOffset));
        } else {
          t48 = this[_pdfScrollableStateKey].currentState;
          t48 == null ? null : t48.jumpTo({xOffset: xOffset, yOffset: yOffset});
        }
      }
    }
    [_clearSelection$0]() {
      let t50, t49, t48, t48$;
      t48$ = (t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : (t50 = t49.canvasRenderBox, t50 == null ? null : t50.clearSelection())));
      return t48$ == null ? false : t48$;
    }
    [_getPageIndex](offset) {
      if (offset == null) dart.nullFailed(I[18], 2354, 28, "offset");
      let pageIndex = 1;
      for (let index = 1; index <= dart.notNull(this[_pdfViewerController].pageCount); index = index + 1) {
        let pageStartOffset = dart.nullCheck(this[_pdfPages][$_get](index)).pageOffset;
        let pageEndOffset = dart.notNull(dart.nullCheck(this[_pdfPages][$_get](index)).pageOffset) + dart.notNull(dart.nullCheck(this[_pdfPages][$_get](index)).pageSize.width);
        if (dart.notNull(offset) >= dart.notNull(pageStartOffset) && dart.notNull(offset) < pageEndOffset) {
          pageIndex = index;
        }
      }
      return pageIndex;
    }
    [_handleControllerValueChange](opts) {
      let t48, t48$, t48$0, t48$1;
      let property = opts && 'property' in opts ? opts.property : null;
      if (property === "jumpToBookmark") {
        if (dart.test(this[_pdfPages][$isNotEmpty])) {
          this[_jumpToBookmark](this[_pdfViewerController][_pdfBookmark]);
        }
      } else if (property === "zoomLevel") {
        if (dart.notNull(this[_pdfViewerController].zoomLevel) > dart.notNull(this[_maxScale])) {
          this[_pdfViewerController].zoomLevel = this[_maxScale];
        } else if (dart.notNull(this[_pdfViewerController].zoomLevel) < dart.notNull(this[_minScale])) {
          this[_pdfViewerController].zoomLevel = this[_minScale];
        }
        if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous) {
          if (this[_pdfScrollableStateKey].currentState != null) {
            this[_pdfViewerController][_zoomLevel] = dart.nullCheck(this[_pdfScrollableStateKey].currentState).scaleTo(this[_pdfViewerController].zoomLevel);
            let previousScale = dart.nullCheck(this[_pdfScrollableStateKey].currentState).previousZoomLevel;
            if (this.widget.onZoomLevelChanged != null && previousScale != this[_pdfViewerController][_zoomLevel]) {
              let oldZoomLevel = previousScale;
              let newZoomLevel = this[_pdfViewerController][_zoomLevel];
              if (newZoomLevel != oldZoomLevel) {
                dart.nullCheck(this.widget.onZoomLevelChanged)(new pdfviewer_callback_details.PdfZoomDetails.new(newZoomLevel, oldZoomLevel));
              }
            }
            t48 = page_storage.PageStorage.of(this.context);
            t48 == null ? null : t48.writeState(this.context, this[_pdfViewerController].zoomLevel, {identifier: "zoomLevel_" + dart.notNull(dart.toString(this.widget.key))});
          }
        } else {
          if (this[_singlePageViewKey].currentState != null) {
            this[_pdfViewerController][_zoomLevel] = dart.nullCheck(this[_singlePageViewKey].currentState).scaleTo(this[_pdfViewerController].zoomLevel);
            if (!dart.test(dart.nullCheck(this[_singlePageViewKey].currentState).isJumpOnZoomedDocument)) {
              let previousScale = dart.nullCheck(this[_singlePageViewKey].currentState).previousZoomLevel;
              if (this.widget.onZoomLevelChanged != null && previousScale != this[_pdfViewerController][_zoomLevel]) {
                let oldZoomLevel = previousScale;
                let newZoomLevel = this[_pdfViewerController][_zoomLevel];
                if (newZoomLevel != oldZoomLevel) {
                  dart.nullCheck(this.widget.onZoomLevelChanged)(new pdfviewer_callback_details.PdfZoomDetails.new(newZoomLevel, oldZoomLevel));
                }
              }
            }
            t48$ = page_storage.PageStorage.of(this.context);
            t48$ == null ? null : t48$.writeState(this.context, this[_pdfViewerController].zoomLevel, {identifier: "zoomLevel_" + dart.notNull(dart.toString(this.widget.key))});
          }
        }
      } else if (property === "clearTextSelection") {
        this[_pdfViewerController][_clearTextSelection] = this[_clearSelection$0]();
      } else if (property === "jumpTo") {
        this[_clearSelection$0]();
        if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
          if (this[_previousHorizontalOffset] != this[_pdfViewerController][_horizontalOffset] && dart.test(this[_pageController].hasClients)) {
            this[_jumpToPage](this[_getPageIndex](this[_pdfViewerController][_horizontalOffset]));
            this[_previousHorizontalOffset] = this[_pdfViewerController][_horizontalOffset];
          }
          if (this[_singlePageViewKey].currentState != null) {
            dart.nullCheck(this[_singlePageViewKey].currentState).jumpTo({yOffset: this[_pdfViewerController][_verticalOffset]});
          }
        } else if (!dart.test(this[_pdfDimension].isEmpty)) {
          t48$0 = this[_pdfScrollableStateKey].currentState;
          t48$0 == null ? null : t48$0.jumpTo({xOffset: this[_pdfViewerController][_horizontalOffset], yOffset: this[_pdfViewerController][_verticalOffset]});
        }
      } else if (property === "pageNavigate" && this[_pdfViewerController][_pageNavigator] != null) {
        this[_clearSelection$0]();
        switch (dart.nullCheck(this[_pdfViewerController][_pageNavigator]).option) {
          case C[684] || CT.C684:
          {
            if (dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index) > 0 && dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index) <= dart.notNull(this[_pdfViewerController].pageCount)) {
              this[_jumpToPage](dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index));
            }
            break;
          }
          case C[685] || CT.C685:
          {
            this[_jumpToPage](1);
            break;
          }
          case C[686] || CT.C686:
          {
            if (this[_pdfViewerController].pageNumber != this[_pdfViewerController].pageCount) {
              this[_jumpToPage](this[_pdfViewerController].pageCount);
            }
            break;
          }
          case C[687] || CT.C687:
          {
            if (dart.notNull(this[_pdfViewerController].pageNumber) > 1) {
              this[_jumpToPage](dart.notNull(this[_pdfViewerController].pageNumber) - 1);
            }
            break;
          }
          case C[688] || CT.C688:
          {
            if (this[_pdfViewerController].pageNumber != this[_pdfViewerController].pageCount) {
              this[_jumpToPage](dart.notNull(this[_pdfViewerController].pageNumber) + 1);
            }
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
      } else if (property === "searchText") {
        this[_isSearchStarted] = true;
        this[_pdfViewerController][_pdfTextSearchResult].removeListener(dart.bind(this, _handleTextSearch));
        this[_textCollection] = (t48$1 = this[_pdfTextExtractor], t48$1 == null ? null : t48$1.findText(T.JSArrayOfString().of([this[_pdfViewerController][_searchText]]), {searchOption: this[_pdfViewerController][_textSearchOption]}));
        if (this[_textCollection] != null) {
          if (dart.test(dart.nullCheck(this[_textCollection])[$isEmpty])) {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_updateResult](false);
          } else {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = this[_getInstanceInPage](this[_pdfViewerController].pageNumber);
            if (dart.test(this[_pdfPages][$isNotEmpty]) && !dart.test(this[_isSearchInitiated])) {
              this[_jumpToSearchInstance]();
            }
            this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = dart.nullCheck(this[_textCollection])[$length];
            this[_pdfViewerController][_pdfTextSearchResult][_updateResult](true);
            this[_isSearchInitiated] = false;
          }
          this[_pdfViewerController][_pdfTextSearchResult].addListener(dart.bind(this, _handleTextSearch));
          this.setState(dart.fn(() => {
          }, T.VoidTovoid()));
        }
      }
    }
    [_getInstanceInPage](pageNumber, opts) {
      let t48, t48$, t48$0;
      if (pageNumber == null) dart.nullFailed(I[18], 2504, 30, "pageNumber");
      let lookForFirst = opts && 'lookForFirst' in opts ? opts.lookForFirst : true;
      if (lookForFirst == null) dart.nullFailed(I[18], 2504, 48, "lookForFirst");
      let instance = 0;
      if (dart.test(lookForFirst)) {
        instance = (t48 = this[_jumpToNextInstance](pageNumber), t48 == null ? this[_jumpToPreviousInstance](pageNumber) : t48);
      } else {
        instance = (t48$ = this[_jumpToPreviousInstance](pageNumber), t48$ == null ? this[_jumpToNextInstance](pageNumber) : t48$);
      }
      t48$0 = instance;
      return t48$0 == null ? 1 : t48$0;
    }
    [_jumpToNextInstance](pageNumber) {
      if (pageNumber == null) dart.nullFailed(I[18], 2516, 32, "pageNumber");
      for (let i = 0; i < dart.notNull(dart.nullCheck(this[_textCollection])[$length]); i = i + 1) {
        if (dart.notNull(dart.nullCheck(this[_textCollection])[$_get](i).pageIndex) + 1 >= dart.notNull(pageNumber)) {
          return i + 1;
        }
      }
      return null;
    }
    [_jumpToPreviousInstance](pageNumber) {
      if (pageNumber == null) dart.nullFailed(I[18], 2525, 36, "pageNumber");
      for (let i = dart.notNull(dart.nullCheck(this[_textCollection])[$length]) - 1; i > 0; i = i - 1) {
        if (dart.notNull(dart.nullCheck(this[_textCollection])[$_get](i).pageIndex) + 1 <= dart.notNull(pageNumber)) {
          return i + 1;
        }
      }
      return null;
    }
    [_jumpToSearchInstance](opts) {
      let t49, t48, t48$, t48$0, t48$1, t48$2, t48$3, t48$4;
      let isNext = opts && 'isNext' in opts ? opts.isNext : true;
      if (isNext == null) dart.nullFailed(I[18], 2534, 36, "isNext");
      if (dart.test(this[_isPageChanged])) {
        this[_updateSearchInstance]({isNext: isNext});
        this[_isPageChanged] = false;
      }
      let currentInstancePageIndex = dart.notNull(dart.nullCheck(this[_textCollection])[$_get](dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1).pageIndex) + 1;
      let topOffset = ui.Offset.zero;
      if ((t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : t49.canvasRenderBox)) != null) {
        topOffset = dart.nullCheck(dart.nullCheck(dart.nullCheck(this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber)).currentState).canvasRenderBox).getRotatedTextBounds(dart.nullCheck(this[_textCollection])[$_get](dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1).bounds, currentInstancePageIndex - 1, dart.nullCheck(this[_document]).pages._get(currentInstancePageIndex - 1).rotation).topLeft;
      }
      let heightPercentage = dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile]) && !dart.test(this[_isOverflowed]) && this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous ? 1.0 : core.double.as(dart.dsend(dart.nullCheck(this[_originalHeight])[$_get](currentInstancePageIndex - 1), '/', [dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageSize.height]));
      let widthPercentage = dart.test(pdfviewer_helper.kIsDesktop) && !dart.test(this[_isMobile]) && !dart.test(this[_isOverflowed]) && this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous ? 1.0 : core.double.as(dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](currentInstancePageIndex - 1), '/', [dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageSize.width]));
      let searchOffsetX = dart.notNull(topOffset.dx) / dart.notNull(widthPercentage);
      let searchOffsetY = dart.notNull(dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageOffset) + dart.notNull(topOffset.dy) / dart.notNull(heightPercentage);
      if (this[_scrollDirection] == enums.PdfScrollDirection.horizontal) {
        searchOffsetX = dart.notNull(dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageOffset) + dart.notNull(topOffset.dx) / dart.notNull(widthPercentage);
        searchOffsetY = dart.notNull(topOffset.dy) / dart.notNull(heightPercentage);
      }
      let offset = (t48$0 = (t48$ = this[_pdfScrollableStateKey].currentState, t48$ == null ? null : t48$.currentOffset), t48$0 == null ? ui.Offset.zero : t48$0);
      let viewport = new ui.Rect.fromLTWH(offset.dx, offset.dy, dart.notNull(this[_viewportConstraints].biggest.width) / dart.notNull(this[_pdfViewerController].zoomLevel), dart.notNull(this[_viewportConstraints].biggest.height) / dart.notNull(this[_pdfViewerController].zoomLevel));
      let singleLayoutOffset = (t48$2 = (t48$1 = this[_singlePageViewKey].currentState, t48$1 == null ? null : t48$1.currentOffset), t48$2 == null ? ui.Offset.zero : t48$2);
      let singleLayoutViewport = new ui.Rect.fromLTWH(singleLayoutOffset.dx, singleLayoutOffset.dy, dart.notNull(this[_viewportConstraints].biggest.width) / dart.notNull(this[_pdfViewerController].zoomLevel), dart.notNull(this[_viewportConstraints].biggest.height) / dart.notNull(this[_pdfViewerController].zoomLevel));
      if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single) {
        if (!dart.test(singleLayoutViewport.contains(new ui.Offset.new(dart.notNull(topOffset.dx) / dart.notNull(widthPercentage), dart.notNull(topOffset.dy) / dart.notNull(heightPercentage) + dart.notNull(dart.nullCheck(this[_singlePageViewKey].currentState).greyAreaSize)))) || currentInstancePageIndex !== this[_pdfViewerController].pageNumber) {
          dart.nullCheck(this[_singlePageViewKey].currentState).jumpOnZoomedDocument(currentInstancePageIndex, new ui.Offset.new(dart.notNull(topOffset.dx) / dart.notNull(widthPercentage), dart.notNull(topOffset.dy) / dart.notNull(heightPercentage)));
        }
        t48$3 = binding.WidgetsBinding.instance;
        t48$3 == null ? null : t48$3.addPostFrameCallback(dart.fn(timeStamp => {
          if (timeStamp == null) dart.nullFailed(I[18], 2614, 63, "timeStamp");
          if (dart.test(this[_isPageChanged])) {
            this[_isPageChanged] = false;
          }
        }, T.DurationTovoid()));
      } else {
        if (this[_pdfScrollableStateKey].currentState != null && !dart.test(viewport.contains(new ui.Offset.new(searchOffsetX, searchOffsetY)))) {
          this[_pdfViewerController].jumpTo({xOffset: searchOffsetX, yOffset: searchOffsetY});
          t48$4 = binding.WidgetsBinding.instance;
          t48$4 == null ? null : t48$4.addPostFrameCallback(dart.fn(timeStamp => {
            if (timeStamp == null) dart.nullFailed(I[18], 2624, 65, "timeStamp");
            if (dart.test(this[_isPageChanged])) {
              this[_isPageChanged] = false;
            }
          }, T.DurationTovoid()));
        }
      }
    }
    [_handleTextSearch](opts) {
      let property = opts && 'property' in opts ? opts.property : null;
      if (dart.test(this[_pdfViewerController][_pdfTextSearchResult].hasResult)) {
        if (property === "nextInstance") {
          this.setState(dart.fn(() => {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) < dart.notNull(this[_pdfViewerController][_pdfTextSearchResult][_totalInstanceCount]) ? dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) + 1 : 1;
            this[_jumpToSearchInstance]({isNext: true});
          }, T.VoidTovoid()));
        } else if (property === "previousInstance") {
          this.setState(dart.fn(() => {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) > 1 ? dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1 : this[_pdfViewerController][_pdfTextSearchResult].totalInstanceCount;
            this[_jumpToSearchInstance]({isNext: false});
          }, T.VoidTovoid()));
        } else if (property === "clear") {
          this.setState(dart.fn(() => {
            let t49, t48;
            this[_isSearchStarted] = false;
            this[_textCollection] = null;
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_updateResult](false);
            t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
            t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : t49.focusNode.requestFocus());
          }, T.VoidTovoid()));
          return;
        }
      }
    }
    [_handlePdfOffsetChanged$0](offset) {
      let t49, t48;
      if (offset == null) dart.nullFailed(I[18], 2675, 39, "offset");
      if (!dart.test(this[_isSearchStarted])) {
        t48 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t48 == null ? null : (t49 = t48.currentState, t49 == null ? null : t49.focusNode.requestFocus());
      }
      if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.continuous) {
        if (this[_scrollDirection] == enums.PdfScrollDirection.horizontal) {
          this[_updateCurrentPageNumber]({currentOffset: offset.dx});
        } else {
          this[_updateCurrentPageNumber]({currentOffset: offset.dy});
        }
      }
      if (this.widget.pageLayoutMode == enums.PdfPageLayoutMode.single && dart.test(this[_pageController].hasClients)) {
        this[_pdfViewerController][_scrollPositionX] = this[_pageController].offset;
      } else {
        this[_pdfViewerController][_scrollPositionX] = offset.dx[$abs]();
      }
      this[_pdfViewerController][_scrollPositionY] = offset.dy[$abs]();
    }
  };
  (pdfviewer.SfPdfViewerState.new = function() {
    this[__SfPdfViewerState__plugin] = null;
    this[__SfPdfViewerState__plugin_isSet] = false;
    this[__SfPdfViewerState__pdfViewerController] = null;
    this[__SfPdfViewerState__pdfViewerController_isSet] = false;
    this[_getPdfFileCancellableOperation] = null;
    this[_pdfDocumentLoadCancellableOperation] = null;
    this[_getHeightCancellableOperation] = null;
    this[_getWidthCancellableOperation] = null;
    this[_originalHeight] = null;
    this[_originalWidth] = null;
    this[_viewportHeightInLandscape] = null;
    this[_otherContextHeight] = null;
    this[_maxPdfPageWidth] = 0.0;
    this[_minScale] = 1.0;
    this[_maxScale] = 3.0;
    this[_isScaleEnabled] = !dart.test(pdfviewer_helper.kIsDesktop);
    this[_isPdfPageTapped] = false;
    this[_isDocumentLoadInitiated] = false;
    this[_deviceOrientation] = null;
    this[_viewportWidth] = 0.0;
    this[_offsetBeforeOrientationChange] = ui.Offset.zero;
    this[__SfPdfViewerState__viewportConstraints] = null;
    this[__SfPdfViewerState__viewportConstraints_isSet] = false;
    this[_previousPageNumber] = 0;
    this[_document] = null;
    this[_hasError] = false;
    this[_panEnabled] = true;
    this[_isMobile] = false;
    this[_isSearchStarted] = false;
    this[_isKeyPadRaised] = false;
    this[_isTextSelectionCleared] = false;
    this[_pdfPages] = new (T.IdentityMapOfint$PdfPageInfo()).new();
    this[_childKey$] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_singlePageViewKey] = T.GlobalKeyOfSinglePageViewState().new();
    this[_bookmarkKey] = T.GlobalKeyOfBookmarkViewControllerState().new();
    this[_pdfScrollableStateKey] = T.GlobalKeyOfPdfScrollableState().new();
    this[_pdfPagesKey] = new (T.IdentityMapOfint$GlobalKeyOfPdfPageViewState()).new();
    this[_cursor$] = mouse_cursor.SystemMouseCursors.basic;
    this[_textCollection] = null;
    this[_pdfTextExtractor] = null;
    this[_maxScrollExtent] = 0.0;
    this[_pdfDimension] = ui.Size.zero;
    this[_isPageChanged] = false;
    this[_isSinglePageViewPageChanged] = false;
    this[_isSearchInitiated] = false;
    this[_isOverflowed] = false;
    this[_startPage] = 0;
    this[_endPage] = 0;
    this[_bufferCount] = 0;
    this[_renderedImages] = T.JSArrayOfint().of([]);
    this[_pageTextExtractor] = new (T.IdentityMapOfint$String()).new();
    this[_totalImageSize] = ui.Size.zero;
    this[__SfPdfViewerState__scrollDirection] = null;
    this[__SfPdfViewerState__scrollDirection_isSet] = false;
    this[__SfPdfViewerState__tempScrollDirection] = null;
    this[__SfPdfViewerState__tempScrollDirection_isSet] = false;
    this[__SfPdfViewerState__pageLayoutMode] = null;
    this[__SfPdfViewerState__pageLayoutMode_isSet] = false;
    this[_pageOffsetBeforeScrollDirectionChange] = 0.0;
    this[_pageSizeBeforeScrollDirectionChange] = ui.Size.zero;
    this[_scrollDirectionSwitchOffset] = ui.Offset.zero;
    this[_isScrollDirectionChange] = false;
    this[_pageController] = new page_view.PageController.new();
    this[_previousHorizontalOffset] = 0.0;
    this[_viewportHeight] = 0.0;
    this[_iskeypadClosed] = false;
    this[_layoutChangeOffset] = ui.Offset.zero;
    this[_previousSinglePage] = 1;
    this[_pdfViewerThemeData$4] = null;
    pdfviewer.SfPdfViewerState.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.SfPdfViewerState.prototype;
  dart.addTypeTests(pdfviewer.SfPdfViewerState);
  dart.addTypeCaches(pdfviewer.SfPdfViewerState);
  dart.setMethodSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getMethods(pdfviewer.SfPdfViewerState.__proto__),
    [_setInitialScrollOffset]: dart.fnType(dart.void, []),
    [_compareDocument]: dart.fnType(async.Future$(dart.void), [async.Future$(typed_data.Uint8List), async.Future$(typed_data.Uint8List)]),
    [_disposeCollection]: dart.fnType(dart.void, [dart.nullable(core.List)]),
    [_reset]: dart.fnType(dart.void, []),
    [_loadPdfDocument]: dart.fnType(async.Future$(dart.void), [core.bool]),
    [_getPdfFile]: dart.fnType(async.Future$(dart.nullable(pdf.PdfDocument)), [dart.nullable(typed_data.Uint8List)]),
    [_isDocumentLoaded]: dart.fnType(dart.void, []),
    [_isPdfPagesLoaded]: dart.fnType(dart.void, []),
    [_findDevice$]: dart.fnType(dart.void, [framework.BuildContext]),
    [_getViewportGlobalRect]: dart.fnType(dart.nullable(ui.Rect), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_handleSinglePageViewPageChanged]: dart.fnType(dart.void, [core.int]),
    [_interactionUpdate]: dart.fnType(dart.void, [core.double]),
    [_handleSinglePageViewZoomLevelChanged]: dart.fnType(dart.void, [core.double]),
    [_getChildSize$]: dart.fnType(ui.Size, [ui.Size]),
    [_handlePdfPagePointerDown]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_handlePdfPagePointerMove]: dart.fnType(dart.void, [events.PointerMoveEvent]),
    [_handlePdfPagePointerUp]: dart.fnType(dart.void, [events.PointerUpEvent]),
    [_handlePointerSignal]: dart.fnType(dart.void, [events.PointerSignalEvent]),
    [_handlePointerDown]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_handlePointerMove]: dart.fnType(dart.void, [events.PointerMoveEvent]),
    [_handlePointerUp]: dart.fnType(dart.void, [events.PointerUpEvent]),
    [_handleDoubleTap]: dart.fnType(dart.void, []),
    [_handleBookmarkViewChanged]: dart.fnType(dart.void, [core.bool]),
    openBookmarkView: dart.fnType(dart.void, []),
    getSelectedTextLines: dart.fnType(core.List$(pdftextline.PdfTextLine), []),
    [_findStartOrEndPage]: dart.fnType(core.int, [core.int, core.bool]),
    [_getImages]: dart.fnType(dart.nullable(async.Future$(dart.nullable(core.Map$(core.int, core.List)))), []),
    [_checkMount]: dart.fnType(dart.void, []),
    [_pageChanged]: dart.fnType(dart.void, []),
    [_updateSearchInstance]: dart.fnType(dart.void, [], {isNext: core.bool}, {}),
    [_updateOffsetOnOrientationChange]: dart.fnType(dart.void, [ui.Offset, core.int, core.double]),
    [_updateOffsetOnLayoutChange]: dart.fnType(dart.void, [core.double, ui.Offset, enums.PdfPageLayoutMode]),
    [_updateScrollDirectionChange]: dart.fnType(dart.void, [ui.Offset, core.int, core.double]),
    [_calculateSize]: dart.fnType(ui.Size, [box.BoxConstraints, core.double, core.double, core.double, core.double]),
    [_updateCurrentPageNumber]: dart.fnType(dart.void, [], {currentOffset: core.double}, {}),
    [_handleTextSelectionDragStarted]: dart.fnType(dart.void, []),
    [_handleTextSelectionDragEnded]: dart.fnType(dart.void, []),
    [_jumpToPage]: dart.fnType(dart.void, [core.int]),
    [_jumpToBookmark]: dart.fnType(dart.void, [dart.nullable(pdf.PdfBookmark)]),
    [_clearSelection$0]: dart.fnType(core.bool, []),
    [_getPageIndex]: dart.fnType(core.int, [core.double]),
    [_handleControllerValueChange]: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}),
    [_getInstanceInPage]: dart.fnType(core.int, [core.int], {lookForFirst: core.bool}, {}),
    [_jumpToNextInstance]: dart.fnType(dart.nullable(core.int), [core.int]),
    [_jumpToPreviousInstance]: dart.fnType(dart.nullable(core.int), [core.int]),
    [_jumpToSearchInstance]: dart.fnType(dart.void, [], {isNext: core.bool}, {}),
    [_handleTextSearch]: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}),
    [_handlePdfOffsetChanged$0]: dart.fnType(dart.void, [ui.Offset])
  }));
  dart.setGetterSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getGetters(pdfviewer.SfPdfViewerState.__proto__),
    [_plugin]: pdfviewer_plugin.PdfViewerPlugin,
    [_pdfViewerController]: pdfviewer.PdfViewerController,
    [_viewportConstraints]: box.BoxConstraints,
    [_scrollDirection]: enums.PdfScrollDirection,
    [_tempScrollDirection]: enums.PdfScrollDirection,
    [_pageLayoutMode]: enums.PdfPageLayoutMode,
    isBookmarkViewOpen: core.bool
  }));
  dart.setSetterSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getSetters(pdfviewer.SfPdfViewerState.__proto__),
    [_plugin]: pdfviewer_plugin.PdfViewerPlugin,
    [_pdfViewerController]: pdfviewer.PdfViewerController,
    [_viewportConstraints]: box.BoxConstraints,
    [_scrollDirection]: enums.PdfScrollDirection,
    [_tempScrollDirection]: enums.PdfScrollDirection,
    [_pageLayoutMode]: enums.PdfPageLayoutMode
  }));
  dart.setLibraryUri(pdfviewer.SfPdfViewerState, I[19]);
  dart.setFieldSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getFields(pdfviewer.SfPdfViewerState.__proto__),
    [__SfPdfViewerState__plugin]: dart.fieldType(dart.nullable(pdfviewer_plugin.PdfViewerPlugin)),
    [__SfPdfViewerState__plugin_isSet]: dart.fieldType(core.bool),
    [__SfPdfViewerState__pdfViewerController]: dart.fieldType(dart.nullable(pdfviewer.PdfViewerController)),
    [__SfPdfViewerState__pdfViewerController_isSet]: dart.fieldType(core.bool),
    [_getPdfFileCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation$(typed_data.Uint8List))),
    [_pdfDocumentLoadCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation$(dart.nullable(pdf.PdfDocument)))),
    [_getHeightCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation$(dart.nullable(core.List)))),
    [_getWidthCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation$(dart.nullable(core.List)))),
    [_originalHeight]: dart.fieldType(dart.nullable(core.List)),
    [_originalWidth]: dart.fieldType(dart.nullable(core.List)),
    [_viewportHeightInLandscape]: dart.fieldType(dart.nullable(core.double)),
    [_otherContextHeight]: dart.fieldType(dart.nullable(core.double)),
    [_maxPdfPageWidth]: dart.fieldType(core.double),
    [_minScale]: dart.finalFieldType(core.double),
    [_maxScale]: dart.finalFieldType(core.double),
    [_isScaleEnabled]: dart.fieldType(core.bool),
    [_isPdfPageTapped]: dart.fieldType(core.bool),
    [_isDocumentLoadInitiated]: dart.fieldType(core.bool),
    [_deviceOrientation]: dart.fieldType(dart.nullable(media_query.Orientation)),
    [_viewportWidth]: dart.fieldType(core.double),
    [_offsetBeforeOrientationChange]: dart.fieldType(ui.Offset),
    [__SfPdfViewerState__viewportConstraints]: dart.fieldType(dart.nullable(box.BoxConstraints)),
    [__SfPdfViewerState__viewportConstraints_isSet]: dart.fieldType(core.bool),
    [_previousPageNumber]: dart.fieldType(core.int),
    [_document]: dart.fieldType(dart.nullable(pdf.PdfDocument)),
    [_hasError]: dart.fieldType(core.bool),
    [_panEnabled]: dart.fieldType(core.bool),
    [_isMobile]: dart.fieldType(core.bool),
    [_isSearchStarted]: dart.fieldType(core.bool),
    [_isKeyPadRaised]: dart.fieldType(core.bool),
    [_isTextSelectionCleared]: dart.fieldType(core.bool),
    [_pdfPages]: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    [_childKey$]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_singlePageViewKey]: dart.finalFieldType(framework.GlobalKey$(single_page_view.SinglePageViewState)),
    [_bookmarkKey]: dart.finalFieldType(framework.GlobalKey$(bookmark_view.BookmarkViewControllerState)),
    [_pdfScrollableStateKey]: dart.finalFieldType(framework.GlobalKey$(pdf_scrollable.PdfScrollableState)),
    [_pdfPagesKey]: dart.finalFieldType(core.Map$(core.int, framework.GlobalKey$(pdf_page_view.PdfPageViewState))),
    [_cursor$]: dart.fieldType(mouse_cursor.SystemMouseCursor),
    [_textCollection]: dart.fieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    [_pdfTextExtractor]: dart.fieldType(dart.nullable(pdf.PdfTextExtractor)),
    [_maxScrollExtent]: dart.fieldType(core.double),
    [_pdfDimension]: dart.fieldType(ui.Size),
    [_isPageChanged]: dart.fieldType(core.bool),
    [_isSinglePageViewPageChanged]: dart.fieldType(core.bool),
    [_isSearchInitiated]: dart.fieldType(core.bool),
    [_isOverflowed]: dart.fieldType(core.bool),
    [_startPage]: dart.fieldType(core.int),
    [_endPage]: dart.fieldType(core.int),
    [_bufferCount]: dart.fieldType(core.int),
    [_renderedImages]: dart.finalFieldType(core.List$(core.int)),
    [_pageTextExtractor]: dart.finalFieldType(core.Map$(core.int, core.String)),
    [_totalImageSize]: dart.fieldType(ui.Size),
    [__SfPdfViewerState__scrollDirection]: dart.fieldType(dart.nullable(enums.PdfScrollDirection)),
    [__SfPdfViewerState__scrollDirection_isSet]: dart.fieldType(core.bool),
    [__SfPdfViewerState__tempScrollDirection]: dart.fieldType(dart.nullable(enums.PdfScrollDirection)),
    [__SfPdfViewerState__tempScrollDirection_isSet]: dart.fieldType(core.bool),
    [__SfPdfViewerState__pageLayoutMode]: dart.fieldType(dart.nullable(enums.PdfPageLayoutMode)),
    [__SfPdfViewerState__pageLayoutMode_isSet]: dart.fieldType(core.bool),
    [_pageOffsetBeforeScrollDirectionChange]: dart.fieldType(core.double),
    [_pageSizeBeforeScrollDirectionChange]: dart.fieldType(ui.Size),
    [_scrollDirectionSwitchOffset]: dart.fieldType(ui.Offset),
    [_isScrollDirectionChange]: dart.fieldType(core.bool),
    [_pageController]: dart.fieldType(page_view.PageController),
    [_previousHorizontalOffset]: dart.fieldType(core.double),
    [_viewportHeight]: dart.fieldType(core.double),
    [_iskeypadClosed]: dart.fieldType(core.bool),
    [_layoutChangeOffset]: dart.fieldType(ui.Offset),
    [_previousSinglePage]: dart.fieldType(core.int),
    [_pdfViewerThemeData$4]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData))
  }));
  var _currentPageNumber = dart.privateName(pdfviewer, "_currentPageNumber");
  var _totalPages = dart.privateName(pdfviewer, "_totalPages");
  var ___ValueChangeNotifier_listener = dart.privateName(pdfviewer, "_#_ValueChangeNotifier#listener");
  var ___ValueChangeNotifier_listener_isSet = dart.privateName(pdfviewer, "_#_ValueChangeNotifier#listener#isSet");
  var _listeners = dart.privateName(pdfviewer, "_listeners");
  pdfviewer._ValueChangeNotifier = class _ValueChangeNotifier extends core.Object {
    get listener() {
      let t48;
      return dart.test(this[___ValueChangeNotifier_listener_isSet]) ? (t48 = this[___ValueChangeNotifier_listener], t48) : dart.throw(new _internal.LateError.fieldNI("listener"));
    }
    set listener(t48) {
      if (t48 == null) dart.nullFailed(I[18], 3640, 31, "null");
      this[___ValueChangeNotifier_listener_isSet] = true;
      this[___ValueChangeNotifier_listener] = t48;
    }
    addListener(listener) {
      if (listener == null) dart.nullFailed(I[18], 3644, 43, "listener");
      this[_listeners].add(listener);
    }
    removeListener(listener) {
      if (listener == null) dart.nullFailed(I[18], 3648, 46, "listener");
      this[_listeners].remove(listener);
    }
    notifyPropertyChangedListeners(opts) {
      let t50;
      let property = opts && 'property' in opts ? opts.property : null;
      for (let t49 of this[_listeners]) {
        this.listener = t49;
        t50 = property;
        this.listener({property: t50});
      }
    }
  };
  (pdfviewer._ValueChangeNotifier.new = function() {
    this[___ValueChangeNotifier_listener] = null;
    this[___ValueChangeNotifier_listener_isSet] = false;
    this[_listeners] = new (T.ObserverListOf__Tovoid()).new();
    ;
  }).prototype = pdfviewer._ValueChangeNotifier.prototype;
  dart.addTypeTests(pdfviewer._ValueChangeNotifier);
  dart.addTypeCaches(pdfviewer._ValueChangeNotifier);
  dart.setMethodSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getMethods(pdfviewer._ValueChangeNotifier.__proto__),
    addListener: dart.fnType(dart.void, [dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})]),
    removeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})]),
    notifyPropertyChangedListeners: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getGetters(pdfviewer._ValueChangeNotifier.__proto__),
    listener: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setSetterSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getSetters(pdfviewer._ValueChangeNotifier.__proto__),
    listener: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setLibraryUri(pdfviewer._ValueChangeNotifier, I[19]);
  dart.setFieldSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getFields(pdfviewer._ValueChangeNotifier.__proto__),
    [___ValueChangeNotifier_listener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}))),
    [___ValueChangeNotifier_listener_isSet]: dart.fieldType(core.bool),
    [_listeners]: dart.finalFieldType(observer_list.ObserverList$(dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})))
  }));
  pdfviewer.PdfViewerController = class PdfViewerController extends pdfviewer._ValueChangeNotifier {
    set [_pageNumber](num) {
      if (num == null) dart.nullFailed(I[18], 2773, 23, "num");
      this[_currentPageNumber] = num;
      this.notifyPropertyChangedListeners({property: "pageChanged"});
    }
    set [_pageCount](pageCount) {
      if (pageCount == null) dart.nullFailed(I[18], 2779, 22, "pageCount");
      this[_totalPages] = pageCount;
      this.notifyPropertyChangedListeners({property: "pageCount"});
    }
    get scrollOffset() {
      return new ui.Offset.new(this[_scrollPositionX], this[_scrollPositionY]);
    }
    get zoomLevel() {
      return this[_zoomLevel];
    }
    set zoomLevel(newValue) {
      if (newValue == null) dart.nullFailed(I[18], 2861, 24, "newValue");
      if (this[_zoomLevel] == newValue) {
        return;
      }
      this[_zoomLevel] = newValue;
      this.notifyPropertyChangedListeners({property: "zoomLevel"});
    }
    get pageNumber() {
      return this[_currentPageNumber];
    }
    get pageCount() {
      return this[_totalPages];
    }
    jumpToBookmark(bookmark) {
      if (bookmark == null) dart.nullFailed(I[18], 3079, 35, "bookmark");
      this[_pdfBookmark] = bookmark;
      this.notifyPropertyChangedListeners({property: "jumpToBookmark"});
    }
    jumpTo(opts) {
      let xOffset = opts && 'xOffset' in opts ? opts.xOffset : 0;
      if (xOffset == null) dart.nullFailed(I[18], 3138, 23, "xOffset");
      let yOffset = opts && 'yOffset' in opts ? opts.yOffset : 0;
      if (yOffset == null) dart.nullFailed(I[18], 3138, 45, "yOffset");
      this[_horizontalOffset] = xOffset;
      this[_verticalOffset] = yOffset;
      this.notifyPropertyChangedListeners({property: "jumpTo"});
    }
    jumpToPage(pageNumber) {
      if (pageNumber == null) dart.nullFailed(I[18], 3194, 23, "pageNumber");
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.jumpToPage, {index: pageNumber});
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    previousPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.previousPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    nextPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.nextPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    firstPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.firstPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    lastPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.lastPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    searchText(searchText, opts) {
      if (searchText == null) dart.nullFailed(I[18], 3536, 49, "searchText");
      let searchOption = opts && 'searchOption' in opts ? opts.searchOption : null;
      return async.async(pdfviewer.PdfTextSearchResult, (function* searchText$() {
        this[_searchText] = searchText;
        this[_textSearchOption] = searchOption;
        this.notifyPropertyChangedListeners({property: "searchText"});
        return this[_pdfTextSearchResult];
      }).bind(this));
    }
    clearSelection() {
      this.notifyPropertyChangedListeners({property: "clearTextSelection"});
      return this[_clearTextSelection];
    }
    [_reset]() {
      this[_zoomLevel] = 1.0;
      this[_currentPageNumber] = 0;
      this[_totalPages] = 0;
      this[_verticalOffset] = 0.0;
      this[_horizontalOffset] = 0.0;
      this[_searchText] = "";
      this[_pageNavigator] = null;
      this[_pdfBookmark] = null;
      this.notifyPropertyChangedListeners();
    }
  };
  (pdfviewer.PdfViewerController.new = function() {
    this[_zoomLevel] = 1.0;
    this[_currentPageNumber] = 0;
    this[_totalPages] = 0;
    this[_searchText] = "";
    this[_textSearchOption] = null;
    this[_pdfBookmark] = null;
    this[_pdfTextSearchResult] = new pdfviewer.PdfTextSearchResult.new();
    this[_verticalOffset] = 0.0;
    this[_horizontalOffset] = 0.0;
    this[_pageNavigator] = null;
    this[_clearTextSelection] = false;
    this[_scrollPositionX] = 0.0;
    this[_scrollPositionY] = 0.0;
    pdfviewer.PdfViewerController.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.PdfViewerController.prototype;
  dart.addTypeTests(pdfviewer.PdfViewerController);
  dart.addTypeCaches(pdfviewer.PdfViewerController);
  dart.setMethodSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getMethods(pdfviewer.PdfViewerController.__proto__),
    jumpToBookmark: dart.fnType(dart.void, [pdf.PdfBookmark]),
    jumpTo: dart.fnType(dart.void, [], {xOffset: core.double, yOffset: core.double}, {}),
    jumpToPage: dart.fnType(dart.void, [core.int]),
    previousPage: dart.fnType(dart.void, []),
    nextPage: dart.fnType(dart.void, []),
    firstPage: dart.fnType(dart.void, []),
    lastPage: dart.fnType(dart.void, []),
    searchText: dart.fnType(async.Future$(pdfviewer.PdfTextSearchResult), [core.String], {searchOption: dart.nullable(pdf.TextSearchOption)}, {}),
    clearSelection: dart.fnType(core.bool, []),
    [_reset]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getGetters(pdfviewer.PdfViewerController.__proto__),
    scrollOffset: ui.Offset,
    zoomLevel: core.double,
    pageNumber: core.int,
    pageCount: core.int
  }));
  dart.setSetterSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getSetters(pdfviewer.PdfViewerController.__proto__),
    [_pageNumber]: core.int,
    [_pageCount]: core.int,
    zoomLevel: core.double
  }));
  dart.setLibraryUri(pdfviewer.PdfViewerController, I[19]);
  dart.setFieldSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getFields(pdfviewer.PdfViewerController.__proto__),
    [_zoomLevel]: dart.fieldType(core.double),
    [_currentPageNumber]: dart.fieldType(core.int),
    [_totalPages]: dart.fieldType(core.int),
    [_searchText]: dart.fieldType(core.String),
    [_textSearchOption]: dart.fieldType(dart.nullable(pdf.TextSearchOption)),
    [_pdfBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_pdfTextSearchResult]: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    [_verticalOffset]: dart.fieldType(core.double),
    [_horizontalOffset]: dart.fieldType(core.double),
    [_pageNavigator]: dart.fieldType(dart.nullable(pagination.Pagination)),
    [_clearTextSelection]: dart.fieldType(core.bool),
    [_scrollPositionX]: dart.fieldType(core.double),
    [_scrollPositionY]: dart.fieldType(core.double)
  }));
  var _currentInstanceIndex = dart.privateName(pdfviewer, "_currentInstanceIndex");
  var _hasResult = dart.privateName(pdfviewer, "_hasResult");
  pdfviewer.PdfTextSearchResult = class PdfTextSearchResult extends pdfviewer._ValueChangeNotifier {
    set [_currentOccurrenceIndex](num) {
      if (num == null) dart.nullFailed(I[18], 3578, 35, "num");
      this[_currentInstanceIndex] = num;
      this.notifyPropertyChangedListeners({property: "currentInstance"});
    }
    get currentInstanceIndex() {
      return this[_currentInstanceIndex];
    }
    set [_totalSearchTextCount](totalInstanceCount) {
      if (totalInstanceCount == null) dart.nullFailed(I[18], 3589, 33, "totalInstanceCount");
      this[_totalInstanceCount] = totalInstanceCount;
      this.notifyPropertyChangedListeners({property: "totalInstance"});
    }
    get totalInstanceCount() {
      return this[_totalInstanceCount];
    }
    [_updateResult](hasResult) {
      if (hasResult == null) dart.nullFailed(I[18], 3600, 27, "hasResult");
      this[_hasResult] = hasResult;
      this.notifyPropertyChangedListeners({property: "result"});
    }
    get hasResult() {
      return this[_hasResult];
    }
    nextInstance() {
      this.notifyPropertyChangedListeners({property: "nextInstance"});
    }
    previousInstance() {
      this.notifyPropertyChangedListeners({property: "previousInstance"});
    }
    clear() {
      this.notifyPropertyChangedListeners({property: "clear"});
    }
  };
  (pdfviewer.PdfTextSearchResult.new = function() {
    this[_currentInstanceIndex] = 0;
    this[_totalInstanceCount] = 0;
    this[_hasResult] = false;
    pdfviewer.PdfTextSearchResult.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.PdfTextSearchResult.prototype;
  dart.addTypeTests(pdfviewer.PdfTextSearchResult);
  dart.addTypeCaches(pdfviewer.PdfTextSearchResult);
  dart.setMethodSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getMethods(pdfviewer.PdfTextSearchResult.__proto__),
    [_updateResult]: dart.fnType(dart.void, [core.bool]),
    nextInstance: dart.fnType(dart.void, []),
    previousInstance: dart.fnType(dart.void, []),
    clear: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getGetters(pdfviewer.PdfTextSearchResult.__proto__),
    currentInstanceIndex: core.int,
    totalInstanceCount: core.int,
    hasResult: core.bool
  }));
  dart.setSetterSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getSetters(pdfviewer.PdfTextSearchResult.__proto__),
    [_currentOccurrenceIndex]: core.int,
    [_totalSearchTextCount]: core.int
  }));
  dart.setLibraryUri(pdfviewer.PdfTextSearchResult, I[19]);
  dart.setFieldSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getFields(pdfviewer.PdfTextSearchResult.__proto__),
    [_currentInstanceIndex]: dart.fieldType(core.int),
    [_totalInstanceCount]: dart.fieldType(core.int),
    [_hasResult]: dart.fieldType(core.bool)
  }));
  dart.trackLibraries("packages/syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart", {
    "package:syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart": pdf_provider,
    "package:syncfusion_flutter_pdfviewer/src/bookmark/bookmark_view.dart": bookmark_view,
    "package:syncfusion_flutter_pdfviewer/src/control/single_page_view.dart": single_page_view,
    "package:syncfusion_flutter_pdfviewer/src/control/pdfviewer_canvas.dart": pdfviewer_canvas,
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_status.dart": scroll_status,
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head.dart": scroll_head,
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head_overlay.dart": scroll_head_overlay,
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_scrollable.dart": pdf_scrollable,
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_page_view.dart": pdf_page_view,
    "package:syncfusion_flutter_pdfviewer/src/pdfviewer.dart": pdfviewer,
    "package:syncfusion_flutter_pdfviewer/pdfviewer.dart": pdfviewer$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["pdf_provider.dart","../bookmark/bookmark_view.dart","../control/single_page_view.dart","../control/pdfviewer_canvas.dart","../control/scroll_status.dart","../control/scroll_head.dart","../control/scroll_head_overlay.dart","../control/pdf_scrollable.dart","../control/pdf_page_view.dart","../pdfviewer.dart"],"names":[],"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","file":"../../../../../../../../../E:/packages/syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart.lib.js"}');
  // Exports:
  return {
    src__common__pdf_provider: pdf_provider,
    src__bookmark__bookmark_view: bookmark_view,
    src__control__single_page_view: single_page_view,
    src__control__pdfviewer_canvas: pdfviewer_canvas,
    src__control__scroll_status: scroll_status,
    src__control__scroll_head: scroll_head,
    src__control__scroll_head_overlay: scroll_head_overlay,
    src__control__pdf_scrollable: pdf_scrollable,
    src__control__pdf_page_view: pdf_page_view,
    src__pdfviewer: pdfviewer,
    pdfviewer: pdfviewer$
  };
}));

//# sourceMappingURL=pdf_provider.dart.lib.js.map
